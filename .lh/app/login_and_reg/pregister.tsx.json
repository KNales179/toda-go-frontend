{
    "sourceFile": "app/login_and_reg/pregister.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1743953646912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744170174872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,6 @@\n import React, { useState } from \"react\";\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  TextInput,\r\n-  TouchableOpacity,\r\n-  StyleSheet,\r\n-  Alert,\r\n-  StatusBar,\r\n-} from \"react-native\";\r\n-import { auth } from \"../database/firebase-config\"; // Firebase Authentication\r\n-import { createUserWithEmailAndPassword } from \"firebase/auth\"; // Firebase Auth Method\r\n+import { View, Text, TextInput, TouchableOpacity, Alert, StyleSheet, StatusBar } from \"react-native\";\r\n import { useRouter } from \"expo-router\";\r\n \r\n export default function PRegister() {\r\n   const [name, setName] = useState(\"\");\r\n@@ -19,131 +9,101 @@\n   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n   const router = useRouter();\r\n \r\n   const handleRegister = async () => {\r\n+    console.log(\"Register button pressed\");\r\n+  \r\n+    if (!name || !email || !password || !confirmPassword) {\r\n+      Alert.alert(\"Error\", \"Please fill in all fields\");\r\n+      return;\r\n+    }\r\n+  \r\n     if (password !== confirmPassword) {\r\n       Alert.alert(\"Error\", \"Passwords do not match\");\r\n       return;\r\n     }\r\n-\r\n+  \r\n     try {\r\n-      // Register user in Firebase Authentication\r\n-      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n-      const user = userCredential.user;\r\n-\r\n-      // Optionally store additional user info in Firestore\r\n-      // You could use Firestore to save user profile info here\r\n-\r\n-      Alert.alert(\"Success\", \"Registration Successful\");\r\n-      router.push(\"/login_and_reg/plogin\"); // Navigate to login page after successful registration\r\n-    } catch (error: any) {\r\n-      console.error(\"Registration error:\", error.message);\r\n-      Alert.alert(\"Registration Failed\", error.message); // Show error message\r\n+      const response = await fetch(\"http://192.168.192.178:5000/api/auth/register-Passenger\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ name, email, password }),\r\n+      });\r\n+  \r\n+      const data = await response.json();\r\n+      console.log(\"Response:\", data);\r\n+  \r\n+      if (response.ok) {\r\n+        Alert.alert(\"Success\", data.message);\r\n+        router.push(\"/login_and_reg/plogin\");\r\n+      } else {\r\n+        Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Registration error:\", error);\r\n+      Alert.alert(\"Error\", \"Something went wrong\");\r\n     }\r\n   };\r\n+  \r\n+  \r\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n-      \r\n-      <Text style={styles.title}>Create a New Account</Text>\r\n+      <Text style={styles.title}>Passenger Registration</Text>\r\n \r\n-      <View style={styles.inputContainer}>\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Full Name\"\r\n-          value={name}\r\n-          onChangeText={setName}\r\n-        />\r\n-      </View>\r\n+      <TextInput style={styles.input} placeholder=\"Full Name\" value={name} onChangeText={setName} />\r\n+      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n+      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n \r\n-      <View style={styles.inputContainer}>\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Email Address\"\r\n-          keyboardType=\"email-address\"\r\n-          value={email}\r\n-          onChangeText={setEmail}\r\n-        />\r\n-      </View>\r\n-\r\n-      <View style={styles.inputContainer}>\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Password\"\r\n-          secureTextEntry\r\n-          value={password}\r\n-          onChangeText={setPassword}\r\n-        />\r\n-      </View>\r\n-\r\n-      <View style={styles.inputContainer}>\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Confirm Password\"\r\n-          secureTextEntry\r\n-          value={confirmPassword}\r\n-          onChangeText={setConfirmPassword}\r\n-        />\r\n-      </View>\r\n-\r\n-      <TouchableOpacity style={styles.registerBtn} onPress={handleRegister}>\r\n-        <Text style={styles.registerText}>Register</Text>\r\n+      <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n+        <Text style={styles.buttonText}>Register</Text>\r\n       </TouchableOpacity>\r\n \r\n-      <Text style={styles.loginPrompt}>\r\n-        Already have an account?{\" \"}\r\n-        <Text style={styles.loginLink} onPress={() => router.push(\"/login_and_reg/plogin\")}>\r\n-          Log In\r\n-        </Text>\r\n+      <Text style={styles.switchText}>\r\n+        Already have an account? <Text style={styles.link} onPress={() => router.push(\"/login_and_reg/plogin\")}>Log In</Text>\r\n       </Text>\r\n     </View>\r\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: {\r\n-    flex: 1,\r\n-    backgroundColor: \"#fff\",\r\n-    alignItems: \"center\",\r\n-    padding: 20,\r\n+  container: { \r\n+    flex: 1, \r\n+    alignItems: \"center\", \r\n+    justifyContent: \"center\", \r\n+    padding: 20 \r\n   },\r\n-  title: {\r\n-    fontSize: 24,\r\n-    fontWeight: \"bold\",\r\n-    marginVertical: 40,\r\n+  title: { \r\n+    fontSize: 24, \r\n+    fontWeight: \"bold\", \r\n+    marginBottom: 30 \r\n   },\r\n-  inputContainer: {\r\n-    width: \"100%\",\r\n-    marginBottom: 15,\r\n-    borderWidth: 1,\r\n-    borderColor: \"#D1D1D1\",\r\n-    borderRadius: 8,\r\n-    padding: 10,\r\n+  input: { \r\n+    width: \"100%\", \r\n+    borderWidth: 1, \r\n+    borderColor: \"#ccc\", \r\n+    padding: 10, \r\n+    marginBottom: 15, \r\n+    borderRadius: 8 \r\n   },\r\n-  input: {\r\n-    fontSize: 16,\r\n-    color: \"#414141\",\r\n+  button: { \r\n+    backgroundColor: \"#5089A3\", \r\n+    padding: 15, \r\n+    borderRadius: 8, \r\n+    width: \"100%\", \r\n+    alignItems: \"center\" \r\n   },\r\n-  registerBtn: {\r\n-    backgroundColor: \"#5089A3\",\r\n-    borderRadius: 8,\r\n-    paddingVertical: 14,\r\n-    alignItems: \"center\",\r\n-    marginTop: 30,\r\n-    width: \"100%\",\r\n+  buttonText: { \r\n+    color: \"#fff\", \r\n+    fontWeight: \"bold\", \r\n+    fontSize: 16 \r\n   },\r\n-  registerText: {\r\n-    color: \"#fff\",\r\n-    fontSize: 16,\r\n-    fontWeight: \"bold\",\r\n+  switchText: { \r\n+    marginTop: 20 \r\n   },\r\n-  loginPrompt: {\r\n-    marginTop: 20,\r\n-    fontSize: 14,\r\n-    color: \"#414141\",\r\n+  link: {\r\n+    color: \"#5089A3\", \r\n+    fontWeight: \"bold\" \r\n   },\r\n-  loginLink: {\r\n-    color: \"#5089A3\",\r\n-    fontWeight: \"600\",\r\n-  },\r\n });\r\n"
                },
                {
                    "date": 1744170998784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,51 +1,45 @@\n-import React, { useState } from \"react\";\r\n-import { View, Text, TextInput, TouchableOpacity, Alert, StyleSheet, StatusBar } from \"react-native\";\r\n-import { useRouter } from \"expo-router\";\r\n+import React, { useState } from 'react';\r\n+import { View, Text, TextInput, TouchableOpacity, Alert, StyleSheet, StatusBar } from 'react-native';\r\n+import { useRouter } from 'expo-router';\r\n \r\n export default function PRegister() {\r\n-  const [name, setName] = useState(\"\");\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [name, setName] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n   const router = useRouter();\r\n \r\n   const handleRegister = async () => {\r\n-    console.log(\"Register button pressed\");\r\n-  \r\n     if (!name || !email || !password || !confirmPassword) {\r\n-      Alert.alert(\"Error\", \"Please fill in all fields\");\r\n+      Alert.alert('Error', 'Please fill in all fields');\r\n       return;\r\n     }\r\n-  \r\n+\r\n     if (password !== confirmPassword) {\r\n-      Alert.alert(\"Error\", \"Passwords do not match\");\r\n+      Alert.alert('Error', 'Passwords do not match');\r\n       return;\r\n     }\r\n-  \r\n+\r\n     try {\r\n-      const response = await fetch(\"http://192.168.192.178:5000/api/auth/register-Passenger\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n+      const response = await fetch('http://192.168.192.178:5000/api/auth/register-passenger', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({ name, email, password }),\r\n       });\r\n-  \r\n+\r\n       const data = await response.json();\r\n-      console.log(\"Response:\", data);\r\n-  \r\n+\r\n       if (response.ok) {\r\n-        Alert.alert(\"Success\", data.message);\r\n-        router.push(\"/login_and_reg/plogin\");\r\n+        Alert.alert('Success', data.message);\r\n+        router.push('/login_and_reg/plogin');\r\n       } else {\r\n-        Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n+        Alert.alert('Error', data.error || 'Registration failed');\r\n       }\r\n     } catch (error) {\r\n-      console.error(\"Registration error:\", error);\r\n-      Alert.alert(\"Error\", \"Something went wrong\");\r\n+      Alert.alert('Error', 'Network request failed');\r\n     }\r\n   };\r\n-  \r\n-  \r\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n@@ -60,14 +54,16 @@\n         <Text style={styles.buttonText}>Register</Text>\r\n       </TouchableOpacity>\r\n \r\n       <Text style={styles.switchText}>\r\n-        Already have an account? <Text style={styles.link} onPress={() => router.push(\"/login_and_reg/plogin\")}>Log In</Text>\r\n+        Already have an account?{' '}\r\n+        <Text style={styles.link} onPress={() => router.push('/login_and_reg/plogin')}>\r\n+          Log In\r\n+        </Text>\r\n       </Text>\r\n     </View>\r\n   );\r\n }\r\n-\r\n const styles = StyleSheet.create({\r\n   container: { \r\n     flex: 1, \r\n     alignItems: \"center\", \r\n"
                },
                {
                    "date": 1744171166924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n       return;\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch('http://192.168.192.178:5000/api/auth/register-passenger', {\r\n+      const response = await fetch('http://192.168.1.28:5000/api/auth/register-passenger', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({ name, email, password }),\r\n       });\r\n"
                },
                {
                    "date": 1744696280081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,57 @@\n import React, { useState } from 'react';\r\n import { View, Text, TextInput, TouchableOpacity, Alert, StyleSheet, StatusBar } from 'react-native';\r\n import { useRouter } from 'expo-router';\r\n+import API_BASE_URL from \"../../config\";\r\n \r\n+\r\n export default function PRegister() {\r\n   const [name, setName] = useState('');\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const router = useRouter();\r\n \r\n   const handleRegister = async () => {\r\n+    console.log(\"Register function called\"); // ✅ checkpoint\r\n+  \r\n     if (!name || !email || !password || !confirmPassword) {\r\n+      console.log(\"Missing fields\");\r\n       Alert.alert('Error', 'Please fill in all fields');\r\n       return;\r\n     }\r\n-\r\n+  \r\n     if (password !== confirmPassword) {\r\n+      console.log(\"Password mismatch\");\r\n       Alert.alert('Error', 'Passwords do not match');\r\n       return;\r\n     }\r\n-\r\n+  \r\n     try {\r\n-      const response = await fetch('http://192.168.1.28:5000/api/auth/register-passenger', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n+      console.log(\"Sending fetch...\");\r\n+      const response = await fetch(`${API_BASE_URL}/api/auth/passenger/register-passenger`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ name, email, password }),\r\n       });\r\n-\r\n+  \r\n       const data = await response.json();\r\n-\r\n+      console.log(\"Fetch complete\", data);\r\n+      console.log(\"✅ Got response!\", response); \r\n+  \r\n       if (response.ok) {\r\n         Alert.alert('Success', data.message);\r\n         router.push('/login_and_reg/plogin');\r\n       } else {\r\n         Alert.alert('Error', data.error || 'Registration failed');\r\n       }\r\n     } catch (error) {\r\n-      Alert.alert('Error', 'Network request failed');\r\n+      console.log(\"❌ Error during fetch:\", error);\r\n+      console.error(\"Registration error:\", error);\r\n+      Alert.alert('Error', 'Network request failed. Please check your connection or server.');\r\n     }\r\n   };\r\n+  \r\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n"
                },
                {
                    "date": 1745134715192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,64 +1,74 @@\n import React, { useState } from 'react';\r\n-import { View, Text, TextInput, TouchableOpacity, Alert, StyleSheet, StatusBar } from 'react-native';\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TextInput,\r\n+  TouchableOpacity,\r\n+  Alert,\r\n+  StyleSheet,\r\n+  StatusBar\r\n+} from 'react-native';\r\n import { useRouter } from 'expo-router';\r\n-import API_BASE_URL from \"../../config\";\r\n+import API_BASE_URL from '../../config';\r\n \r\n-\r\n export default function PRegister() {\r\n-  const [name, setName] = useState('');\r\n+  const [firstname, setFirstname] = useState('');\r\n+  const [middlename, setMiddlename] = useState('');\r\n+  const [lastname, setLastname] = useState('');\r\n+  const [birthday, setBirthday] = useState('');\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const router = useRouter();\r\n \r\n   const handleRegister = async () => {\r\n-    console.log(\"Register function called\"); // ✅ checkpoint\r\n-  \r\n-    if (!name || !email || !password || !confirmPassword) {\r\n-      console.log(\"Missing fields\");\r\n-      Alert.alert('Error', 'Please fill in all fields');\r\n+    if (!firstname || !middlename || !lastname || !birthday || !email || !password || !confirmPassword) {\r\n+      Alert.alert('Error', 'Please fill in all required fields');\r\n       return;\r\n     }\r\n-  \r\n+\r\n     if (password !== confirmPassword) {\r\n-      console.log(\"Password mismatch\");\r\n       Alert.alert('Error', 'Passwords do not match');\r\n       return;\r\n     }\r\n-  \r\n+\r\n     try {\r\n-      console.log(\"Sending fetch...\");\r\n       const response = await fetch(`${API_BASE_URL}/api/auth/passenger/register-passenger`, {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ name, email, password }),\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          firstname,\r\n+          middlename,\r\n+          lastname,\r\n+          birthday,\r\n+          email,\r\n+          password\r\n+        })\r\n       });\r\n-  \r\n+\r\n       const data = await response.json();\r\n-      console.log(\"Fetch complete\", data);\r\n-      console.log(\"✅ Got response!\", response); \r\n-  \r\n+\r\n       if (response.ok) {\r\n         Alert.alert('Success', data.message);\r\n         router.push('/login_and_reg/plogin');\r\n       } else {\r\n         Alert.alert('Error', data.error || 'Registration failed');\r\n       }\r\n     } catch (error) {\r\n-      console.log(\"❌ Error during fetch:\", error);\r\n-      console.error(\"Registration error:\", error);\r\n-      Alert.alert('Error', 'Network request failed. Please check your connection or server.');\r\n+      Alert.alert('Error', 'Network request failed');\r\n     }\r\n   };\r\n-  \r\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n       <Text style={styles.title}>Passenger Registration</Text>\r\n \r\n-      <TextInput style={styles.input} placeholder=\"Full Name\" value={name} onChangeText={setName} />\r\n+      <TextInput style={styles.input} placeholder=\"First Name\" value={firstname} onChangeText={setFirstname} />\r\n+      <TextInput style={styles.input} placeholder=\"Middle Name\" value={middlename} onChangeText={setMiddlename} />\r\n+      <TextInput style={styles.input} placeholder=\"Last Name\" value={lastname} onChangeText={setLastname} />\r\n+      <TextInput style={styles.input} placeholder=\"Birthday (YYYY-MM-DD)\" value={birthday} onChangeText={setBirthday} />\r\n       <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n       <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n       <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n \r\n@@ -74,44 +84,45 @@\n       </Text>\r\n     </View>\r\n   );\r\n }\r\n+\r\n const styles = StyleSheet.create({\r\n-  container: { \r\n-    flex: 1, \r\n-    alignItems: \"center\", \r\n-    justifyContent: \"center\", \r\n-    padding: 20 \r\n+  container: {\r\n+    flex: 1,\r\n+    alignItems: 'center',\r\n+    justifyContent: 'center',\r\n+    padding: 20\r\n   },\r\n-  title: { \r\n-    fontSize: 24, \r\n-    fontWeight: \"bold\", \r\n-    marginBottom: 30 \r\n+  title: {\r\n+    fontSize: 24,\r\n+    fontWeight: 'bold',\r\n+    marginBottom: 30\r\n   },\r\n-  input: { \r\n-    width: \"100%\", \r\n-    borderWidth: 1, \r\n-    borderColor: \"#ccc\", \r\n-    padding: 10, \r\n-    marginBottom: 15, \r\n-    borderRadius: 8 \r\n+  input: {\r\n+    width: '100%',\r\n+    borderWidth: 1,\r\n+    borderColor: '#ccc',\r\n+    padding: 10,\r\n+    marginBottom: 15,\r\n+    borderRadius: 8\r\n   },\r\n-  button: { \r\n-    backgroundColor: \"#5089A3\", \r\n-    padding: 15, \r\n-    borderRadius: 8, \r\n-    width: \"100%\", \r\n-    alignItems: \"center\" \r\n+  button: {\r\n+    backgroundColor: '#5089A3',\r\n+    padding: 15,\r\n+    borderRadius: 8,\r\n+    width: '100%',\r\n+    alignItems: 'center'\r\n   },\r\n-  buttonText: { \r\n-    color: \"#fff\", \r\n-    fontWeight: \"bold\", \r\n-    fontSize: 16 \r\n+  buttonText: {\r\n+    color: '#fff',\r\n+    fontWeight: 'bold',\r\n+    fontSize: 16\r\n   },\r\n-  switchText: { \r\n-    marginTop: 20 \r\n+  switchText: {\r\n+    marginTop: 20\r\n   },\r\n   link: {\r\n-    color: \"#5089A3\", \r\n-    fontWeight: \"bold\" \r\n-  },\r\n+    color: '#5089A3',\r\n+    fontWeight: 'bold'\r\n+  }\r\n });\r\n"
                },
                {
                    "date": 1745135100263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,22 @@\n   TextInput,\r\n   TouchableOpacity,\r\n   Alert,\r\n   StyleSheet,\r\n-  StatusBar\r\n+  StatusBar,\r\n+  Platform\r\n } from 'react-native';\r\n+import DateTimePicker from '@react-native-community/datetimepicker';\r\n import { useRouter } from 'expo-router';\r\n import API_BASE_URL from '../../config';\r\n \r\n export default function PRegister() {\r\n   const [firstname, setFirstname] = useState('');\r\n   const [middlename, setMiddlename] = useState('');\r\n   const [lastname, setLastname] = useState('');\r\n   const [birthday, setBirthday] = useState('');\r\n+  const [showDatePicker, setShowDatePicker] = useState(false);\r\n+\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const router = useRouter();\r\n@@ -58,17 +62,40 @@\n       Alert.alert('Error', 'Network request failed');\r\n     }\r\n   };\r\n \r\n+  const handleDateChange = (event, selectedDate) => {\r\n+    setShowDatePicker(Platform.OS === 'ios'); // Keep showing for iOS\r\n+    if (selectedDate) {\r\n+      const formatted = selectedDate.toISOString().split('T')[0];\r\n+      setBirthday(formatted);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n       <Text style={styles.title}>Passenger Registration</Text>\r\n \r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={firstname} onChangeText={setFirstname} />\r\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={middlename} onChangeText={setMiddlename} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={lastname} onChangeText={setLastname} />\r\n-      <TextInput style={styles.input} placeholder=\"Birthday (YYYY-MM-DD)\" value={birthday} onChangeText={setBirthday} />\r\n+\r\n+      <TouchableOpacity style={styles.input} onPress={() => setShowDatePicker(true)}>\r\n+        <Text style={{ color: birthday ? 'black' : '#aaa' }}>\r\n+          {birthday ? birthday : 'Select Birthday'}\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n+      {showDatePicker && (\r\n+        <DateTimePicker\r\n+          value={birthday ? new Date(birthday) : new Date()}\r\n+          mode=\"date\"\r\n+          display=\"default\"\r\n+          onChange={handleDateChange}\r\n+          maximumDate={new Date()} // can't select future\r\n+        />\r\n+      )}\r\n+\r\n       <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n       <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n       <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n \r\n@@ -101,11 +128,11 @@\n   input: {\r\n     width: '100%',\r\n     borderWidth: 1,\r\n     borderColor: '#ccc',\r\n-    padding: 10,\r\n-    marginBottom: 15,\r\n-    borderRadius: 8\r\n+    padding: 12,\r\n+    borderRadius: 8,\r\n+    marginBottom: 15\r\n   },\r\n   button: {\r\n     backgroundColor: '#5089A3',\r\n     padding: 15,\r\n"
                },
                {
                    "date": 1745135222359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   StyleSheet,\r\n   StatusBar,\r\n   Platform\r\n } from 'react-native';\r\n-import DateTimePicker from '@react-native-community/datetimepicker';\r\n+import { DateTimePickerEvent } from '@react-native-community/datetimepicker';\r\n import { useRouter } from 'expo-router';\r\n import API_BASE_URL from '../../config';\r\n \r\n export default function PRegister() {\r\n@@ -62,10 +62,11 @@\n       Alert.alert('Error', 'Network request failed');\r\n     }\r\n   };\r\n \r\n-  const handleDateChange = (event, selectedDate) => {\r\n-    setShowDatePicker(Platform.OS === 'ios'); // Keep showing for iOS\r\n+  const handleDateChange = (event: DateTimePickerEvent, selectedDate?: Date) => {\r\n+    setShowDatePicker(Platform.OS === 'ios'); \r\n+  \r\n     if (selectedDate) {\r\n       const formatted = selectedDate.toISOString().split('T')[0];\r\n       setBirthday(formatted);\r\n     }\r\n"
                },
                {
                    "date": 1745135288400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n   StatusBar,\r\n   Platform\r\n } from 'react-native';\r\n import { DateTimePickerEvent } from '@react-native-community/datetimepicker';\r\n+import DateTimePicker from '@react-native-community/datetimepicker';\r\n import { useRouter } from 'expo-router';\r\n import API_BASE_URL from '../../config';\r\n \r\n export default function PRegister() {\r\n"
                },
                {
                    "date": 1745135426598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n   StyleSheet,\r\n   StatusBar,\r\n   Platform\r\n } from 'react-native';\r\n-import { DateTimePickerEvent } from '@react-native-community/datetimepicker';\r\n-import DateTimePicker from '@react-native-community/datetimepicker';\r\n+import DateTimePicker, { DateTimePickerEvent } from '@react-native-community/datetimepicker';\r\n+\r\n import { useRouter } from 'expo-router';\r\n import API_BASE_URL from '../../config';\r\n \r\n export default function PRegister() {\r\n"
                },
                {
                    "date": 1745135689707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n         </Text>\r\n       </TouchableOpacity>\r\n       {showDatePicker && (\r\n         <DateTimePicker\r\n-          value={birthday ? new Date(birthday) : new Date()}\r\n+          value={birthday && !isNaN(new Date(birthday).getTime()) ? new Date(birthday) : new Date()}\r\n           mode=\"date\"\r\n           display=\"default\"\r\n           onChange={handleDateChange}\r\n           maximumDate={new Date()} // can't select future\r\n"
                },
                {
                    "date": 1745334402766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,11 @@\n       const response = await fetch(`${API_BASE_URL}/api/auth/passenger/register-passenger`, {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n-          firstname,\r\n-          middlename,\r\n-          lastname,\r\n+          firstName: firstname,\r\n+          middleName: middlename,\r\n+          lastName: lastname,\r\n           birthday,\r\n           email,\r\n           password\r\n         })\r\n"
                },
                {
                    "date": 1746361824730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n } from 'react-native';\r\n import DateTimePicker, { DateTimePickerEvent } from '@react-native-community/datetimepicker';\r\n \r\n import { useRouter } from 'expo-router';\r\n-import API_BASE_URL from '../../config';\r\n+import {API_BASE_URL} from '../../config';\r\n \r\n export default function PRegister() {\r\n   const [firstname, setFirstname] = useState('');\r\n   const [middlename, setMiddlename] = useState('');\r\n@@ -37,8 +37,9 @@\n       return;\r\n     }\r\n \r\n     try {\r\n+      console.log(\"API_BASE_URL is\", API_BASE_URL);\r\n       const response = await fetch(`${API_BASE_URL}/api/auth/passenger/register-passenger`, {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n"
                }
            ],
            "date": 1743953646912,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { auth } from \"../database/firebase-config\"; // Firebase Authentication\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\"; // Firebase Auth Method\r\nimport { useRouter } from \"expo-router\";\r\n\r\nexport default function PRegister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  const handleRegister = async () => {\r\n    if (password !== confirmPassword) {\r\n      Alert.alert(\"Error\", \"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Register user in Firebase Authentication\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n\r\n      // Optionally store additional user info in Firestore\r\n      // You could use Firestore to save user profile info here\r\n\r\n      Alert.alert(\"Success\", \"Registration Successful\");\r\n      router.push(\"/login_and_reg/plogin\"); // Navigate to login page after successful registration\r\n    } catch (error: any) {\r\n      console.error(\"Registration error:\", error.message);\r\n      Alert.alert(\"Registration Failed\", error.message); // Show error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n      \r\n      <Text style={styles.title}>Create a New Account</Text>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Full Name\"\r\n          value={name}\r\n          onChangeText={setName}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Email Address\"\r\n          keyboardType=\"email-address\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          value={password}\r\n          onChangeText={setPassword}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Confirm Password\"\r\n          secureTextEntry\r\n          value={confirmPassword}\r\n          onChangeText={setConfirmPassword}\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.registerBtn} onPress={handleRegister}>\r\n        <Text style={styles.registerText}>Register</Text>\r\n      </TouchableOpacity>\r\n\r\n      <Text style={styles.loginPrompt}>\r\n        Already have an account?{\" \"}\r\n        <Text style={styles.loginLink} onPress={() => router.push(\"/login_and_reg/plogin\")}>\r\n          Log In\r\n        </Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginVertical: 40,\r\n  },\r\n  inputContainer: {\r\n    width: \"100%\",\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: \"#D1D1D1\",\r\n    borderRadius: 8,\r\n    padding: 10,\r\n  },\r\n  input: {\r\n    fontSize: 16,\r\n    color: \"#414141\",\r\n  },\r\n  registerBtn: {\r\n    backgroundColor: \"#5089A3\",\r\n    borderRadius: 8,\r\n    paddingVertical: 14,\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n    width: \"100%\",\r\n  },\r\n  registerText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  loginPrompt: {\r\n    marginTop: 20,\r\n    fontSize: 14,\r\n    color: \"#414141\",\r\n  },\r\n  loginLink: {\r\n    color: \"#5089A3\",\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n"
        }
    ]
}