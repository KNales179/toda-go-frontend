{
    "sourceFile": "app/login_and_reg/alogin.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1745842177876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745842581438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,21 @@\n         <TouchableOpacity style={styles.signInBtn} onPress={loginAdmin}>\r\n           <Text style={styles.signInText}>Sign In</Text>\r\n         </TouchableOpacity>\r\n \r\n+        <View style={styles.divider}>\r\n+            <View style={styles.line} />\r\n+            <Text style={styles.orText}>or</Text>\r\n+            <View style={styles.line} />\r\n+        </View>\r\n+\r\n+        <Text style={styles.signupPrompt}>\r\n+            Don't have an account?{\" \"}\r\n+            <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/pregister\")}>\r\n+            Sign Up\r\n+            </Text>\r\n+        </Text>\r\n+\r\n       </View>\r\n     </View>\r\n   );\r\n }\r\n@@ -133,5 +146,10 @@\n     alignItems: \"center\",\r\n     marginBottom: 25,\r\n   },\r\n   signInText: { color: \"#fff\", fontSize: 16, fontWeight: \"bold\" },\r\n+  divider: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 25 },\r\n+  line: { flex: 1, height: 1, backgroundColor: \"#D1D1D1\" },\r\n+  orText: { marginHorizontal: 10, color: \"#A0A0A0\" },\r\n+  signupPrompt: { textAlign: \"center\", fontSize: 14, color: \"#414141\" },\r\n+  signupLink: { color: \"#5089A3\", fontWeight: \"600\" },\r\n });\r\n"
                },
                {
                    "date": 1745845188971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n         </View>\r\n \r\n         <Text style={styles.signupPrompt}>\r\n             Don't have an account?{\" \"}\r\n-            <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/pregister\")}>\r\n+            <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/aregister\")}>\r\n             Sign Up\r\n             </Text>\r\n         </Text>\r\n \r\n"
                },
                {
                    "date": 1745846975272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \r\n       if (response.ok) {\r\n         Alert.alert(\"Login Successful\", \"Welcome Admin!\");\r\n         console.log(\"Admin ID:\", data.adminId);\r\n-        router.push(\"../adminpages/ahome\"); // 🔥 After login, push to Admin Home Page\r\n+        router.push(\"../homeadmin/ahome\"); // 🔥 After login, push to Admin Home Page\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n \r\n"
                },
                {
                    "date": 1746361744652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   Alert,\r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n-import API_BASE_URL from \"../../config\"; // 🔥 make sure you have this\r\n+import {API_BASE_URL} from \"../../config\"; // 🔥 make sure you have this\r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n export default function ALogin() {\r\n@@ -24,8 +24,9 @@\n   const router = useRouter();\r\n \r\n   const loginAdmin = async () => {\r\n     try {\r\n+      console.log(\"API_BASE_URL is\", API_BASE_URL);\r\n       const response = await fetch(`${API_BASE_URL}/api/admin/login-admin`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email, password: pass }),\r\n"
                }
            ],
            "date": 1745842177876,
            "name": "Commit-0",
            "content": "// 📍 Admin Login Page - alogin.tsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Dimensions,\r\n  TextInput,\r\n  StatusBar,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useRouter } from \"expo-router\";\r\nimport API_BASE_URL from \"../../config\"; // 🔥 make sure you have this\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nexport default function ALogin() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const router = useRouter();\r\n\r\n  const loginAdmin = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/admin/login-admin`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password: pass }),\r\n      });\r\n\r\n      const text = await response.text(); // 🔥 Read raw response first\r\n      console.log(\"Raw server response:\", text);\r\n\r\n      let data;\r\n      try {\r\n        data = JSON.parse(text);\r\n      } catch (jsonError) {\r\n        console.error(\"Server did not return JSON:\", text);\r\n        throw new Error(\"Invalid server response: not JSON\");\r\n      }\r\n\r\n      if (response.ok) {\r\n        Alert.alert(\"Login Successful\", \"Welcome Admin!\");\r\n        console.log(\"Admin ID:\", data.adminId);\r\n        router.push(\"../adminpages/ahome\"); // 🔥 After login, push to Admin Home Page\r\n      } else {\r\n        Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error(\"Login error (catch block):\", error);\r\n      const errorMessage = error?.message || \"An error occurred during login\";\r\n      Alert.alert(\"Login Failed\", errorMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n      <View style={styles.inner}>\r\n        <TouchableOpacity onPress={() => router.back()}>\r\n          <Text style={styles.back}>Back</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.title}>Admin Sign In</Text>\r\n\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Admin Email\"\r\n            placeholderTextColor=\"#A0A0A0\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter Your Password\"\r\n            placeholderTextColor=\"#A0A0A0\"\r\n            secureTextEntry={!isPasswordVisible}\r\n            value={pass}\r\n            onChangeText={setPass}\r\n          />\r\n          <TouchableOpacity onPress={() => setIsPasswordVisible(prev => !prev)}>\r\n            <MaterialIcons\r\n              name={isPasswordVisible ? \"visibility\" : \"visibility-off\"}\r\n              size={20}\r\n              color=\"#A0A0A0\"\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <TouchableOpacity style={styles.forgot}>\r\n          <Text style={styles.forgotText}>Forget password?</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.signInBtn} onPress={loginAdmin}>\r\n          <Text style={styles.signInText}>Sign In</Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: \"#fff\", alignItems: \"center\" },\r\n  inner: { width: width * 0.85, paddingTop: 60 },\r\n  back: { fontSize: 16, color: \"#414141\", marginBottom: 20 },\r\n  title: { fontSize: 20, color: \"#414141\", fontWeight: \"600\", marginBottom: 30 },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderWidth: 1,\r\n    borderColor: \"#D1D1D1\",\r\n    borderRadius: 8,\r\n    paddingHorizontal: 10,\r\n    height: 48,\r\n    marginBottom: 15,\r\n  },\r\n  input: { flex: 1, fontSize: 16, color: \"#414141\" },\r\n  forgot: { alignSelf: \"flex-end\", marginBottom: 30 },\r\n  forgotText: { color: \"#DD1F1F\", fontSize: 13 },\r\n  signInBtn: {\r\n    backgroundColor: \"#5089A3\",\r\n    borderRadius: 8,\r\n    paddingVertical: 14,\r\n    alignItems: \"center\",\r\n    marginBottom: 25,\r\n  },\r\n  signInText: { color: \"#fff\", fontSize: 16, fontWeight: \"bold\" },\r\n});\r\n"
        }
    ]
}