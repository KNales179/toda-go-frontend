{
    "sourceFile": "app/login_and_reg/dregister.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 253,
            "patches": [
                {
                    "date": 1744704902866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744705109351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,11 @@\n       quality: 1,\r\n     });\r\n \r\n     if (!result.canceled) {\r\n-      setPhoto(result.assets[0].uri);\r\n+      if (result.assets && result.assets.length > 0) {\r\n+        setPhoto(result.assets[0].uri);\r\n+      }      \r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1744705261249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,14 @@\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n \r\n-    if (!result.canceled) {\r\n-      if (result.assets && result.assets.length > 0) {\r\n-        setPhoto(result.assets[0].uri);\r\n-      }      \r\n-    }\r\n+    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n+      const asset = result.assets[0];\r\n+      if (asset && 'uri' in asset) {\r\n+        setPhoto(asset.uri);\r\n+      }\r\n+    }        \r\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n"
                },
                {
                    "date": 1744705562950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n         <Image\r\n-          source={photo ? { uri: photo } : require(\"../assets/profile-placeholder.png\")}\r\n+          source={photo ? { uri: photo } : require(\"../assets/images/profile-placeholder.jpeg\")}\r\n           style={styles.image}\r\n         />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n"
                },
                {
                    "date": 1744705583789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n         <Image\r\n-          source={photo ? { uri: photo } : require(\"../assets/images/profile-placeholder.jpeg\")}\r\n+          source={photo ? { uri: photo } : require(\"../assets/images/profile-placeholder.jpg\")}\r\n           style={styles.image}\r\n         />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n"
                },
                {
                    "date": 1744705763214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n         <Image\r\n-          source={photo ? { uri: photo } : require(\"../assets/images/profile-placeholder.jpg\")}\r\n+          source={photo ? { uri: photo } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n           style={styles.image}\r\n         />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n"
                },
                {
                    "date": 1744706247111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,11 @@\n import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n   const [photo, setPhoto] = useState(null);\r\n+  const [isSamePerson, setIsSamePerson] = useState(true);\r\n+\r\n+  // Shared fields\r\n   const [fullName, setFullName] = useState(\"\");\r\n   const [phone, setPhone] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [street, setStreet] = useState(\"\");\r\n@@ -21,8 +24,14 @@\n   const [province, setProvince] = useState(\"\");\r\n   const [registrationNumber, setRegistrationNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n \r\n+  // Operator fields (if not the same person)\r\n+  const [operatorName, setOperatorName] = useState(\"\");\r\n+  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n+  const [operatorAddress, setOperatorAddress] = useState(\"\");\r\n+  const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n+\r\n   const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n@@ -31,34 +40,133 @@\n     });\r\n \r\n     if (!result.canceled && result.assets && result.assets.length > 0) {\r\n       const asset = result.assets[0];\r\n-      if (asset && 'uri' in asset) {\r\n+      if (asset && \"uri\" in asset) {\r\n         setPhoto(asset.uri);\r\n       }\r\n-    }        \r\n+    }\r\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n         <Image\r\n-          source={photo ? { uri: photo } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n+          source={\r\n+            photo\r\n+              ? { uri: photo }\r\n+              : require(\"../../assets/images/profile-placeholder.jpg\")\r\n+          }\r\n           style={styles.image}\r\n         />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n \r\n-      <TextInput style={styles.input} placeholder=\"Buong Pangalan\" value={fullName} onChangeText={setFullName} />\r\n-      <TextInput style={styles.input} placeholder=\"Cellphone Number Driver\" value={phone} onChangeText={setPhone} keyboardType=\"phone-pad\" />\r\n-      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n-      <TextInput style={styles.input} placeholder=\"Street\" value={street} onChangeText={setStreet} />\r\n-      <TextInput style={styles.input} placeholder=\"Barangay\" value={barangay} onChangeText={setBarangay} />\r\n-      <TextInput style={styles.input} placeholder=\"City\" value={city} onChangeText={setCity} />\r\n-      <TextInput style={styles.input} placeholder=\"Province\" value={province} onChangeText={setProvince} />\r\n-      <TextInput style={styles.input} placeholder=\"Registration Number\" value={registrationNumber} onChangeText={setRegistrationNumber} />\r\n-      <TextInput style={styles.input} placeholder=\"Pangalan ng TODA\" value={todaName} onChangeText={setTodaName} />\r\n+      <Text style={{ marginBottom: 5, fontWeight: \"bold\" }}>\r\n+        Ikaw ba ay parehong Operator at Driver?\r\n+      </Text>\r\n+      <View style={{ flexDirection: \"row\", marginBottom: 15 }}>\r\n+        <TouchableOpacity\r\n+          style={[styles.option, isSamePerson && styles.selected]}\r\n+          onPress={() => setIsSamePerson(true)}\r\n+        >\r\n+          <Text>Oo</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity\r\n+          style={[styles.option, !isSamePerson && styles.selected]}\r\n+          onPress={() => setIsSamePerson(false)}\r\n+        >\r\n+          <Text>Hindi</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n \r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Buong Pangalan\"\r\n+        value={fullName}\r\n+        onChangeText={setFullName}\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Cellphone Number Driver\"\r\n+        value={phone}\r\n+        onChangeText={setPhone}\r\n+        keyboardType=\"phone-pad\"\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Email\"\r\n+        value={email}\r\n+        onChangeText={setEmail}\r\n+        keyboardType=\"email-address\"\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Street\"\r\n+        value={street}\r\n+        onChangeText={setStreet}\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Barangay\"\r\n+        value={barangay}\r\n+        onChangeText={setBarangay}\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"City\"\r\n+        value={city}\r\n+        onChangeText={setCity}\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Province\"\r\n+        value={province}\r\n+        onChangeText={setProvince}\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Registration Number\"\r\n+        value={registrationNumber}\r\n+        onChangeText={setRegistrationNumber}\r\n+      />\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        placeholder=\"Pangalan ng TODA\"\r\n+        value={todaName}\r\n+        onChangeText={setTodaName}\r\n+      />\r\n+\r\n+      {!isSamePerson && (\r\n+        <>\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Pangalan ng Operator\"\r\n+            value={operatorName}\r\n+            onChangeText={setOperatorName}\r\n+          />\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Cellphone Number ng Operator\"\r\n+            value={operatorPhone}\r\n+            onChangeText={setOperatorPhone}\r\n+            keyboardType=\"phone-pad\"\r\n+          />\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Address ng Operator\"\r\n+            value={operatorAddress}\r\n+            onChangeText={setOperatorAddress}\r\n+          />\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Voter’s ID ng Operator\"\r\n+            value={operatorVotersID}\r\n+            onChangeText={setOperatorVotersID}\r\n+          />\r\n+        </>\r\n+      )}\r\n+\r\n       <TouchableOpacity style={styles.button}>\r\n         <Text style={styles.buttonText}>Register</Text>\r\n       </TouchableOpacity>\r\n     </ScrollView>\r\n@@ -87,8 +195,20 @@\n     backgroundColor: \"#fff\",\r\n     borderRadius: 10,\r\n     padding: 2,\r\n   },\r\n+  option: {\r\n+    flex: 1,\r\n+    padding: 10,\r\n+    borderWidth: 1,\r\n+    borderRadius: 8,\r\n+    alignItems: \"center\",\r\n+    marginHorizontal: 5,\r\n+  },\r\n+  selected: {\r\n+    backgroundColor: \"#d0e8ff\",\r\n+    borderColor: \"#1e90ff\",\r\n+  },\r\n   input: {\r\n     width: \"100%\",\r\n     padding: 12,\r\n     borderWidth: 1,\r\n"
                },
                {
                    "date": 1744706438607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n   TouchableOpacity,\r\n   Image,\r\n   StyleSheet,\r\n   ScrollView,\r\n+  StatusBar,\r\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n@@ -48,8 +49,11 @@\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n+      <View style={{paddingTop: 30}}>\r\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+      </View>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n         <Image\r\n           source={\r\n             photo\r\n"
                },
                {
                    "date": 1744706475394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,8 +183,9 @@\n     padding: 20,\r\n   },\r\n   imageContainer: {\r\n     marginBottom: 20,\r\n+    marginTop: 20,\r\n     position: \"relative\",\r\n   },\r\n   image: {\r\n     width: 100,\r\n"
                },
                {
                    "date": 1744707387773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   Image,\r\n   StyleSheet,\r\n   ScrollView,\r\n   StatusBar,\r\n+  Alert,\r\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n@@ -40,27 +41,70 @@\n       quality: 1,\r\n     });\r\n \r\n     if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      const asset = result.assets[0];\r\n-      if (asset && \"uri\" in asset) {\r\n-        setPhoto(asset.uri);\r\n+      setPhoto(result.assets[0]);\r\n+    }\r\n+  };\r\n+\r\n+  const handleRegister = async () => {\r\n+    const formData = new FormData();\r\n+\r\n+    formData.append(\"isSamePerson\", isSamePerson);\r\n+\r\n+    formData.append(\"driverName\", fullName);\r\n+    formData.append(\"driverPhone\", phone);\r\n+    formData.append(\"email\", email);\r\n+    formData.append(\"street\", street);\r\n+    formData.append(\"barangay\", barangay);\r\n+    formData.append(\"city\", city);\r\n+    formData.append(\"province\", province);\r\n+    formData.append(\"franchiseNumber\", registrationNumber);\r\n+    formData.append(\"todaName\", todaName);\r\n+\r\n+    if (!isSamePerson) {\r\n+      formData.append(\"operatorName\", operatorName);\r\n+      formData.append(\"operatorPhone\", operatorPhone);\r\n+      formData.append(\"operatorAddress\", operatorAddress);\r\n+      formData.append(\"operatorVotersID\", operatorVotersID);\r\n+    }\r\n+\r\n+    if (photo) {\r\n+      formData.append(\"selfie\", {\r\n+        uri: photo.uri,\r\n+        type: \"image/jpeg\",\r\n+        name: \"driver_selfie.jpg\",\r\n+      });\r\n+    }\r\n+\r\n+    try {\r\n+      const response = await fetch(\"https://toda-go-backend-1.onrender.com/api/auth/driver/register-driver\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+        },\r\n+        body: formData,\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+      if (response.ok) {\r\n+        Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n+      } else {\r\n+        console.error(\"Registration failed\", data);\r\n+        Alert.alert(\"Error\", data?.error || \"Registration failed\");\r\n       }\r\n+    } catch (error) {\r\n+      console.error(\"Fetch error\", error);\r\n+      Alert.alert(\"Error\", \"Something went wrong\");\r\n     }\r\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n-      <View style={{paddingTop: 30}}>\r\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n-      </View>\r\n+      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n         <Image\r\n-          source={\r\n-            photo\r\n-              ? { uri: photo }\r\n-              : require(\"../../assets/images/profile-placeholder.jpg\")\r\n-          }\r\n+          source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n           style={styles.image}\r\n         />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n@@ -82,96 +126,28 @@\n           <Text>Hindi</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n \r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Buong Pangalan\"\r\n-        value={fullName}\r\n-        onChangeText={setFullName}\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Cellphone Number Driver\"\r\n-        value={phone}\r\n-        onChangeText={setPhone}\r\n-        keyboardType=\"phone-pad\"\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Email\"\r\n-        value={email}\r\n-        onChangeText={setEmail}\r\n-        keyboardType=\"email-address\"\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Street\"\r\n-        value={street}\r\n-        onChangeText={setStreet}\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Barangay\"\r\n-        value={barangay}\r\n-        onChangeText={setBarangay}\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"City\"\r\n-        value={city}\r\n-        onChangeText={setCity}\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Province\"\r\n-        value={province}\r\n-        onChangeText={setProvince}\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Registration Number\"\r\n-        value={registrationNumber}\r\n-        onChangeText={setRegistrationNumber}\r\n-      />\r\n-      <TextInput\r\n-        style={styles.input}\r\n-        placeholder=\"Pangalan ng TODA\"\r\n-        value={todaName}\r\n-        onChangeText={setTodaName}\r\n-      />\r\n+      <TextInput style={styles.input} placeholder=\"Buong Pangalan\" value={fullName} onChangeText={setFullName} />\r\n+      <TextInput style={styles.input} placeholder=\"Cellphone Number Driver\" value={phone} onChangeText={setPhone} keyboardType=\"phone-pad\" />\r\n+      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+      <TextInput style={styles.input} placeholder=\"Street\" value={street} onChangeText={setStreet} />\r\n+      <TextInput style={styles.input} placeholder=\"Barangay\" value={barangay} onChangeText={setBarangay} />\r\n+      <TextInput style={styles.input} placeholder=\"City\" value={city} onChangeText={setCity} />\r\n+      <TextInput style={styles.input} placeholder=\"Province\" value={province} onChangeText={setProvince} />\r\n+      <TextInput style={styles.input} placeholder=\"Registration Number\" value={registrationNumber} onChangeText={setRegistrationNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"Pangalan ng TODA\" value={todaName} onChangeText={setTodaName} />\r\n \r\n       {!isSamePerson && (\r\n         <>\r\n-          <TextInput\r\n-            style={styles.input}\r\n-            placeholder=\"Pangalan ng Operator\"\r\n-            value={operatorName}\r\n-            onChangeText={setOperatorName}\r\n-          />\r\n-          <TextInput\r\n-            style={styles.input}\r\n-            placeholder=\"Cellphone Number ng Operator\"\r\n-            value={operatorPhone}\r\n-            onChangeText={setOperatorPhone}\r\n-            keyboardType=\"phone-pad\"\r\n-          />\r\n-          <TextInput\r\n-            style={styles.input}\r\n-            placeholder=\"Address ng Operator\"\r\n-            value={operatorAddress}\r\n-            onChangeText={setOperatorAddress}\r\n-          />\r\n-          <TextInput\r\n-            style={styles.input}\r\n-            placeholder=\"Voter’s ID ng Operator\"\r\n-            value={operatorVotersID}\r\n-            onChangeText={setOperatorVotersID}\r\n-          />\r\n+          <TextInput style={styles.input} placeholder=\"Pangalan ng Operator\" value={operatorName} onChangeText={setOperatorName} />\r\n+          <TextInput style={styles.input} placeholder=\"Cellphone Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" />\r\n+          <TextInput style={styles.input} placeholder=\"Address ng Operator\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n+          <TextInput style={styles.input} placeholder=\"Voter’s ID ng Operator\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n         </>\r\n       )}\r\n \r\n-      <TouchableOpacity style={styles.button}>\r\n+      <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n         <Text style={styles.buttonText}>Register</Text>\r\n       </TouchableOpacity>\r\n     </ScrollView>\r\n   );\r\n"
                },
                {
                    "date": 1744707504224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,11 @@\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n-      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n+        <View style={{paddingTop: 30}}>\r\n+          <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+        </View>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n         <Image\r\n           source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n           style={styles.image}\r\n"
                },
                {
                    "date": 1744713679864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,10 +83,11 @@\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n         body: formData,\r\n       });\r\n-\r\n-      const data = await response.json();\r\n+      \r\n+      const text = await response.text();\r\n+      console.log(\"Raw response:\", text); // ← this will show the HTML or error\r\n       if (response.ok) {\r\n         Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n       } else {\r\n         console.error(\"Registration failed\", data);\r\n"
                },
                {
                    "date": 1744713828439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,16 +83,21 @@\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n         body: formData,\r\n       });\r\n-      \r\n+\r\n       const text = await response.text();\r\n       console.log(\"Raw response:\", text); // ← this will show the HTML or error\r\n-      if (response.ok) {\r\n-        Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n-      } else {\r\n-        console.error(\"Registration failed\", data);\r\n-        Alert.alert(\"Error\", data?.error || \"Registration failed\");\r\n+      try {\r\n+        const data = JSON.parse(text);\r\n+        if (response.ok) {\r\n+          Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n+        } else {\r\n+          Alert.alert(\"Error\", data?.error || \"Something went wrong\");\r\n+        }\r\n+      } catch (e) {\r\n+        console.error(\"Response not JSON:\", text);\r\n+        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Fetch error\", error);\r\n       Alert.alert(\"Error\", \"Something went wrong\");\r\n"
                },
                {
                    "date": 1744714096491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,16 +34,16 @@\n   const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n   const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      mediaTypes: ImagePicker.MediaType.Images, // ✅ updated from deprecated\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-\r\n+  \r\n     if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      setPhoto(result.assets[0]);\r\n+      setPhoto(result.assets[0]); // ✅ Save the full asset object, not just the URI\r\n     }\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n@@ -109,12 +109,12 @@\n         <View style={{paddingTop: 30}}>\r\n           <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n         </View>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n-        <Image\r\n-          source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n-          style={styles.image}\r\n-        />\r\n+      <Image\r\n+        source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n+        style={styles.image}\r\n+      />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n \r\n       <Text style={{ marginBottom: 5, fontWeight: \"bold\" }}>\r\n"
                },
                {
                    "date": 1744714136243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n     }\r\n \r\n     if (photo) {\r\n       formData.append(\"selfie\", {\r\n-        uri: photo.uri,\r\n+        uri: photo,\r\n         type: \"image/jpeg\",\r\n         name: \"driver_selfie.jpg\",\r\n       });\r\n     }\r\n"
                },
                {
                    "date": 1744714142120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n     }\r\n \r\n     if (photo) {\r\n       formData.append(\"selfie\", {\r\n-        uri: photo,\r\n+        uri: photo.uri,\r\n         type: \"image/jpeg\",\r\n         name: \"driver_selfie.jpg\",\r\n       });\r\n     }\r\n"
                },
                {
                    "date": 1744714350471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n   const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaType.Images, // ✅ updated from deprecated\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n"
                },
                {
                    "date": 1744714368973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n       quality: 1,\r\n     });\r\n   \r\n     if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      setPhoto(result.assets[0]); // ✅ Save the full asset object, not just the URI\r\n+      setPhoto(assets.uri); // ✅ Save the full asset object, not just the URI\r\n     }\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n"
                },
                {
                    "date": 1744714396435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,11 @@\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n   \r\n-    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      setPhoto(assets.uri); // ✅ Save the full asset object, not just the URI\r\n-    }\r\n+    const asset = (result.assets as any)[0];\r\n+    setPhoto(asset.uri);\r\n+\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n     const formData = new FormData();\r\n"
                },
                {
                    "date": 1744714431541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n     });\r\n   \r\n     const asset = (result.assets as any)[0];\r\n     setPhoto(asset.uri);\r\n-\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n     const formData = new FormData();\r\n"
                },
                {
                    "date": 1744714710643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n \r\n   const handleRegister = async () => {\r\n     const formData = new FormData();\r\n \r\n-    formData.append(\"isSamePerson\", isSamePerson);\r\n+    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n \r\n     formData.append(\"driverName\", fullName);\r\n     formData.append(\"driverPhone\", phone);\r\n     formData.append(\"email\", email);\r\n"
                },
                {
                    "date": 1744714788651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     setPhoto(asset.uri);\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n-    const formData = new FormData();\r\n+    const formData: FormData = new FormData();\r\n \r\n     formData.append(\"isSamePerson\", isSamePerson.toString());\r\n \r\n     formData.append(\"driverName\", fullName);\r\n"
                },
                {
                    "date": 1744714823447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,11 @@\n   \r\n     const asset = (result.assets as any)[0];\r\n     setPhoto(asset.uri);\r\n   };\r\n-\r\n+  const formData: FormData = new FormData();\r\n   const handleRegister = async () => {\r\n-    const formData: FormData = new FormData();\r\n+    \r\n \r\n     formData.append(\"isSamePerson\", isSamePerson.toString());\r\n \r\n     formData.append(\"driverName\", fullName);\r\n"
                },
                {
                    "date": 1744714906625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,12 @@\n   StatusBar,\r\n   Alert,\r\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n+import { Asset } from 'expo-image-picker';\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState(null);\r\n+  const [photo, setPhoto] = useState<Asset | null>(null);\r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n \r\n   // Shared fields\r\n   const [fullName, setFullName] = useState(\"\");\r\n@@ -43,11 +44,11 @@\n   \r\n     const asset = (result.assets as any)[0];\r\n     setPhoto(asset.uri);\r\n   };\r\n-  const formData: FormData = new FormData();\r\n+\r\n   const handleRegister = async () => {\r\n-    \r\n+    const formData: FormData = new FormData();\r\n \r\n     formData.append(\"isSamePerson\", isSamePerson.toString());\r\n \r\n     formData.append(\"driverName\", fullName);\r\n"
                },
                {
                    "date": 1744714934959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   StatusBar,\r\n   Alert,\r\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n-import { Asset } from 'expo-image-picker';\r\n+import { Asset, * } from 'expo-image-picker';\r\n \r\n export default function DriverRegister() {\r\n   const [photo, setPhoto] = useState<Asset | null>(null);\r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n"
                },
                {
                    "date": 1744715077112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n   StatusBar,\r\n   Alert,\r\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n-import { Asset, * } from 'expo-image-picker';\r\n \r\n export default function DriverRegister() {\r\n   const [photo, setPhoto] = useState<Asset | null>(null);\r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n"
                },
                {
                    "date": 1744715132387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState<Asset | null>(null);\r\n+  const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n \r\n   // Shared fields\r\n   const [fullName, setFullName] = useState(\"\");\r\n@@ -45,9 +45,9 @@\n     setPhoto(asset.uri);\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n-    const formData: FormData = new FormData();\r\n+    const formData = new FormData();\r\n \r\n     formData.append(\"isSamePerson\", isSamePerson.toString());\r\n \r\n     formData.append(\"driverName\", fullName);\r\n"
                },
                {
                    "date": 1744715422902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,11 @@\n     setPhoto(asset.uri);\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n+    \r\n     const formData = new FormData();\r\n+    \r\n \r\n     formData.append(\"isSamePerson\", isSamePerson.toString());\r\n \r\n     formData.append(\"driverName\", fullName);\r\n@@ -71,10 +73,11 @@\n       formData.append(\"selfie\", {\r\n         uri: photo.uri,\r\n         type: \"image/jpeg\",\r\n         name: \"driver_selfie.jpg\",\r\n-      });\r\n+      } as any);\r\n     }\r\n+    formData.append(\"test\", \"123\"); // ⛔ Is this underlined too?\r\n \r\n     try {\r\n       const response = await fetch(\"https://toda-go-backend-1.onrender.com/api/auth/driver/register-driver\", {\r\n         method: \"POST\",\r\n"
                },
                {
                    "date": 1744715460547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n+  const [photo, setPhoto] = useState(null);\r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n \r\n   // Shared fields\r\n   const [fullName, setFullName] = useState(\"\");\r\n@@ -39,19 +39,18 @@\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-  \r\n-    const asset = (result.assets as any)[0];\r\n-    setPhoto(asset.uri);\r\n+\r\n+    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n+      setPhoto(result.assets[0]);\r\n+    }\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n-    \r\n     const formData = new FormData();\r\n-    \r\n \r\n-    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n+    formData.append(\"isSamePerson\", isSamePerson);\r\n \r\n     formData.append(\"driverName\", fullName);\r\n     formData.append(\"driverPhone\", phone);\r\n     formData.append(\"email\", email);\r\n@@ -73,11 +72,10 @@\n       formData.append(\"selfie\", {\r\n         uri: photo.uri,\r\n         type: \"image/jpeg\",\r\n         name: \"driver_selfie.jpg\",\r\n-      } as any);\r\n+      });\r\n     }\r\n-    formData.append(\"test\", \"123\"); // ⛔ Is this underlined too?\r\n \r\n     try {\r\n       const response = await fetch(\"https://toda-go-backend-1.onrender.com/api/auth/driver/register-driver\", {\r\n         method: \"POST\",\r\n@@ -86,20 +84,14 @@\n         },\r\n         body: formData,\r\n       });\r\n \r\n-      const text = await response.text();\r\n-      console.log(\"Raw response:\", text); // ← this will show the HTML or error\r\n-      try {\r\n-        const data = JSON.parse(text);\r\n-        if (response.ok) {\r\n-          Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n-        } else {\r\n-          Alert.alert(\"Error\", data?.error || \"Something went wrong\");\r\n-        }\r\n-      } catch (e) {\r\n-        console.error(\"Response not JSON:\", text);\r\n-        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n+      const data = await response.json();\r\n+      if (response.ok) {\r\n+        Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n+      } else {\r\n+        console.error(\"Registration failed\", data);\r\n+        Alert.alert(\"Error\", data?.error || \"Registration failed\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Fetch error\", error);\r\n       Alert.alert(\"Error\", \"Something went wrong\");\r\n@@ -111,12 +103,12 @@\n         <View style={{paddingTop: 30}}>\r\n           <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n         </View>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n-      <Image\r\n-        source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n-        style={styles.image}\r\n-      />\r\n+        <Image\r\n+          source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n+          style={styles.image}\r\n+        />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n \r\n       <Text style={{ marginBottom: 5, fontWeight: \"bold\" }}>\r\n"
                },
                {
                    "date": 1744715489811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState(null);\r\n+  const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n \r\n   // Shared fields\r\n   const [fullName, setFullName] = useState(\"\");\r\n@@ -39,18 +39,19 @@\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-\r\n-    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      setPhoto(result.assets[0]);\r\n-    }\r\n+  \r\n+    const asset = (result.assets as any)[0];\r\n+    setPhoto(asset.uri);\r\n   };\r\n \r\n   const handleRegister = async () => {\r\n+    \r\n     const formData = new FormData();\r\n+    \r\n \r\n-    formData.append(\"isSamePerson\", isSamePerson);\r\n+    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n \r\n     formData.append(\"driverName\", fullName);\r\n     formData.append(\"driverPhone\", phone);\r\n     formData.append(\"email\", email);\r\n@@ -72,9 +73,9 @@\n       formData.append(\"selfie\", {\r\n         uri: photo.uri,\r\n         type: \"image/jpeg\",\r\n         name: \"driver_selfie.jpg\",\r\n-      });\r\n+      } as any);\r\n     }\r\n \r\n     try {\r\n       const response = await fetch(\"https://toda-go-backend-1.onrender.com/api/auth/driver/register-driver\", {\r\n@@ -84,14 +85,20 @@\n         },\r\n         body: formData,\r\n       });\r\n \r\n-      const data = await response.json();\r\n-      if (response.ok) {\r\n-        Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n-      } else {\r\n-        console.error(\"Registration failed\", data);\r\n-        Alert.alert(\"Error\", data?.error || \"Registration failed\");\r\n+      const text = await response.text();\r\n+      console.log(\"Raw response:\", text); // ← this will show the HTML or error\r\n+      try {\r\n+        const data = JSON.parse(text);\r\n+        if (response.ok) {\r\n+          Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n+        } else {\r\n+          Alert.alert(\"Error\", data?.error || \"Something went wrong\");\r\n+        }\r\n+      } catch (e) {\r\n+        console.error(\"Response not JSON:\", text);\r\n+        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"Fetch error\", error);\r\n       Alert.alert(\"Error\", \"Something went wrong\");\r\n@@ -103,12 +110,12 @@\n         <View style={{paddingTop: 30}}>\r\n           <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n         </View>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n-        <Image\r\n-          source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n-          style={styles.image}\r\n-        />\r\n+      <Image\r\n+        source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n+        style={styles.image}\r\n+      />\r\n         <Text style={styles.cameraIcon}>📷</Text>\r\n       </TouchableOpacity>\r\n \r\n       <Text style={{ marginBottom: 5, fontWeight: \"bold\" }}>\r\n"
                },
                {
                    "date": 1744716001991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n   const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      mediaTypes: [ImagePicker.MediaType.Images],\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n"
                },
                {
                    "date": 1744716030751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n   ScrollView,\r\n   StatusBar,\r\n   Alert,\r\n } from \"react-native\";\r\n+import API_BASE_URL from \"../../config\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n   const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n"
                },
                {
                    "date": 1744716061262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n       } as any);\r\n     }\r\n \r\n     try {\r\n-      const response = await fetch(\"https://toda-go-backend-1.onrender.com/api/auth/driver/register-driver\", {\r\n+      const response = await fetch(`${API_BASE_URL}/api/auth/passenger/register-driver`, {\r\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n"
                },
                {
                    "date": 1744716071459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n   const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: [ImagePicker.MediaType.Images],\r\n+      mediaTypes: [ImagePicker.MediaTypeOptions.Images],\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n"
                },
                {
                    "date": 1744716077362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n   const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: [ImagePicker.MediaTypeOptions.Images],\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n"
                },
                {
                    "date": 1744716417461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,79 +45,87 @@\n     const asset = (result.assets as any)[0];\r\n     setPhoto(asset.uri);\r\n   };\r\n \r\n-  const handleRegister = async () => {\r\n-    \r\n-    const formData = new FormData();\r\n-    \r\n-\r\n-    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n-\r\n-    formData.append(\"driverName\", fullName);\r\n-    formData.append(\"driverPhone\", phone);\r\n-    formData.append(\"email\", email);\r\n-    formData.append(\"street\", street);\r\n-    formData.append(\"barangay\", barangay);\r\n-    formData.append(\"city\", city);\r\n-    formData.append(\"province\", province);\r\n-    formData.append(\"franchiseNumber\", registrationNumber);\r\n-    formData.append(\"todaName\", todaName);\r\n-\r\n-    if (!isSamePerson) {\r\n+  const handleDriverRegister = async () => {\r\n+    try {\r\n+      console.log(\"📸 Preparing form data...\");\r\n+  \r\n+      const formData = new FormData();\r\n+  \r\n+      formData.append(\"isSamePerson\", isSamePerson ? \"true\" : \"false\");\r\n+      formData.append(\"franchiseNumber\", registrationNumber);\r\n+      formData.append(\"todaName\", todaName);\r\n+      formData.append(\"sector\", \"East\"); // Change this to a dynamic field if needed\r\n+  \r\n       formData.append(\"operatorName\", operatorName);\r\n       formData.append(\"operatorPhone\", operatorPhone);\r\n       formData.append(\"operatorAddress\", operatorAddress);\r\n       formData.append(\"operatorVotersID\", operatorVotersID);\r\n-    }\r\n-\r\n-    if (photo) {\r\n-      formData.append(\"selfie\", {\r\n-        uri: photo.uri,\r\n-        type: \"image/jpeg\",\r\n-        name: \"driver_selfie.jpg\",\r\n-      } as any);\r\n-    }\r\n-\r\n-    try {\r\n-      const response = await fetch(`${API_BASE_URL}/api/auth/passenger/register-driver`, {\r\n+  \r\n+      if (!isSamePerson) {\r\n+        formData.append(\"driverName\", fullName);\r\n+        formData.append(\"driverPhone\", phone);\r\n+        formData.append(\"driverAddress\", `${street}, ${barangay}, ${city}, ${province}`);\r\n+        formData.append(\"driverVotersID\", \"\"); // Optional field, modify if needed\r\n+      }\r\n+  \r\n+      formData.append(\"experienceYears\", \"1-5 taon\"); // Example value\r\n+      formData.append(\"isLucenaVoter\", \"Oo\");\r\n+      formData.append(\"votingLocation\", \"Lucena\");\r\n+  \r\n+      if (photo) {\r\n+        formData.append(\"selfie\", {\r\n+          uri: photo,\r\n+          name: \"driver_selfie.jpg\",\r\n+          type: \"image/jpeg\",\r\n+        } as any);\r\n+      }\r\n+  \r\n+      console.log(\"🌐 Sending fetch to backend...\");\r\n+      const response = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n         body: formData,\r\n       });\r\n-\r\n+  \r\n       const text = await response.text();\r\n-      console.log(\"Raw response:\", text); // ← this will show the HTML or error\r\n       try {\r\n         const data = JSON.parse(text);\r\n+        console.log(\"✅ Got response!\", data);\r\n+  \r\n         if (response.ok) {\r\n           Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n         } else {\r\n           Alert.alert(\"Error\", data?.error || \"Something went wrong\");\r\n         }\r\n       } catch (e) {\r\n-        console.error(\"Response not JSON:\", text);\r\n+        console.error(\"❌ Response not JSON:\", text);\r\n         Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n       }\r\n     } catch (error) {\r\n-      console.error(\"Fetch error\", error);\r\n-      Alert.alert(\"Error\", \"Something went wrong\");\r\n+      console.error(\"❌ Network or fetch error:\", error);\r\n+      Alert.alert(\"Error\", \"Network request failed. Check your internet or backend.\");\r\n     }\r\n   };\r\n+  \r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n         <View style={{paddingTop: 30}}>\r\n           <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n         </View>\r\n       <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n-      <Image\r\n-        source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n-        style={styles.image}\r\n-      />\r\n-        <Text style={styles.cameraIcon}>📷</Text>\r\n+        <Image\r\n+          source={photo ? { uri: photo } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n+          style={styles.image}\r\n+        />\r\n+        <Image\r\n+          source={require(\"../../assets/images/camera.png\")}\r\n+          style={styles.cameraIcon}\r\n+        />\r\n       </TouchableOpacity>\r\n \r\n       <Text style={{ marginBottom: 5, fontWeight: \"bold\" }}>\r\n         Ikaw ba ay parehong Operator at Driver?\r\n@@ -181,13 +189,12 @@\n   cameraIcon: {\r\n     position: \"absolute\",\r\n     bottom: 0,\r\n     right: 0,\r\n-    fontSize: 18,\r\n-    backgroundColor: \"#fff\",\r\n-    borderRadius: 10,\r\n-    padding: 2,\r\n-  },\r\n+    width: 24,\r\n+    height: 24,\r\n+    tintColor: \"#000\", // Optional: tint the icon if it's a transparent PNG\r\n+  },  \r\n   option: {\r\n     flex: 1,\r\n     padding: 10,\r\n     borderWidth: 1,\r\n"
                },
                {
                    "date": 1744716441860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     const asset = (result.assets as any)[0];\r\n     setPhoto(asset.uri);\r\n   };\r\n \r\n-  const handleDriverRegister = async () => {\r\n+  const handleRegister = async () => {\r\n     try {\r\n       console.log(\"📸 Preparing form data...\");\r\n   \r\n       const formData = new FormData();\r\n"
                },
                {
                    "date": 1744716507032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,10 +189,10 @@\n   cameraIcon: {\r\n     position: \"absolute\",\r\n     bottom: 0,\r\n     right: 0,\r\n-    width: 24,\r\n-    height: 24,\r\n+    width: 100,\r\n+    height: 100,\r\n     tintColor: \"#000\", // Optional: tint the icon if it's a transparent PNG\r\n   },  \r\n   option: {\r\n     flex: 1,\r\n"
                },
                {
                    "date": 1744716513879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,10 +189,10 @@\n   cameraIcon: {\r\n     position: \"absolute\",\r\n     bottom: 0,\r\n     right: 0,\r\n-    width: 100,\r\n-    height: 100,\r\n+    width: 24,\r\n+    height: 24,\r\n     tintColor: \"#000\", // Optional: tint the icon if it's a transparent PNG\r\n   },  \r\n   option: {\r\n     flex: 1,\r\n"
                },
                {
                    "date": 1744717769345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+// app/login_and_reg/dregister.tsx\r\n import React, { useState } from \"react\";\r\n import {\r\n   View,\r\n   Text,\r\n@@ -9,221 +10,225 @@\n   ScrollView,\r\n   StatusBar,\r\n   Alert,\r\n } from \"react-native\";\r\n+import * as ImagePicker from \"expo-image-picker\";\r\n import API_BASE_URL from \"../../config\";\r\n-import * as ImagePicker from \"expo-image-picker\";\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n+  const [photo, setPhoto] = useState(null);\r\n+  const [votersIDImage, setVotersIDImage] = useState(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState(null);\r\n+  const [orcrImage, setOrcrImage] = useState(null);\r\n+\r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n-\r\n-  // Shared fields\r\n-  const [fullName, setFullName] = useState(\"\");\r\n-  const [phone, setPhone] = useState(\"\");\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [street, setStreet] = useState(\"\");\r\n-  const [barangay, setBarangay] = useState(\"\");\r\n-  const [city, setCity] = useState(\"\");\r\n-  const [province, setProvince] = useState(\"\");\r\n-  const [registrationNumber, setRegistrationNumber] = useState(\"\");\r\n+  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n+  const [sector, setSector] = useState(\"\");\r\n \r\n-  // Operator fields (if not the same person)\r\n   const [operatorName, setOperatorName] = useState(\"\");\r\n   const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n   const [operatorAddress, setOperatorAddress] = useState(\"\");\r\n   const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n-  const pickImage = async () => {\r\n+  const [driverName, setDriverName] = useState(\"\");\r\n+  const [driverPhone, setDriverPhone] = useState(\"\");\r\n+  const [driverAddress, setDriverAddress] = useState(\"\");\r\n+  const [driverVotersID, setDriverVotersID] = useState(\"\");\r\n+\r\n+  const [experienceYears, setExperienceYears] = useState(\"\");\r\n+  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n+  const [votingLocation, setVotingLocation] = useState(\"\");\r\n+  const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n+\r\n+  const pickImage = async (setImageFunc) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-  \r\n-    const asset = (result.assets as any)[0];\r\n-    setPhoto(asset.uri);\r\n+\r\n+    if (!result.canceled && result.assets.length > 0) {\r\n+      setImageFunc(result.assets[0]);\r\n+    }\r\n   };\r\n \r\n-  const handleRegister = async () => {\r\n+  const handleSubmit = async () => {\r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Missing Voter's ID image\");\r\n+      return;\r\n+    }\r\n+\r\n+    const formData = new FormData();\r\n+\r\n+    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n+    formData.append(\"franchiseNumber\", franchiseNumber);\r\n+    formData.append(\"todaName\", todaName);\r\n+    formData.append(\"sector\", sector);\r\n+    formData.append(\"operatorName\", operatorName);\r\n+    formData.append(\"operatorPhone\", operatorPhone);\r\n+    formData.append(\"operatorAddress\", operatorAddress);\r\n+    formData.append(\"operatorVotersID\", operatorVotersID);\r\n+\r\n+    if (!isSamePerson) {\r\n+      formData.append(\"driverName\", driverName);\r\n+      formData.append(\"driverPhone\", driverPhone);\r\n+      formData.append(\"driverAddress\", driverAddress);\r\n+      formData.append(\"driverVotersID\", driverVotersID);\r\n+    }\r\n+\r\n+    formData.append(\"experienceYears\", experienceYears);\r\n+    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n+    formData.append(\"votingLocation\", votingLocation);\r\n+    formData.append(\"commentOrSuggestion\", commentOrSuggestion);\r\n+\r\n+    // Images\r\n+    formData.append(\"votersIDImage\", {\r\n+      uri: votersIDImage.uri,\r\n+      type: \"image/jpeg\",\r\n+      name: \"voters_id.jpg\",\r\n+    } as any);\r\n+\r\n+    if (driversLicenseImage) {\r\n+      formData.append(\"driversLicenseImage\", {\r\n+        uri: driversLicenseImage.uri,\r\n+        type: \"image/jpeg\",\r\n+        name: \"license.jpg\",\r\n+      } as any);\r\n+    }\r\n+\r\n+    if (orcrImage) {\r\n+      formData.append(\"orcrImage\", {\r\n+        uri: orcrImage.uri,\r\n+        type: \"image/jpeg\",\r\n+        name: \"orcr.jpg\",\r\n+      } as any);\r\n+    }\r\n+\r\n+    if (photo) {\r\n+      formData.append(\"selfie\", {\r\n+        uri: photo.uri,\r\n+        type: \"image/jpeg\",\r\n+        name: \"selfie.jpg\",\r\n+      } as any);\r\n+    }\r\n+\r\n     try {\r\n-      console.log(\"📸 Preparing form data...\");\r\n-  \r\n-      const formData = new FormData();\r\n-  \r\n-      formData.append(\"isSamePerson\", isSamePerson ? \"true\" : \"false\");\r\n-      formData.append(\"franchiseNumber\", registrationNumber);\r\n-      formData.append(\"todaName\", todaName);\r\n-      formData.append(\"sector\", \"East\"); // Change this to a dynamic field if needed\r\n-  \r\n-      formData.append(\"operatorName\", operatorName);\r\n-      formData.append(\"operatorPhone\", operatorPhone);\r\n-      formData.append(\"operatorAddress\", operatorAddress);\r\n-      formData.append(\"operatorVotersID\", operatorVotersID);\r\n-  \r\n-      if (!isSamePerson) {\r\n-        formData.append(\"driverName\", fullName);\r\n-        formData.append(\"driverPhone\", phone);\r\n-        formData.append(\"driverAddress\", `${street}, ${barangay}, ${city}, ${province}`);\r\n-        formData.append(\"driverVotersID\", \"\"); // Optional field, modify if needed\r\n-      }\r\n-  \r\n-      formData.append(\"experienceYears\", \"1-5 taon\"); // Example value\r\n-      formData.append(\"isLucenaVoter\", \"Oo\");\r\n-      formData.append(\"votingLocation\", \"Lucena\");\r\n-  \r\n-      if (photo) {\r\n-        formData.append(\"selfie\", {\r\n-          uri: photo,\r\n-          name: \"driver_selfie.jpg\",\r\n-          type: \"image/jpeg\",\r\n-        } as any);\r\n-      }\r\n-  \r\n-      console.log(\"🌐 Sending fetch to backend...\");\r\n       const response = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n         method: \"POST\",\r\n+        body: formData,\r\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n-        body: formData,\r\n       });\r\n-  \r\n+\r\n       const text = await response.text();\r\n       try {\r\n         const data = JSON.parse(text);\r\n-        console.log(\"✅ Got response!\", data);\r\n-  \r\n         if (response.ok) {\r\n-          Alert.alert(\"Success\", \"Driver registered successfully!\");\r\n+          Alert.alert(\"Success\", data.message || \"Registered!\");\r\n         } else {\r\n-          Alert.alert(\"Error\", data?.error || \"Something went wrong\");\r\n+          Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n         }\r\n       } catch (e) {\r\n-        console.error(\"❌ Response not JSON:\", text);\r\n+        console.error(\"Response not JSON:\", text);\r\n         Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n       }\r\n-    } catch (error) {\r\n-      console.error(\"❌ Network or fetch error:\", error);\r\n-      Alert.alert(\"Error\", \"Network request failed. Check your internet or backend.\");\r\n+    } catch (err) {\r\n+      console.error(\"❌ Error submitting form:\", err);\r\n+      Alert.alert(\"Error\", \"Network error\");\r\n     }\r\n   };\r\n-  \r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n-        <View style={{paddingTop: 30}}>\r\n-          <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n-        </View>\r\n-      <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n+      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n+      <TouchableOpacity onPress={() => pickImage(setPhoto)} style={styles.imageContainer}>\r\n         <Image\r\n-          source={photo ? { uri: photo } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n+          source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n           style={styles.image}\r\n         />\r\n         <Image\r\n           source={require(\"../../assets/images/camera.png\")}\r\n           style={styles.cameraIcon}\r\n         />\r\n       </TouchableOpacity>\r\n \r\n-      <Text style={{ marginBottom: 5, fontWeight: \"bold\" }}>\r\n-        Ikaw ba ay parehong Operator at Driver?\r\n-      </Text>\r\n-      <View style={{ flexDirection: \"row\", marginBottom: 15 }}>\r\n-        <TouchableOpacity\r\n-          style={[styles.option, isSamePerson && styles.selected]}\r\n-          onPress={() => setIsSamePerson(true)}\r\n-        >\r\n+      <Text style={styles.label}>Are you both operator and driver?</Text>\r\n+      <View style={styles.optionGroup}>\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n           <Text>Oo</Text>\r\n         </TouchableOpacity>\r\n-        <TouchableOpacity\r\n-          style={[styles.option, !isSamePerson && styles.selected]}\r\n-          onPress={() => setIsSamePerson(false)}\r\n-        >\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n           <Text>Hindi</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n \r\n-      <TextInput style={styles.input} placeholder=\"Buong Pangalan\" value={fullName} onChangeText={setFullName} />\r\n-      <TextInput style={styles.input} placeholder=\"Cellphone Number Driver\" value={phone} onChangeText={setPhone} keyboardType=\"phone-pad\" />\r\n-      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n-      <TextInput style={styles.input} placeholder=\"Street\" value={street} onChangeText={setStreet} />\r\n-      <TextInput style={styles.input} placeholder=\"Barangay\" value={barangay} onChangeText={setBarangay} />\r\n-      <TextInput style={styles.input} placeholder=\"City\" value={city} onChangeText={setCity} />\r\n-      <TextInput style={styles.input} placeholder=\"Province\" value={province} onChangeText={setProvince} />\r\n-      <TextInput style={styles.input} placeholder=\"Registration Number\" value={registrationNumber} onChangeText={setRegistrationNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"Pangalan ng TODA\" value={todaName} onChangeText={setTodaName} />\r\n+      <TextInput style={styles.input} placeholder=\"Sektor (East, West...)\" value={sector} onChangeText={setSector} />\r\n \r\n+      <TextInput style={styles.input} placeholder=\"Pangalan ng Operator\" value={operatorName} onChangeText={setOperatorName} />\r\n+      <TextInput style={styles.input} placeholder=\"Phone ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      <TextInput style={styles.input} placeholder=\"Address ng Operator\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n+      <TextInput style={styles.input} placeholder=\"Voter's ID ng Operator\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n+\r\n       {!isSamePerson && (\r\n         <>\r\n-          <TextInput style={styles.input} placeholder=\"Pangalan ng Operator\" value={operatorName} onChangeText={setOperatorName} />\r\n-          <TextInput style={styles.input} placeholder=\"Cellphone Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" />\r\n-          <TextInput style={styles.input} placeholder=\"Address ng Operator\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n-          <TextInput style={styles.input} placeholder=\"Voter’s ID ng Operator\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n+          <TextInput style={styles.input} placeholder=\"Driver Name\" value={driverName} onChangeText={setDriverName} />\r\n+          <TextInput style={styles.input} placeholder=\"Driver Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n+          <TextInput style={styles.input} placeholder=\"Driver Address\" value={driverAddress} onChangeText={setDriverAddress} />\r\n+          <TextInput style={styles.input} placeholder=\"Driver Voter's ID\" value={driverVotersID} onChangeText={setDriverVotersID} />\r\n         </>\r\n       )}\r\n \r\n-      <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n+      <TextInput style={styles.input} placeholder=\"Experience (1-5 taon...)\" value={experienceYears} onChangeText={setExperienceYears} />\r\n+      <TextInput style={styles.input} placeholder=\"Lucena Voter? (Oo/Hindi)\" value={isLucenaVoter} onChangeText={setIsLucenaVoter} />\r\n+      <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+      <TextInput style={styles.input} placeholder=\"Suggestions (optional)\" value={commentOrSuggestion} onChangeText={setCommentOrSuggestion} />\r\n+\r\n+      <TouchableOpacity style={styles.button} onPress={() => pickImage(setVotersIDImage)}>\r\n+        <Text style={styles.buttonText}>Upload Voter’s ID</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={styles.button} onPress={() => pickImage(setDriversLicenseImage)}>\r\n+        <Text style={styles.buttonText}>Upload Driver’s License</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={styles.button} onPress={() => pickImage(setOrcrImage)}>\r\n+        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n+      </TouchableOpacity>\r\n+\r\n+      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n         <Text style={styles.buttonText}>Register</Text>\r\n       </TouchableOpacity>\r\n     </ScrollView>\r\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: {\r\n-    alignItems: \"center\",\r\n-    padding: 20,\r\n-  },\r\n-  imageContainer: {\r\n-    marginBottom: 20,\r\n-    marginTop: 20,\r\n-    position: \"relative\",\r\n-  },\r\n-  image: {\r\n-    width: 100,\r\n-    height: 100,\r\n-    borderRadius: 50,\r\n-  },\r\n+  container: { alignItems: \"center\", padding: 20 },\r\n+  imageContainer: { marginBottom: 20, marginTop: 20, position: \"relative\" },\r\n+  image: { width: 100, height: 100, borderRadius: 50 },\r\n   cameraIcon: {\r\n     position: \"absolute\",\r\n     bottom: 0,\r\n     right: 0,\r\n-    width: 24,\r\n-    height: 24,\r\n-    tintColor: \"#000\", // Optional: tint the icon if it's a transparent PNG\r\n-  },  \r\n-  option: {\r\n-    flex: 1,\r\n-    padding: 10,\r\n-    borderWidth: 1,\r\n-    borderRadius: 8,\r\n-    alignItems: \"center\",\r\n-    marginHorizontal: 5,\r\n+    width: 30,\r\n+    height: 30,\r\n   },\r\n-  selected: {\r\n-    backgroundColor: \"#d0e8ff\",\r\n-    borderColor: \"#1e90ff\",\r\n-  },\r\n+  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n+  optionGroup: { flexDirection: \"row\", marginBottom: 10 },\r\n+  option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n+  selected: { backgroundColor: \"#d0e8ff\", borderColor: \"#1e90ff\" },\r\n   input: {\r\n-    width: \"100%\",\r\n-    padding: 12,\r\n-    borderWidth: 1,\r\n-    borderRadius: 10,\r\n-    marginBottom: 10,\r\n-    backgroundColor: \"#fff\",\r\n+    width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n+    marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n-    backgroundColor: \"#1e90ff\",\r\n-    padding: 15,\r\n-    borderRadius: 10,\r\n-    width: \"100%\",\r\n-    marginTop: 10,\r\n+    backgroundColor: \"#ccc\", padding: 12, borderRadius: 10,\r\n+    width: \"100%\", marginVertical: 5,\r\n   },\r\n-  buttonText: {\r\n-    color: \"#fff\",\r\n-    textAlign: \"center\",\r\n-    fontWeight: \"bold\",\r\n+  submitButton: {\r\n+    backgroundColor: \"#1e90ff\", padding: 15, borderRadius: 10, width: \"100%\", marginTop: 15,\r\n   },\r\n+  buttonText: { color: \"#fff\", textAlign: \"center\", fontWeight: \"bold\" },\r\n });\r\n"
                },
                {
                    "date": 1744717814253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n \r\n   const pickImage = async (setImageFunc) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      mediaTypes: ImagePicker.MediaTypeOpt.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n"
                },
                {
                    "date": 1744717887290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n \r\n   const pickImage = async (setImageFunc) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOpt.Images,\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n"
                },
                {
                    "date": 1744718026003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import * as ImagePicker from \"expo-image-picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState(null);\r\n+  const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n   const [votersIDImage, setVotersIDImage] = useState(null);\r\n   const [driversLicenseImage, setDriversLicenseImage] = useState(null);\r\n   const [orcrImage, setOrcrImage] = useState(null);\r\n \r\n@@ -108,9 +108,9 @@\n     if (photo) {\r\n       formData.append(\"selfie\", {\r\n         uri: photo.uri,\r\n         type: \"image/jpeg\",\r\n-        name: \"selfie.jpg\",\r\n+        name: \"driver_selfie.jpg\",\r\n       } as any);\r\n     }\r\n \r\n     try {\r\n"
                },
                {
                    "date": 1744718100127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n   const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n-  const [votersIDImage, setVotersIDImage] = useState(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState(null);\r\n-  const [orcrImage, setOrcrImage] = useState(null);\r\n+  const [votersIDImage, setVotersIDImage] = useState<{ uri: string } | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<{ uri: string } | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<{ uri: string } | null>(null);\r\n \r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n"
                },
                {
                    "date": 1744718129692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,20 +39,24 @@\n   const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n   const [votingLocation, setVotingLocation] = useState(\"\");\r\n   const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n \r\n-  const pickImage = async (setImageFunc) => {\r\n+  const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      mediaTypes: [ImagePicker.MediaTypeOptions.Image],\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-\r\n-    if (!result.canceled && result.assets.length > 0) {\r\n-      setImageFunc(result.assets[0]);\r\n+  \r\n+    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n+      const asset = result.assets[0];\r\n+      if (asset && \"uri\" in asset) {\r\n+        setPhoto(asset.uri); // 👈 your useState setter\r\n+      }\r\n     }\r\n   };\r\n+  \r\n \r\n   const handleSubmit = async () => {\r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Missing Voter's ID image\");\r\n"
                },
                {
                    "date": 1744718240153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,22 +41,17 @@\n   const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n \r\n   const pickImage = async () => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: [ImagePicker.MediaTypeOptions.Image],\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Image,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n   \r\n-    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      const asset = result.assets[0];\r\n-      if (asset && \"uri\" in asset) {\r\n-        setPhoto(asset.uri); // 👈 your useState setter\r\n-      }\r\n-    }\r\n+    const asset = (result.assets as any)[0];\r\n+    setPhoto(asset.uri);\r\n   };\r\n-  \r\n \r\n   const handleSubmit = async () => {\r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Missing Voter's ID image\");\r\n"
                },
                {
                    "date": 1744718547128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,19 +39,25 @@\n   const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n   const [votingLocation, setVotingLocation] = useState(\"\");\r\n   const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n \r\n-  const pickImage = async () => {\r\n+\r\n+  const pickImage = async (setImageFunc: (uri: string) => void) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Image,\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n   \r\n-    const asset = (result.assets as any)[0];\r\n-    setPhoto(asset.uri);\r\n-  };\r\n+    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n+      const asset = result.assets[0];\r\n+      if (asset.uri) {\r\n+        setImageFunc(asset.uri);\r\n+      }\r\n+    }\r\n+  };  \r\n+  \r\n \r\n   const handleSubmit = async () => {\r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Missing Voter's ID image\");\r\n"
                },
                {
                    "date": 1744718737889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,14 +49,11 @@\n       quality: 1,\r\n     });\r\n   \r\n     if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      const asset = result.assets[0];\r\n-      if (asset.uri) {\r\n-        setImageFunc(asset.uri);\r\n-      }\r\n+      setImageFunc(result.assets[0].uri);\r\n     }\r\n-  };  \r\n+  };\r\n   \r\n \r\n   const handleSubmit = async () => {\r\n     if (!votersIDImage) {\r\n"
                },
                {
                    "date": 1744719136702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,23 +38,29 @@\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n   const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n   const [votingLocation, setVotingLocation] = useState(\"\");\r\n   const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n+  type AssetType = {\r\n+    uri: string;\r\n+    type?: string;\r\n+    fileName?: string;\r\n+    width?: number;\r\n+    height?: number;\r\n+    duration?: number;\r\n+  };\r\n \r\n-\r\n-  const pickImage = async (setImageFunc: (uri: string) => void) => {\r\n+  const pickImage = async (setImageFunc: (asset: AssetType) => void) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-  \r\n-    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n+\r\n+    if (!result.canceled && result.assets.length > 0) {\r\n       setImageFunc(result.assets[0].uri);\r\n     }\r\n   };\r\n-  \r\n \r\n   const handleSubmit = async () => {\r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Missing Voter's ID image\");\r\n"
                },
                {
                    "date": 1744719198031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n   StatusBar,\r\n   Alert,\r\n } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n+import { ImagePickerAsset } from \"expo-image-picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n   const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n@@ -56,9 +57,9 @@\n       quality: 1,\r\n     });\r\n \r\n     if (!result.canceled && result.assets.length > 0) {\r\n-      setImageFunc(result.assets[0].uri);\r\n+      setImageFunc(result.assets[0]);\r\n     }\r\n   };\r\n \r\n   const handleSubmit = async () => {\r\n"
                },
                {
                    "date": 1744719222579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,18 +48,19 @@\n     height?: number;\r\n     duration?: number;\r\n   };\r\n \r\n-  const pickImage = async (setImageFunc: (asset: AssetType) => void) => {\r\n+  const pickImage = async (setImageFunc: (asset: ImagePickerAsset) => void) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-\r\n-    if (!result.canceled && result.assets.length > 0) {\r\n-      setImageFunc(result.assets[0]);\r\n+  \r\n+    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n+      const asset = result.assets[0];\r\n+      setImageFunc(asset); // ✅ No red underline anymore\r\n     }\r\n   };\r\n \r\n   const handleSubmit = async () => {\r\n"
                },
                {
                    "date": 1744719251070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,12 @@\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState<{ uri: string } | null>(null);\r\n-  const [votersIDImage, setVotersIDImage] = useState<{ uri: string } | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<{ uri: string } | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<{ uri: string } | null>(null);\r\n+  const [photo, setPhoto] = useState<ImagePickerAsset | null>(null);\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n \r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n"
                },
                {
                    "date": 1745337136293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,69 +1,88 @@\n // app/login_and_reg/dregister.tsx\r\n+\r\n import React, { useState } from \"react\";\r\n import {\r\n   View,\r\n   Text,\r\n   TextInput,\r\n   TouchableOpacity,\r\n-  Image,\r\n   StyleSheet,\r\n   ScrollView,\r\n   StatusBar,\r\n   Alert,\r\n+  Platform,\r\n } from \"react-native\";\r\n+import DateTimePicker, { DateTimePickerEvent } from \"@react-native-community/datetimepicker\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [photo, setPhoto] = useState<ImagePickerAsset | null>(null);\r\n+  // Image states\r\n   const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n   const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n   const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n \r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n+\r\n+  // Shared info\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n   const [sector, setSector] = useState(\"\");\r\n \r\n-  const [operatorName, setOperatorName] = useState(\"\");\r\n+  // Operator fields\r\n+  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n+  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n+  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n+  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n+  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n+  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n   const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n   const [operatorAddress, setOperatorAddress] = useState(\"\");\r\n   const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n-  const [driverName, setDriverName] = useState(\"\");\r\n+  // Driver fields\r\n+  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n+  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n+  const [driverLastName, setDriverLastName] = useState(\"\");\r\n+  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n+  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n+  const [showDriverDate, setShowDriverDate] = useState(false);\r\n   const [driverPhone, setDriverPhone] = useState(\"\");\r\n   const [driverAddress, setDriverAddress] = useState(\"\");\r\n   const [driverVotersID, setDriverVotersID] = useState(\"\");\r\n \r\n+  // Voting\r\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n   const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n   const [votingLocation, setVotingLocation] = useState(\"\");\r\n-  const [commentOrSuggestion, setCommentOrSuggestion] = useState(\"\");\r\n-  type AssetType = {\r\n-    uri: string;\r\n-    type?: string;\r\n-    fileName?: string;\r\n-    width?: number;\r\n-    height?: number;\r\n-    duration?: number;\r\n-  };\r\n \r\n   const pickImage = async (setImageFunc: (asset: ImagePickerAsset) => void) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-  \r\n-    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n-      const asset = result.assets[0];\r\n-      setImageFunc(asset); // ✅ No red underline anymore\r\n+\r\n+    if (!result.canceled && result.assets?.length > 0) {\r\n+      setImageFunc(result.assets[0]);\r\n     }\r\n   };\r\n \r\n+  const handleDateChange = (\r\n+    selectedDate: Date,\r\n+    setFunc: (val: string) => void,\r\n+    setShow: (val: boolean) => void\r\n+  ) => {\r\n+    setShow(Platform.OS === \"ios\");\r\n+    if (selectedDate) {\r\n+      const formatted = selectedDate.toISOString().split(\"T\")[0];\r\n+      setFunc(formatted);\r\n+    }\r\n+  };\r\n+\r\n   const handleSubmit = async () => {\r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Missing Voter's ID image\");\r\n       return;\r\n@@ -74,30 +93,39 @@\n     formData.append(\"isSamePerson\", isSamePerson.toString());\r\n     formData.append(\"franchiseNumber\", franchiseNumber);\r\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n-    formData.append(\"operatorName\", operatorName);\r\n+\r\n+    // Operator fields\r\n+    formData.append(\"operatorFirstName\", operatorFirstName);\r\n+    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+    formData.append(\"operatorLastName\", operatorLastName);\r\n+    formData.append(\"operatorSuffix\", operatorSuffix);\r\n+    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n     formData.append(\"operatorPhone\", operatorPhone);\r\n     formData.append(\"operatorAddress\", operatorAddress);\r\n     formData.append(\"operatorVotersID\", operatorVotersID);\r\n \r\n     if (!isSamePerson) {\r\n-      formData.append(\"driverName\", driverName);\r\n+      formData.append(\"driverFirstName\", driverFirstName);\r\n+      formData.append(\"driverMiddleName\", driverMiddleName);\r\n+      formData.append(\"driverLastName\", driverLastName);\r\n+      formData.append(\"driverSuffix\", driverSuffix);\r\n+      formData.append(\"driverBirthdate\", driverBirthdate);\r\n       formData.append(\"driverPhone\", driverPhone);\r\n       formData.append(\"driverAddress\", driverAddress);\r\n       formData.append(\"driverVotersID\", driverVotersID);\r\n     }\r\n \r\n     formData.append(\"experienceYears\", experienceYears);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n     formData.append(\"votingLocation\", votingLocation);\r\n-    formData.append(\"commentOrSuggestion\", commentOrSuggestion);\r\n \r\n     // Images\r\n     formData.append(\"votersIDImage\", {\r\n       uri: votersIDImage.uri,\r\n       type: \"image/jpeg\",\r\n-      name: \"voters_id.jpg\",\r\n+      name: \"voter_id.jpg\",\r\n     } as any);\r\n \r\n     if (driversLicenseImage) {\r\n       formData.append(\"driversLicenseImage\", {\r\n@@ -114,16 +142,8 @@\n         name: \"orcr.jpg\",\r\n       } as any);\r\n     }\r\n \r\n-    if (photo) {\r\n-      formData.append(\"selfie\", {\r\n-        uri: photo.uri,\r\n-        type: \"image/jpeg\",\r\n-        name: \"driver_selfie.jpg\",\r\n-      } as any);\r\n-    }\r\n-\r\n     try {\r\n       const response = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n         method: \"POST\",\r\n         body: formData,\r\n@@ -131,41 +151,25 @@\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n       });\r\n \r\n-      const text = await response.text();\r\n-      try {\r\n-        const data = JSON.parse(text);\r\n-        if (response.ok) {\r\n-          Alert.alert(\"Success\", data.message || \"Registered!\");\r\n-        } else {\r\n-          Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n-        }\r\n-      } catch (e) {\r\n-        console.error(\"Response not JSON:\", text);\r\n-        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n+      const data = await response.json();\r\n+      if (response.ok) {\r\n+        Alert.alert(\"Success\", data.message);\r\n+      } else {\r\n+        Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n       }\r\n     } catch (err) {\r\n-      console.error(\"❌ Error submitting form:\", err);\r\n-      Alert.alert(\"Error\", \"Network error\");\r\n+      Alert.alert(\"Error\", \"Network error or server issue\");\r\n     }\r\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n-      <TouchableOpacity onPress={() => pickImage(setPhoto)} style={styles.imageContainer}>\r\n-        <Image\r\n-          source={photo ? { uri: photo.uri } : require(\"../../assets/images/profile-placeholder.jpg\")}\r\n-          style={styles.image}\r\n-        />\r\n-        <Image\r\n-          source={require(\"../../assets/images/camera.png\")}\r\n-          style={styles.cameraIcon}\r\n-        />\r\n-      </TouchableOpacity>\r\n+      <Text style={styles.title}>Driver Registration</Text>\r\n \r\n-      <Text style={styles.label}>Are you both operator and driver?</Text>\r\n+      <Text style={styles.label}>Are you also the Driver?</Text>\r\n       <View style={styles.optionGroup}>\r\n         <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n           <Text>Oo</Text>\r\n         </TouchableOpacity>\r\n@@ -173,38 +177,90 @@\n           <Text>Hindi</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n \r\n+      {/* Group: Shared */}\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n-      <TextInput style={styles.input} placeholder=\"Pangalan ng TODA\" value={todaName} onChangeText={setTodaName} />\r\n-      <TextInput style={styles.input} placeholder=\"Sektor (East, West...)\" value={sector} onChangeText={setSector} />\r\n+      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+      <TextInput style={styles.input} placeholder=\"Sektor (East/West...)\" value={sector} onChangeText={setSector} />\r\n \r\n-      <TextInput style={styles.input} placeholder=\"Pangalan ng Operator\" value={operatorName} onChangeText={setOperatorName} />\r\n-      <TextInput style={styles.input} placeholder=\"Phone ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-      <TextInput style={styles.input} placeholder=\"Address ng Operator\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n-      <TextInput style={styles.input} placeholder=\"Voter's ID ng Operator\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n+      {/* Group: Operator Name */}\r\n+      <Text style={styles.subheading}>Operator Information</Text>\r\n+      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n+      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n+      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n+      <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+      <TouchableOpacity style={styles.input} onPress={() => setShowOperatorDate(true)}>\r\n+        <Text style={{ color: operatorBirthdate ? \"black\" : \"#aaa\" }}>\r\n+          {operatorBirthdate || \"Select Birthdate\"}\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n+      {showOperatorDate && (\r\n+        <DateTimePicker\r\n+          value={operatorBirthdate ? new Date(operatorBirthdate) : new Date()}\r\n+          mode=\"date\"\r\n+          display=\"default\"\r\n+          onChange={(e, d) => handleDateChange(d!, setOperatorBirthdate, setShowOperatorDate)}\r\n+          maximumDate={new Date()}\r\n+        />\r\n+      )}\r\n \r\n+      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      <TextInput style={styles.input} placeholder=\"Address\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n+      <TextInput style={styles.input} placeholder=\"Voter's ID\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n+\r\n+      {/* Group: Driver if different */}\r\n       {!isSamePerson && (\r\n         <>\r\n-          <TextInput style={styles.input} placeholder=\"Driver Name\" value={driverName} onChangeText={setDriverName} />\r\n-          <TextInput style={styles.input} placeholder=\"Driver Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n-          <TextInput style={styles.input} placeholder=\"Driver Address\" value={driverAddress} onChangeText={setDriverAddress} />\r\n-          <TextInput style={styles.input} placeholder=\"Driver Voter's ID\" value={driverVotersID} onChangeText={setDriverVotersID} />\r\n+          <Text style={styles.subheading}>Driver Information</Text>\r\n+          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n+          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n+          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n+          <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+          <TouchableOpacity style={styles.input} onPress={() => setShowDriverDate(true)}>\r\n+            <Text style={{ color: driverBirthdate ? \"black\" : \"#aaa\" }}>\r\n+              {driverBirthdate || \"Select Birthdate\"}\r\n+            </Text>\r\n+          </TouchableOpacity>\r\n+          {showDriverDate && (\r\n+            <DateTimePicker\r\n+              value={driverBirthdate ? new Date(driverBirthdate) : new Date()}\r\n+              mode=\"date\"\r\n+              display=\"default\"\r\n+              onChange={(e, d) => handleDateChange(d!, setDriverBirthdate, setShowDriverDate)}\r\n+              maximumDate={new Date()}\r\n+            />\r\n+          )}\r\n+          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n+          <TextInput style={styles.input} placeholder=\"Address\" value={driverAddress} onChangeText={setDriverAddress} />\r\n+          <TextInput style={styles.input} placeholder=\"Voter's ID\" value={driverVotersID} onChangeText={setDriverVotersID} />\r\n         </>\r\n       )}\r\n \r\n-      <TextInput style={styles.input} placeholder=\"Experience (1-5 taon...)\" value={experienceYears} onChangeText={setExperienceYears} />\r\n+      {/* Group: Voting */}\r\n+      <TextInput style={styles.input} placeholder=\"Experience (e.g. 1-5 taon)\" value={experienceYears} onChangeText={setExperienceYears} />\r\n       <TextInput style={styles.input} placeholder=\"Lucena Voter? (Oo/Hindi)\" value={isLucenaVoter} onChangeText={setIsLucenaVoter} />\r\n       <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-      <TextInput style={styles.input} placeholder=\"Suggestions (optional)\" value={commentOrSuggestion} onChangeText={setCommentOrSuggestion} />\r\n \r\n-      <TouchableOpacity style={styles.button} onPress={() => pickImage(setVotersIDImage)}>\r\n+      {/* Upload Buttons with indicator */}\r\n+      <TouchableOpacity\r\n+        style={[styles.button, votersIDImage && styles.uploaded]}\r\n+        onPress={() => pickImage(setVotersIDImage)}\r\n+      >\r\n         <Text style={styles.buttonText}>Upload Voter’s ID</Text>\r\n       </TouchableOpacity>\r\n-      <TouchableOpacity style={styles.button} onPress={() => pickImage(setDriversLicenseImage)}>\r\n+\r\n+      <TouchableOpacity\r\n+        style={[styles.button, driversLicenseImage && styles.uploaded]}\r\n+        onPress={() => pickImage(setDriversLicenseImage)}\r\n+      >\r\n         <Text style={styles.buttonText}>Upload Driver’s License</Text>\r\n       </TouchableOpacity>\r\n-      <TouchableOpacity style={styles.button} onPress={() => pickImage(setOrcrImage)}>\r\n+\r\n+      <TouchableOpacity\r\n+        style={[styles.button, orcrImage && styles.uploaded]}\r\n+        onPress={() => pickImage(setOrcrImage)}\r\n+      >\r\n         <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n       </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n@@ -215,29 +271,25 @@\n }\r\n \r\n const styles = StyleSheet.create({\r\n   container: { alignItems: \"center\", padding: 20 },\r\n-  imageContainer: { marginBottom: 20, marginTop: 20, position: \"relative\" },\r\n-  image: { width: 100, height: 100, borderRadius: 50 },\r\n-  cameraIcon: {\r\n-    position: \"absolute\",\r\n-    bottom: 0,\r\n-    right: 0,\r\n-    width: 30,\r\n-    height: 30,\r\n-  },\r\n+  title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n-  optionGroup: { flexDirection: \"row\", marginBottom: 10 },\r\n+  subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n+  optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n-  selected: { backgroundColor: \"#d0e8ff\", borderColor: \"#1e90ff\" },\r\n+  selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n-    backgroundColor: \"#ccc\", padding: 12, borderRadius: 10,\r\n+    backgroundColor: \"#aaa\", padding: 12, borderRadius: 10,\r\n     width: \"100%\", marginVertical: 5,\r\n   },\r\n+  uploaded: {\r\n+    backgroundColor: \"#4caf50\",\r\n+  },\r\n   submitButton: {\r\n     backgroundColor: \"#1e90ff\", padding: 15, borderRadius: 10, width: \"100%\", marginTop: 15,\r\n   },\r\n   buttonText: { color: \"#fff\", textAlign: \"center\", fontWeight: \"bold\" },\r\n"
                },
                {
                    "date": 1745337186452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: { alignItems: \"center\", padding: 20 },\r\n+  container: { alignItems: \"center\", padding: 20, marginTop: 30 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n"
                },
                {
                    "date": 1745337203536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: { alignItems: \"center\", padding: 20, marginTop: 30 },\r\n+  container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n"
                },
                {
                    "date": 1745338528818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n import DateTimePicker, { DateTimePickerEvent } from \"@react-native-community/datetimepicker\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import API_BASE_URL from \"../../config\";\r\n+import { Picker } from \"@react-native-picker/picker\";\r\n \r\n export default function DriverRegister() {\r\n   // Image states\r\n   const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n@@ -180,9 +181,17 @@\n \r\n       {/* Group: Shared */}\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <TextInput style={styles.input} placeholder=\"Sektor (East/West...)\" value={sector} onChangeText={setSector} />\r\n+      <Text style={styles.label}>Sector</Text>\r\n+      <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n+        <Picker.Item label=\"Select Sector\" value=\"\" />\r\n+        <Picker.Item label=\"East\" value=\"East\" />\r\n+        <Picker.Item label=\"West\" value=\"West\" />\r\n+        <Picker.Item label=\"North\" value=\"North\" />\r\n+        <Picker.Item label=\"South\" value=\"South\" />\r\n+        <Picker.Item label=\"Other\" value=\"Other\" />\r\n+      </Picker>\r\n \r\n       {/* Group: Operator Name */}\r\n       <Text style={styles.subheading}>Operator Information</Text>\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n@@ -277,8 +286,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10 },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745338574156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10 },\r\n+  picker: { backgroundColor: \"black\", borderRadius: 10 },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745338607342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"black\", borderRadius: 10 },\r\n+  picker: { backgroundColor: \"black\", borderRadius: 10, width: 100 },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745338621285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"black\", borderRadius: 10, width: 100 },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: 100 },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745338751892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,17 +181,20 @@\n \r\n       {/* Group: Shared */}\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <Text style={styles.label}>Sector</Text>\r\n-      <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n-        <Picker.Item label=\"Select Sector\" value=\"\" />\r\n-        <Picker.Item label=\"East\" value=\"East\" />\r\n-        <Picker.Item label=\"West\" value=\"West\" />\r\n-        <Picker.Item label=\"North\" value=\"North\" />\r\n-        <Picker.Item label=\"South\" value=\"South\" />\r\n-        <Picker.Item label=\"Other\" value=\"Other\" />\r\n-      </Picker>\r\n+      <View style={styles.flex}>\r\n+        <Text style={styles.label}>Sector</Text>\r\n+        <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n+          <Picker.Item label=\"Select Sector\" value=\"\" />\r\n+          <Picker.Item label=\"East\" value=\"East\" />\r\n+          <Picker.Item label=\"West\" value=\"West\" />\r\n+          <Picker.Item label=\"North\" value=\"North\" />\r\n+          <Picker.Item label=\"South\" value=\"South\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+      \r\n \r\n       {/* Group: Operator Name */}\r\n       <Text style={styles.subheading}>Operator Information</Text>\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n@@ -279,8 +282,9 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n+  flex: { flexDirection: \"row\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745338763163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  flex: { flexDirection: \"row\" },\r\n+  flex: { flexDirection: \"row\", alignItems: \"center\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745338787672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  flex: { flexDirection: \"row\", alignItems: \"center\" },\r\n+  flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745338844607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,9 @@\n const styles = StyleSheet.create({\r\n   flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n-  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n+  label: { fontWeight: \"bold\", marginLeft: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745338851038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,9 @@\n const styles = StyleSheet.create({\r\n   flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n-  label: { fontWeight: \"bold\", marginLeft: 5 },\r\n+  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745338858101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,9 @@\n const styles = StyleSheet.create({\r\n   flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n-  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n+  label: { fontWeight: \"bold\", margin: 5 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745338868195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,9 @@\n const styles = StyleSheet.create({\r\n   flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n-  label: { fontWeight: \"bold\", margin: 5 },\r\n+  label: { fontWeight: \"bold\", margin: 10 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745338883609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: 100 },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\" },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745338900958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\" },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"80%\" },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745338978716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n       {/* Group: Shared */}\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n       <View style={styles.flex}>\r\n-        <Text style={styles.label}>Sector</Text>\r\n+        <Text style={styles.sectorlabel}>Sector</Text>\r\n         <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n           <Picker.Item label=\"Select Sector\" value=\"\" />\r\n           <Picker.Item label=\"East\" value=\"East\" />\r\n           <Picker.Item label=\"West\" value=\"West\" />\r\n@@ -285,9 +285,10 @@\n const styles = StyleSheet.create({\r\n   flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n-  label: { fontWeight: \"bold\", margin: 10 },\r\n+  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n+  sectorlabel: { fontWeight: \"bold\", margin: 10 },\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745338988328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n-  sectorlabel: { fontWeight: \"bold\", margin: 10 },\r\n+  sectorlabel: { fontWeight: \"bold\", margin: 10, width: 100},\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745339000197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n-  sectorlabel: { fontWeight: \"bold\", margin: 10, width: 100},\r\n+  sectorlabel: { fontWeight: \"bold\", margin: 10, width: 50},\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745339019382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,9 +291,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"80%\" },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100% - 50\" },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339060323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,9 +291,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100% - 50\" },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\" },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339104089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,19 +181,16 @@\n \r\n       {/* Group: Shared */}\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <View style={styles.flex}>\r\n-        <Text style={styles.sectorlabel}>Sector</Text>\r\n-        <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n-          <Picker.Item label=\"Select Sector\" value=\"\" />\r\n-          <Picker.Item label=\"East\" value=\"East\" />\r\n-          <Picker.Item label=\"West\" value=\"West\" />\r\n-          <Picker.Item label=\"North\" value=\"North\" />\r\n-          <Picker.Item label=\"South\" value=\"South\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n+      <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n+        <Picker.Item label=\"Select Sector\" value=\"\" />\r\n+        <Picker.Item label=\"East\" value=\"East\" />\r\n+        <Picker.Item label=\"West\" value=\"West\" />\r\n+        <Picker.Item label=\"North\" value=\"North\" />\r\n+        <Picker.Item label=\"South\" value=\"South\" />\r\n+        <Picker.Item label=\"Other\" value=\"Other\" />\r\n+      </Picker>\r\n       \r\n \r\n       {/* Group: Operator Name */}\r\n       <Text style={styles.subheading}>Operator Information</Text>\r\n@@ -282,13 +279,11 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  flex: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" },\r\n   container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n   title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n   label: { fontWeight: \"bold\", marginBottom: 5 },\r\n-  sectorlabel: { fontWeight: \"bold\", margin: 10, width: 50},\r\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n"
                },
                {
                    "date": 1745339138428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\" },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\", borderWidth: 1, },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339222860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\", borderWidth: 1, },\r\n+  picker: { width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10, marginBottom: 10, backgroundColor: \"#fff\", },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339232878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10, marginBottom: 10, backgroundColor: \"#fff\", },\r\n+  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\", borderWidth: 1, },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339341206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,14 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\", borderRadius: 10, width: \"100%\", borderWidth: 1, },\r\n+  picker: { borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    borderRadius: 8,\r\n+    marginBottom: 10,\r\n+    width: \"100%\",\r\n+    backgroundColor: \"#fff\", },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339346754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,9 +291,10 @@\n     borderColor: \"#ccc\",\r\n     borderRadius: 8,\r\n     marginBottom: 10,\r\n     width: \"100%\",\r\n-    backgroundColor: \"#fff\", },\r\n+    backgroundColor: \"#fff\",\r\n+  },\r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339472956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,16 +181,18 @@\n \r\n       {/* Group: Shared */}\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n-        <Picker.Item label=\"Select Sector\" value=\"\" />\r\n-        <Picker.Item label=\"East\" value=\"East\" />\r\n-        <Picker.Item label=\"West\" value=\"West\" />\r\n-        <Picker.Item label=\"North\" value=\"North\" />\r\n-        <Picker.Item label=\"South\" value=\"South\" />\r\n-        <Picker.Item label=\"Other\" value=\"Other\" />\r\n-      </Picker>\r\n+      <View style={styles.pickercontainer}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector} mode=\"dropdown\">\r\n+          <Picker.Item label=\"East\" value=\"East\" />\r\n+          <Picker.Item label=\"West\" value=\"West\" />\r\n+          <Picker.Item label=\"North\" value=\"North\" />\r\n+          <Picker.Item label=\"South\" value=\"South\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+\r\n       \r\n \r\n       {/* Group: Operator Name */}\r\n       <Text style={styles.subheading}>Operator Information</Text>\r\n@@ -293,8 +295,18 @@\n     marginBottom: 10,\r\n     width: \"100%\",\r\n     backgroundColor: \"#fff\",\r\n   },\r\n+  pickercontainer: {\r\n+    width: \"100%\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    borderRadius: 10,\r\n+    backgroundColor: \"#fff\",\r\n+    marginBottom: 10,\r\n+    justifyContent: 'center',\r\n+  },\r\n+  \r\n   input: {\r\n     width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n     marginBottom: 10, backgroundColor: \"#fff\",\r\n   },\r\n"
                },
                {
                    "date": 1745339487083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,9 +298,9 @@\n   },\r\n   pickercontainer: {\r\n     width: \"100%\",\r\n     borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n+    borderColor: \"black\",\r\n     borderRadius: 10,\r\n     backgroundColor: \"#fff\",\r\n     marginBottom: 10,\r\n     justifyContent: 'center',\r\n"
                },
                {
                    "date": 1745339527288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,12 +289,8 @@\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n   picker: { borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    borderRadius: 8,\r\n-    marginBottom: 10,\r\n-    width: \"100%\",\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   pickercontainer: {\r\n     width: \"100%\",\r\n"
                },
                {
                    "date": 1745339754399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,9 +247,18 @@\n         </>\r\n       )}\r\n \r\n       {/* Group: Voting */}\r\n-      <TextInput style={styles.input} placeholder=\"Experience (e.g. 1-5 taon)\" value={experienceYears} onChangeText={setExperienceYears} />\r\n+      <View style={styles.pickercontainer}>\r\n+        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} style={styles.picker}>\r\n+          <Picker.Item label=\"Select Experience\" value=\"\" />\r\n+          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n+          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n+          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n+          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n       <TextInput style={styles.input} placeholder=\"Lucena Voter? (Oo/Hindi)\" value={isLucenaVoter} onChangeText={setIsLucenaVoter} />\r\n       <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n       {/* Upload Buttons with indicator */}\r\n@@ -288,11 +297,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { borderWidth: 1,\r\n-    backgroundColor: \"#fff\",\r\n-  },\r\n+  picker: { backgroundColor: \"#fff\" },\r\n   pickercontainer: {\r\n     width: \"100%\",\r\n     borderWidth: 1,\r\n     borderColor: \"black\",\r\n"
                },
                {
                    "date": 1745340002707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,8 +159,9 @@\n       } else {\r\n         Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n       }\r\n     } catch (err) {\r\n+      console.error(\"Driver registration failed:\", err);\r\n       Alert.alert(\"Error\", \"Network error or server issue\");\r\n     }\r\n   };\r\n \r\n"
                },
                {
                    "date": 1745340052989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,9 +160,9 @@\n         Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n       }\r\n     } catch (err) {\r\n       console.error(\"Driver registration failed:\", err);\r\n-      Alert.alert(\"Error\", \"Network error or server issue\");\r\n+      Alert.alert(\"Error\", \"Network error or server issue\", err);\r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1745340068107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,9 +160,9 @@\n         Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n       }\r\n     } catch (err) {\r\n       console.error(\"Driver registration failed:\", err);\r\n-      Alert.alert(\"Error\", \"Network error or server issue\", err);\r\n+      Alert.alert(\"Error\", \"Network error or server issue\");\r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1745461018900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,8 @@\n // app/login_and_reg/dregister.tsx\r\n \r\n import React, { useState } from \"react\";\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  TextInput,\r\n-  TouchableOpacity,\r\n-  StyleSheet,\r\n-  ScrollView,\r\n-  StatusBar,\r\n-  Alert,\r\n-  Platform,\r\n-} from \"react-native\";\r\n+import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, StatusBar, Alert, Platform,} from \"react-native\";\r\n import DateTimePicker, { DateTimePickerEvent } from \"@react-native-community/datetimepicker\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import API_BASE_URL from \"../../config\";\r\n@@ -298,9 +288,9 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: { backgroundColor: \"#fff\" },\r\n+  picker: {borderRadius: 10, backgroundColor: \"#fff\" },\r\n   pickercontainer: {\r\n     width: \"100%\",\r\n     borderWidth: 1,\r\n     borderColor: \"black\",\r\n"
                },
                {
                    "date": 1745492189750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,17 @@\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n       });\r\n \r\n-      const data = await response.json();\r\n+      const text = await response.text();\r\n+      let data;\r\n+      try {\r\n+        data = JSON.parse(text); // ✅ only parse if JSON\r\n+      } catch (e) {\r\n+        console.error(\"❌ Response not JSON:\", text);\r\n+        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n+        return;\r\n+      }\r\n       if (response.ok) {\r\n         Alert.alert(\"Success\", data.message);\r\n       } else {\r\n         Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n"
                },
                {
                    "date": 1745493195866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,10 @@\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n \r\n     // Operator fields\r\n+    const operatorName = `${operatorFirstName} ${operatorMiddleName} ${operatorLastName} ${operatorSuffix}`.trim();\r\n+    formData.append(\"operatorName\", operatorName);\r\n     formData.append(\"operatorFirstName\", operatorFirstName);\r\n     formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n     formData.append(\"operatorLastName\", operatorLastName);\r\n     formData.append(\"operatorSuffix\", operatorSuffix);\r\n@@ -96,8 +98,10 @@\n     formData.append(\"operatorAddress\", operatorAddress);\r\n     formData.append(\"operatorVotersID\", operatorVotersID);\r\n \r\n     if (!isSamePerson) {\r\n+      const driverName = `${driverFirstName} ${driverMiddleName} ${driverLastName} ${driverSuffix}`.trim();\r\n+      formData.append(\"driverName\", driverName);\r\n       formData.append(\"driverFirstName\", driverFirstName);\r\n       formData.append(\"driverMiddleName\", driverMiddleName);\r\n       formData.append(\"driverLastName\", driverLastName);\r\n       formData.append(\"driverSuffix\", driverSuffix);\r\n"
                },
                {
                    "date": 1745493447979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -251,9 +251,9 @@\n       )}\r\n \r\n       {/* Group: Voting */}\r\n       <View style={styles.pickercontainer}>\r\n-        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} style={styles.picker}>\r\n+        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} mode=\"dropdown\">\r\n           <Picker.Item label=\"Select Experience\" value=\"\" />\r\n           <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n           <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n           <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n@@ -300,9 +300,8 @@\n   subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n   option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n   selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  picker: {borderRadius: 10, backgroundColor: \"#fff\" },\r\n   pickercontainer: {\r\n     width: \"100%\",\r\n     borderWidth: 1,\r\n     borderColor: \"black\",\r\n"
                },
                {
                    "date": 1745493587784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -260,9 +260,17 @@\n           <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n           <Picker.Item label=\"Other\" value=\"Other\" />\r\n         </Picker>\r\n       </View>\r\n-      <TextInput style={styles.input} placeholder=\"Lucena Voter? (Oo/Hindi)\" value={isLucenaVoter} onChangeText={setIsLucenaVoter} />\r\n+      <View style={styles.pickercontainer}>\r\n+        <Picker\r\n+          selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} mode=\"dropdown\">\r\n+          <Picker.Item label=\"Select Lucena Voter Status\" value=\"\" />\r\n+          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n+          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n       <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n       {/* Upload Buttons with indicator */}\r\n       <TouchableOpacity\r\n"
                },
                {
                    "date": 1745493703261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,16 +172,8 @@\n       <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n       <Text style={styles.title}>Driver Registration</Text>\r\n \r\n       <Text style={styles.label}>Are you also the Driver?</Text>\r\n-      <View style={styles.optionGroup}>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n-          <Text>Oo</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n-          <Text>Hindi</Text>\r\n-        </TouchableOpacity>\r\n-      </View>\r\n \r\n       {/* Group: Shared */}\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n@@ -270,9 +262,17 @@\n           <Picker.Item label=\"Other\" value=\"Other\" />\r\n         </Picker>\r\n       </View>\r\n       <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-\r\n+      <View style={styles.optionGroup}>\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n+          <Text>Oo</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n+          <Text>Hindi</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+      \r\n       {/* Upload Buttons with indicator */}\r\n       <TouchableOpacity\r\n         style={[styles.button, votersIDImage && styles.uploaded]}\r\n         onPress={() => pickImage(setVotersIDImage)}\r\n"
                },
                {
                    "date": 1745493736536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,23 +172,17 @@\n       <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n       <Text style={styles.title}>Driver Registration</Text>\r\n \r\n       <Text style={styles.label}>Are you also the Driver?</Text>\r\n-\r\n-      {/* Group: Shared */}\r\n-      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n-      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <View style={styles.pickercontainer}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector} mode=\"dropdown\">\r\n-          <Picker.Item label=\"East\" value=\"East\" />\r\n-          <Picker.Item label=\"West\" value=\"West\" />\r\n-          <Picker.Item label=\"North\" value=\"North\" />\r\n-          <Picker.Item label=\"South\" value=\"South\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n+      <View style={styles.optionGroup}>\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n+          <Text>Oo</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n+          <Text>Hindi</Text>\r\n+        </TouchableOpacity>\r\n       </View>\r\n \r\n-      \r\n \r\n       {/* Group: Operator Name */}\r\n       <Text style={styles.subheading}>Operator Information</Text>\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n@@ -262,16 +256,21 @@\n           <Picker.Item label=\"Other\" value=\"Other\" />\r\n         </Picker>\r\n       </View>\r\n       <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-      <View style={styles.optionGroup}>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n-          <Text>Oo</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n-          <Text>Hindi</Text>\r\n-        </TouchableOpacity>\r\n+      {/* Group: Shared */}\r\n+      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+      <View style={styles.pickercontainer}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector} mode=\"dropdown\">\r\n+          <Picker.Item label=\"East\" value=\"East\" />\r\n+          <Picker.Item label=\"West\" value=\"West\" />\r\n+          <Picker.Item label=\"North\" value=\"North\" />\r\n+          <Picker.Item label=\"South\" value=\"South\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n       </View>\r\n+\r\n       \r\n       {/* Upload Buttons with indicator */}\r\n       <TouchableOpacity\r\n         style={[styles.button, votersIDImage && styles.uploaded]}\r\n"
                },
                {
                    "date": 1745501194322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,347 @@\n+// app/login_and_reg/dregister.tsx\r\n+\r\n+import React, { useState } from \"react\";\r\n+import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, StatusBar, Alert, Platform,} from \"react-native\";\r\n+import DateTimePicker, { DateTimePickerEvent } from \"@react-native-community/datetimepicker\";\r\n+import * as ImagePicker from \"expo-image-picker\";\r\n+import { ImagePickerAsset } from \"expo-image-picker\";\r\n+import API_BASE_URL from \"../../config\";\r\n+import { Picker } from \"@react-native-picker/picker\";\r\n+\r\n+export default function DriverRegister() {\r\n+  const [role, setRole] = useState(\"Driver\"); // Default role\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [selfie, setSelfie] = useState<ImagePickerAsset | null>(null);\r\n+  // Image states\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n+\r\n+  const [isSamePerson, setIsSamePerson] = useState(true);\r\n+  const isOperator = role === \"Operator\" || role === \"Both\";\r\n+  const isDriver = role === \"Driver\" || role === \"Both\";\r\n+\r\n+  // Shared info\r\n+  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n+  const [todaName, setTodaName] = useState(\"\");\r\n+  const [sector, setSector] = useState(\"\");\r\n+\r\n+  // Operator fields\r\n+  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n+  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n+  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n+  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n+  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n+  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n+  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n+  const [operatorAddress, setOperatorAddress] = useState(\"\");\r\n+  const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n+\r\n+  // Driver fields\r\n+  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n+  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n+  const [driverLastName, setDriverLastName] = useState(\"\");\r\n+  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n+  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n+  const [showDriverDate, setShowDriverDate] = useState(false);\r\n+  const [driverPhone, setDriverPhone] = useState(\"\");\r\n+  const [driverAddress, setDriverAddress] = useState(\"\");\r\n+  const [driverVotersID, setDriverVotersID] = useState(\"\");\r\n+\r\n+  // Voting\r\n+  const [experienceYears, setExperienceYears] = useState(\"\");\r\n+  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n+  const [votingLocation, setVotingLocation] = useState(\"\");\r\n+\r\n+  const pickImage = async (setImageFunc: (asset: ImagePickerAsset) => void) => {\r\n+    const result = await ImagePicker.launchImageLibraryAsync({\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      allowsEditing: true,\r\n+      aspect: [1, 1],\r\n+      quality: 1,\r\n+    });\r\n+\r\n+    if (!result.canceled && result.assets?.length > 0) {\r\n+      setImageFunc(result.assets[0]);\r\n+    }\r\n+  };\r\n+\r\n+  const handleDateChange = (\r\n+    selectedDate: Date,\r\n+    setFunc: (val: string) => void,\r\n+    setShow: (val: boolean) => void\r\n+  ) => {\r\n+    setShow(Platform.OS === \"ios\");\r\n+    if (selectedDate) {\r\n+      const formatted = selectedDate.toISOString().split(\"T\")[0];\r\n+      setFunc(formatted);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async () => {\r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Missing Voter's ID image\");\r\n+      return;\r\n+    }\r\n+\r\n+    const formData = new FormData();\r\n+    formData.append(\"role\", role);\r\n+    formData.append(\"email\", email);\r\n+    formData.append(\"password\", password);\r\n+\r\n+    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n+    formData.append(\"franchiseNumber\", franchiseNumber);\r\n+    formData.append(\"todaName\", todaName);\r\n+    formData.append(\"sector\", sector);\r\n+\r\n+    // Operator fields\r\n+    const operatorName = `${operatorFirstName} ${operatorMiddleName} ${operatorLastName} ${operatorSuffix}`.trim();\r\n+    formData.append(\"operatorName\", operatorName);\r\n+    formData.append(\"operatorFirstName\", operatorFirstName);\r\n+    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+    formData.append(\"operatorLastName\", operatorLastName);\r\n+    formData.append(\"operatorSuffix\", operatorSuffix);\r\n+    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n+    formData.append(\"operatorPhone\", operatorPhone);\r\n+    formData.append(\"operatorAddress\", operatorAddress);\r\n+    formData.append(\"operatorVotersID\", operatorVotersID);\r\n+\r\n+    if (!isSamePerson) {\r\n+      const driverName = `${driverFirstName} ${driverMiddleName} ${driverLastName} ${driverSuffix}`.trim();\r\n+      formData.append(\"driverName\", driverName);\r\n+      formData.append(\"driverFirstName\", driverFirstName);\r\n+      formData.append(\"driverMiddleName\", driverMiddleName);\r\n+      formData.append(\"driverLastName\", driverLastName);\r\n+      formData.append(\"driverSuffix\", driverSuffix);\r\n+      formData.append(\"driverBirthdate\", driverBirthdate);\r\n+      formData.append(\"driverPhone\", driverPhone);\r\n+      formData.append(\"driverAddress\", driverAddress);\r\n+      formData.append(\"driverVotersID\", driverVotersID);\r\n+    }\r\n+\r\n+    formData.append(\"experienceYears\", experienceYears);\r\n+    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n+    formData.append(\"votingLocation\", votingLocation);\r\n+\r\n+    // Images\r\n+    formData.append(\"votersIDImage\", {\r\n+      uri: votersIDImage.uri,\r\n+      type: \"image/jpeg\",\r\n+      name: \"voter_id.jpg\",\r\n+    } as any);\r\n+\r\n+    if (driversLicenseImage) {\r\n+      formData.append(\"driversLicenseImage\", {\r\n+        uri: driversLicenseImage.uri,\r\n+        type: \"image/jpeg\",\r\n+        name: \"license.jpg\",\r\n+      } as any);\r\n+    }\r\n+\r\n+    if (orcrImage) {\r\n+      formData.append(\"orcrImage\", {\r\n+        uri: orcrImage.uri,\r\n+        type: \"image/jpeg\",\r\n+        name: \"orcr.jpg\",\r\n+      } as any);\r\n+    }\r\n+\r\n+    try {\r\n+      const response = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n+        method: \"POST\",\r\n+        body: formData,\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+        },\r\n+      });\r\n+\r\n+      const text = await response.text();\r\n+      let data;\r\n+      try {\r\n+        data = JSON.parse(text); // ✅ only parse if JSON\r\n+      } catch (e) {\r\n+        console.error(\"❌ Response not JSON:\", text);\r\n+        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n+        return;\r\n+      }\r\n+      if (response.ok) {\r\n+        Alert.alert(\"Success\", data.message);\r\n+      } else {\r\n+        Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(\"Driver registration failed:\", err);\r\n+      Alert.alert(\"Error\", \"Network error or server issue\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <ScrollView contentContainerStyle={styles.container}>\r\n+      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n+      <Text style={styles.title}>Driver Registration</Text>\r\n+\r\n+      <Text style={styles.label}>Are you also the Driver?</Text>\r\n+      <View style={styles.optionGroup}>\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n+          <Text>Oo</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n+          <Text>Hindi</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+\r\n+\r\n+      {/* Group: Operator Name */}\r\n+      <Text style={styles.subheading}>Operator Information</Text>\r\n+      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n+      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n+      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n+      <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+      <TouchableOpacity style={styles.input} onPress={() => setShowOperatorDate(true)}>\r\n+        <Text style={{ color: operatorBirthdate ? \"black\" : \"#aaa\" }}>\r\n+          {operatorBirthdate || \"Select Birthdate\"}\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n+      {showOperatorDate && (\r\n+        <DateTimePicker\r\n+          value={operatorBirthdate ? new Date(operatorBirthdate) : new Date()}\r\n+          mode=\"date\"\r\n+          display=\"default\"\r\n+          onChange={(e, d) => handleDateChange(d!, setOperatorBirthdate, setShowOperatorDate)}\r\n+          maximumDate={new Date()}\r\n+        />\r\n+      )}\r\n+\r\n+      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      <TextInput style={styles.input} placeholder=\"Address\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n+      <TextInput style={styles.input} placeholder=\"Voter's ID\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n+\r\n+      {/* Group: Driver if different */}\r\n+      {!isSamePerson && (\r\n+        <>\r\n+          <Text style={styles.subheading}>Driver Information</Text>\r\n+          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n+          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n+          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n+          <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+          <TouchableOpacity style={styles.input} onPress={() => setShowDriverDate(true)}>\r\n+            <Text style={{ color: driverBirthdate ? \"black\" : \"#aaa\" }}>\r\n+              {driverBirthdate || \"Select Birthdate\"}\r\n+            </Text>\r\n+          </TouchableOpacity>\r\n+          {showDriverDate && (\r\n+            <DateTimePicker\r\n+              value={driverBirthdate ? new Date(driverBirthdate) : new Date()}\r\n+              mode=\"date\"\r\n+              display=\"default\"\r\n+              onChange={(e, d) => handleDateChange(d!, setDriverBirthdate, setShowDriverDate)}\r\n+              maximumDate={new Date()}\r\n+            />\r\n+          )}\r\n+          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n+          <TextInput style={styles.input} placeholder=\"Address\" value={driverAddress} onChangeText={setDriverAddress} />\r\n+          <TextInput style={styles.input} placeholder=\"Voter's ID\" value={driverVotersID} onChangeText={setDriverVotersID} />\r\n+        </>\r\n+      )}\r\n+\r\n+      {/* Group: Voting */}\r\n+      <View style={styles.pickercontainer}>\r\n+        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} mode=\"dropdown\">\r\n+          <Picker.Item label=\"Select Experience\" value=\"\" />\r\n+          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n+          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n+          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n+          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <View style={styles.pickercontainer}>\r\n+        <Picker\r\n+          selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} mode=\"dropdown\">\r\n+          <Picker.Item label=\"Select Lucena Voter Status\" value=\"\" />\r\n+          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n+          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+      \r\n+      {/* Group: Shared */}\r\n+      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+      <View style={styles.pickercontainer}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector} mode=\"dropdown\">\r\n+          <Picker.Item label=\"East\" value=\"East\" />\r\n+          <Picker.Item label=\"West\" value=\"West\" />\r\n+          <Picker.Item label=\"North\" value=\"North\" />\r\n+          <Picker.Item label=\"South\" value=\"South\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+\r\n+      \r\n+      {/* Upload Buttons with indicator */}\r\n+      <TouchableOpacity\r\n+        style={[styles.button, votersIDImage && styles.uploaded]}\r\n+        onPress={() => pickImage(setVotersIDImage)}\r\n+      >\r\n+        <Text style={styles.buttonText}>Upload Voter’s ID</Text>\r\n+      </TouchableOpacity>\r\n+\r\n+      <TouchableOpacity\r\n+        style={[styles.button, driversLicenseImage && styles.uploaded]}\r\n+        onPress={() => pickImage(setDriversLicenseImage)}\r\n+      >\r\n+        <Text style={styles.buttonText}>Upload Driver’s License</Text>\r\n+      </TouchableOpacity>\r\n+\r\n+      <TouchableOpacity\r\n+        style={[styles.button, orcrImage && styles.uploaded]}\r\n+        onPress={() => pickImage(setOrcrImage)}\r\n+      >\r\n+        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n+      </TouchableOpacity>\r\n+\r\n+      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n+        <Text style={styles.buttonText}>Register</Text>\r\n+      </TouchableOpacity>\r\n+    </ScrollView>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n+  title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n+  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n+  subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n+  optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n+  option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n+  selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n+  pickercontainer: {\r\n+    width: \"100%\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"black\",\r\n+    borderRadius: 10,\r\n+    backgroundColor: \"#fff\",\r\n+    marginBottom: 10,\r\n+    justifyContent: 'center',\r\n+  },\r\n+  \r\n+  input: {\r\n+    width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n+    marginBottom: 10, backgroundColor: \"#fff\",\r\n+  },\r\n+  button: {\r\n+    backgroundColor: \"#aaa\", padding: 12, borderRadius: 10,\r\n+    width: \"100%\", marginVertical: 5,\r\n+  },\r\n+  uploaded: {\r\n+    backgroundColor: \"#4caf50\",\r\n+  },\r\n+  submitButton: {\r\n+    backgroundColor: \"#1e90ff\", padding: 15, borderRadius: 10, width: \"100%\", marginTop: 15,\r\n+  },\r\n+  buttonText: { color: \"#fff\", textAlign: \"center\", fontWeight: \"bold\" },\r\n+});\r\n"
                },
                {
                    "date": 1745501756738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import { Picker } from \"@react-native-picker/picker\";\r\n \r\n export default function DriverRegister() {\r\n   const [role, setRole] = useState(\"Driver\"); // Default role\r\n+  const isBoth = role === \"Both\";\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n   const [selfie, setSelfie] = useState<ImagePickerAsset | null>(null);\r\n@@ -80,8 +81,9 @@\n     }\r\n   };\r\n \r\n   const handleSubmit = async () => {\r\n+    \r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Missing Voter's ID image\");\r\n       return;\r\n     }\r\n@@ -344,340 +346,4 @@\n     backgroundColor: \"#1e90ff\", padding: 15, borderRadius: 10, width: \"100%\", marginTop: 15,\r\n   },\r\n   buttonText: { color: \"#fff\", textAlign: \"center\", fontWeight: \"bold\" },\r\n });\r\n-// app/login_and_reg/dregister.tsx\r\n-\r\n-import React, { useState } from \"react\";\r\n-import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, StatusBar, Alert, Platform,} from \"react-native\";\r\n-import DateTimePicker, { DateTimePickerEvent } from \"@react-native-community/datetimepicker\";\r\n-import * as ImagePicker from \"expo-image-picker\";\r\n-import { ImagePickerAsset } from \"expo-image-picker\";\r\n-import API_BASE_URL from \"../../config\";\r\n-import { Picker } from \"@react-native-picker/picker\";\r\n-\r\n-export default function DriverRegister() {\r\n-  // Image states\r\n-  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-\r\n-  const [isSamePerson, setIsSamePerson] = useState(true);\r\n-\r\n-  // Shared info\r\n-  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n-  const [todaName, setTodaName] = useState(\"\");\r\n-  const [sector, setSector] = useState(\"\");\r\n-\r\n-  // Operator fields\r\n-  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n-  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n-  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n-  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n-  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n-  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n-  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n-  const [operatorAddress, setOperatorAddress] = useState(\"\");\r\n-  const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n-\r\n-  // Driver fields\r\n-  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n-  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n-  const [driverLastName, setDriverLastName] = useState(\"\");\r\n-  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n-  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n-  const [showDriverDate, setShowDriverDate] = useState(false);\r\n-  const [driverPhone, setDriverPhone] = useState(\"\");\r\n-  const [driverAddress, setDriverAddress] = useState(\"\");\r\n-  const [driverVotersID, setDriverVotersID] = useState(\"\");\r\n-\r\n-  // Voting\r\n-  const [experienceYears, setExperienceYears] = useState(\"\");\r\n-  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n-  const [votingLocation, setVotingLocation] = useState(\"\");\r\n-\r\n-  const pickImage = async (setImageFunc: (asset: ImagePickerAsset) => void) => {\r\n-    const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-      allowsEditing: true,\r\n-      aspect: [1, 1],\r\n-      quality: 1,\r\n-    });\r\n-\r\n-    if (!result.canceled && result.assets?.length > 0) {\r\n-      setImageFunc(result.assets[0]);\r\n-    }\r\n-  };\r\n-\r\n-  const handleDateChange = (\r\n-    selectedDate: Date,\r\n-    setFunc: (val: string) => void,\r\n-    setShow: (val: boolean) => void\r\n-  ) => {\r\n-    setShow(Platform.OS === \"ios\");\r\n-    if (selectedDate) {\r\n-      const formatted = selectedDate.toISOString().split(\"T\")[0];\r\n-      setFunc(formatted);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSubmit = async () => {\r\n-    if (!votersIDImage) {\r\n-      Alert.alert(\"Missing Voter's ID image\");\r\n-      return;\r\n-    }\r\n-\r\n-    const formData = new FormData();\r\n-\r\n-    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n-    formData.append(\"franchiseNumber\", franchiseNumber);\r\n-    formData.append(\"todaName\", todaName);\r\n-    formData.append(\"sector\", sector);\r\n-\r\n-    // Operator fields\r\n-    const operatorName = `${operatorFirstName} ${operatorMiddleName} ${operatorLastName} ${operatorSuffix}`.trim();\r\n-    formData.append(\"operatorName\", operatorName);\r\n-    formData.append(\"operatorFirstName\", operatorFirstName);\r\n-    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n-    formData.append(\"operatorLastName\", operatorLastName);\r\n-    formData.append(\"operatorSuffix\", operatorSuffix);\r\n-    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n-    formData.append(\"operatorPhone\", operatorPhone);\r\n-    formData.append(\"operatorAddress\", operatorAddress);\r\n-    formData.append(\"operatorVotersID\", operatorVotersID);\r\n-\r\n-    if (!isSamePerson) {\r\n-      const driverName = `${driverFirstName} ${driverMiddleName} ${driverLastName} ${driverSuffix}`.trim();\r\n-      formData.append(\"driverName\", driverName);\r\n-      formData.append(\"driverFirstName\", driverFirstName);\r\n-      formData.append(\"driverMiddleName\", driverMiddleName);\r\n-      formData.append(\"driverLastName\", driverLastName);\r\n-      formData.append(\"driverSuffix\", driverSuffix);\r\n-      formData.append(\"driverBirthdate\", driverBirthdate);\r\n-      formData.append(\"driverPhone\", driverPhone);\r\n-      formData.append(\"driverAddress\", driverAddress);\r\n-      formData.append(\"driverVotersID\", driverVotersID);\r\n-    }\r\n-\r\n-    formData.append(\"experienceYears\", experienceYears);\r\n-    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n-    formData.append(\"votingLocation\", votingLocation);\r\n-\r\n-    // Images\r\n-    formData.append(\"votersIDImage\", {\r\n-      uri: votersIDImage.uri,\r\n-      type: \"image/jpeg\",\r\n-      name: \"voter_id.jpg\",\r\n-    } as any);\r\n-\r\n-    if (driversLicenseImage) {\r\n-      formData.append(\"driversLicenseImage\", {\r\n-        uri: driversLicenseImage.uri,\r\n-        type: \"image/jpeg\",\r\n-        name: \"license.jpg\",\r\n-      } as any);\r\n-    }\r\n-\r\n-    if (orcrImage) {\r\n-      formData.append(\"orcrImage\", {\r\n-        uri: orcrImage.uri,\r\n-        type: \"image/jpeg\",\r\n-        name: \"orcr.jpg\",\r\n-      } as any);\r\n-    }\r\n-\r\n-    try {\r\n-      const response = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n-        method: \"POST\",\r\n-        body: formData,\r\n-        headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n-        },\r\n-      });\r\n-\r\n-      const text = await response.text();\r\n-      let data;\r\n-      try {\r\n-        data = JSON.parse(text); // ✅ only parse if JSON\r\n-      } catch (e) {\r\n-        console.error(\"❌ Response not JSON:\", text);\r\n-        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n-        return;\r\n-      }\r\n-      if (response.ok) {\r\n-        Alert.alert(\"Success\", data.message);\r\n-      } else {\r\n-        Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n-      }\r\n-    } catch (err) {\r\n-      console.error(\"Driver registration failed:\", err);\r\n-      Alert.alert(\"Error\", \"Network error or server issue\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <ScrollView contentContainerStyle={styles.container}>\r\n-      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n-      <Text style={styles.title}>Driver Registration</Text>\r\n-\r\n-      <Text style={styles.label}>Are you also the Driver?</Text>\r\n-      <View style={styles.optionGroup}>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n-          <Text>Oo</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n-          <Text>Hindi</Text>\r\n-        </TouchableOpacity>\r\n-      </View>\r\n-\r\n-\r\n-      {/* Group: Operator Name */}\r\n-      <Text style={styles.subheading}>Operator Information</Text>\r\n-      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n-      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n-      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n-      <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n-      <TouchableOpacity style={styles.input} onPress={() => setShowOperatorDate(true)}>\r\n-        <Text style={{ color: operatorBirthdate ? \"black\" : \"#aaa\" }}>\r\n-          {operatorBirthdate || \"Select Birthdate\"}\r\n-        </Text>\r\n-      </TouchableOpacity>\r\n-      {showOperatorDate && (\r\n-        <DateTimePicker\r\n-          value={operatorBirthdate ? new Date(operatorBirthdate) : new Date()}\r\n-          mode=\"date\"\r\n-          display=\"default\"\r\n-          onChange={(e, d) => handleDateChange(d!, setOperatorBirthdate, setShowOperatorDate)}\r\n-          maximumDate={new Date()}\r\n-        />\r\n-      )}\r\n-\r\n-      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-      <TextInput style={styles.input} placeholder=\"Address\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n-      <TextInput style={styles.input} placeholder=\"Voter's ID\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n-\r\n-      {/* Group: Driver if different */}\r\n-      {!isSamePerson && (\r\n-        <>\r\n-          <Text style={styles.subheading}>Driver Information</Text>\r\n-          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n-          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n-          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n-          <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n-          <TouchableOpacity style={styles.input} onPress={() => setShowDriverDate(true)}>\r\n-            <Text style={{ color: driverBirthdate ? \"black\" : \"#aaa\" }}>\r\n-              {driverBirthdate || \"Select Birthdate\"}\r\n-            </Text>\r\n-          </TouchableOpacity>\r\n-          {showDriverDate && (\r\n-            <DateTimePicker\r\n-              value={driverBirthdate ? new Date(driverBirthdate) : new Date()}\r\n-              mode=\"date\"\r\n-              display=\"default\"\r\n-              onChange={(e, d) => handleDateChange(d!, setDriverBirthdate, setShowDriverDate)}\r\n-              maximumDate={new Date()}\r\n-            />\r\n-          )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n-          <TextInput style={styles.input} placeholder=\"Address\" value={driverAddress} onChangeText={setDriverAddress} />\r\n-          <TextInput style={styles.input} placeholder=\"Voter's ID\" value={driverVotersID} onChangeText={setDriverVotersID} />\r\n-        </>\r\n-      )}\r\n-\r\n-      {/* Group: Voting */}\r\n-      <View style={styles.pickercontainer}>\r\n-        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} mode=\"dropdown\">\r\n-          <Picker.Item label=\"Select Experience\" value=\"\" />\r\n-          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n-          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n-          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n-          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <View style={styles.pickercontainer}>\r\n-        <Picker\r\n-          selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} mode=\"dropdown\">\r\n-          <Picker.Item label=\"Select Lucena Voter Status\" value=\"\" />\r\n-          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n-          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-      {/* Group: Shared */}\r\n-      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n-      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <View style={styles.pickercontainer}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector} mode=\"dropdown\">\r\n-          <Picker.Item label=\"East\" value=\"East\" />\r\n-          <Picker.Item label=\"West\" value=\"West\" />\r\n-          <Picker.Item label=\"North\" value=\"North\" />\r\n-          <Picker.Item label=\"South\" value=\"South\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-\r\n-      \r\n-      {/* Upload Buttons with indicator */}\r\n-      <TouchableOpacity\r\n-        style={[styles.button, votersIDImage && styles.uploaded]}\r\n-        onPress={() => pickImage(setVotersIDImage)}\r\n-      >\r\n-        <Text style={styles.buttonText}>Upload Voter’s ID</Text>\r\n-      </TouchableOpacity>\r\n-\r\n-      <TouchableOpacity\r\n-        style={[styles.button, driversLicenseImage && styles.uploaded]}\r\n-        onPress={() => pickImage(setDriversLicenseImage)}\r\n-      >\r\n-        <Text style={styles.buttonText}>Upload Driver’s License</Text>\r\n-      </TouchableOpacity>\r\n-\r\n-      <TouchableOpacity\r\n-        style={[styles.button, orcrImage && styles.uploaded]}\r\n-        onPress={() => pickImage(setOrcrImage)}\r\n-      >\r\n-        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n-      </TouchableOpacity>\r\n-\r\n-      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n-        <Text style={styles.buttonText}>Register</Text>\r\n-      </TouchableOpacity>\r\n-    </ScrollView>\r\n-  );\r\n-}\r\n-\r\n-const styles = StyleSheet.create({\r\n-  container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n-  title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n-  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n-  subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n-  optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n-  option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n-  selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  pickercontainer: {\r\n-    width: \"100%\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"black\",\r\n-    borderRadius: 10,\r\n-    backgroundColor: \"#fff\",\r\n-    marginBottom: 10,\r\n-    justifyContent: 'center',\r\n-  },\r\n-  \r\n-  input: {\r\n-    width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n-    marginBottom: 10, backgroundColor: \"#fff\",\r\n-  },\r\n-  button: {\r\n-    backgroundColor: \"#aaa\", padding: 12, borderRadius: 10,\r\n-    width: \"100%\", marginVertical: 5,\r\n-  },\r\n-  uploaded: {\r\n-    backgroundColor: \"#4caf50\",\r\n-  },\r\n-  submitButton: {\r\n-    backgroundColor: \"#1e90ff\", padding: 15, borderRadius: 10, width: \"100%\", marginTop: 15,\r\n-  },\r\n-  buttonText: { color: \"#fff\", textAlign: \"center\", fontWeight: \"bold\" },\r\n-});\r\n"
                },
                {
                    "date": 1745502090673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,25 +10,22 @@\n \r\n export default function DriverRegister() {\r\n   const [role, setRole] = useState(\"Driver\"); // Default role\r\n   const isBoth = role === \"Both\";\r\n+\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+\r\n   const [selfie, setSelfie] = useState<ImagePickerAsset | null>(null);\r\n-  // Image states\r\n   const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n   const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n   const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-\r\n-  const [isSamePerson, setIsSamePerson] = useState(true);\r\n-  const isOperator = role === \"Operator\" || role === \"Both\";\r\n-  const isDriver = role === \"Driver\" || role === \"Both\";\r\n-\r\n-  // Shared info\r\n+  \r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n-  const [todaName, setTodaName] = useState(\"\");\r\n   const [sector, setSector] = useState(\"\");\r\n+  \r\n+  \r\n \r\n   // Operator fields\r\n   const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n   const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n@@ -36,10 +33,8 @@\n   const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n   const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n   const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n   const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n-  const [operatorAddress, setOperatorAddress] = useState(\"\");\r\n-  const [operatorVotersID, setOperatorVotersID] = useState(\"\");\r\n \r\n   // Driver fields\r\n   const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n   const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n@@ -47,25 +42,28 @@\n   const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n   const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n   const [showDriverDate, setShowDriverDate] = useState(false);\r\n   const [driverPhone, setDriverPhone] = useState(\"\");\r\n-  const [driverAddress, setDriverAddress] = useState(\"\");\r\n-  const [driverVotersID, setDriverVotersID] = useState(\"\");\r\n \r\n   // Voting\r\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n   const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n   const [votingLocation, setVotingLocation] = useState(\"\");\r\n+  \r\n+  const isOperator = role === \"Operator\" || role === \"Both\";\r\n+  const isDriver = role === \"Driver\" || role === \"Both\";\r\n \r\n+  const [isSamePerson, setIsSamePerson] = useState(true);\r\n+  const [todaName, setTodaName] = useState(\"\");\r\n+\r\n   const pickImage = async (setImageFunc: (asset: ImagePickerAsset) => void) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n       aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-\r\n-    if (!result.canceled && result.assets?.length > 0) {\r\n+    if (!result.canceled && result.assets.length > 0) {\r\n       setImageFunc(result.assets[0]);\r\n     }\r\n   };\r\n \r\n@@ -106,10 +104,8 @@\n     formData.append(\"operatorLastName\", operatorLastName);\r\n     formData.append(\"operatorSuffix\", operatorSuffix);\r\n     formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n     formData.append(\"operatorPhone\", operatorPhone);\r\n-    formData.append(\"operatorAddress\", operatorAddress);\r\n-    formData.append(\"operatorVotersID\", operatorVotersID);\r\n \r\n     if (!isSamePerson) {\r\n       const driverName = `${driverFirstName} ${driverMiddleName} ${driverLastName} ${driverSuffix}`.trim();\r\n       formData.append(\"driverName\", driverName);\r\n@@ -118,10 +114,8 @@\n       formData.append(\"driverLastName\", driverLastName);\r\n       formData.append(\"driverSuffix\", driverSuffix);\r\n       formData.append(\"driverBirthdate\", driverBirthdate);\r\n       formData.append(\"driverPhone\", driverPhone);\r\n-      formData.append(\"driverAddress\", driverAddress);\r\n-      formData.append(\"driverVotersID\", driverVotersID);\r\n     }\r\n \r\n     formData.append(\"experienceYears\", experienceYears);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n"
                },
                {
                    "date": 1745502266124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n   // Voting\r\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n   const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n   const [votingLocation, setVotingLocation] = useState(\"\");\r\n-  \r\n+\r\n   const isOperator = role === \"Operator\" || role === \"Both\";\r\n   const isDriver = role === \"Driver\" || role === \"Both\";\r\n \r\n   const [isSamePerson, setIsSamePerson] = useState(true);\r\n@@ -79,13 +79,8 @@\n     }\r\n   };\r\n \r\n   const handleSubmit = async () => {\r\n-    \r\n-    if (!votersIDImage) {\r\n-      Alert.alert(\"Missing Voter's ID image\");\r\n-      return;\r\n-    }\r\n \r\n     const formData = new FormData();\r\n     formData.append(\"role\", role);\r\n     formData.append(\"email\", email);\r\n@@ -121,14 +116,28 @@\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n     formData.append(\"votingLocation\", votingLocation);\r\n \r\n     // Images\r\n+    \r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Missing Voter's ID image\");\r\n+      return;\r\n+    }\r\n+    if (!selfie) {\r\n+      Alert.alert(\"Missing Voter's ID image\");\r\n+      return;\r\n+    }\r\n     formData.append(\"votersIDImage\", {\r\n       uri: votersIDImage.uri,\r\n       type: \"image/jpeg\",\r\n       name: \"voter_id.jpg\",\r\n     } as any);\r\n \r\n+    formData.append(\"selfie\", {\r\n+      uri: selfie.uri,\r\n+      type: \"image/jpeg\",\r\n+      name: \"selfie.jpg\",\r\n+    } as any);\r\n     if (driversLicenseImage) {\r\n       formData.append(\"driversLicenseImage\", {\r\n         uri: driversLicenseImage.uri,\r\n         type: \"image/jpeg\",\r\n"
                },
                {
                    "date": 1745502296050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,16 +186,15 @@\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n       <Text style={styles.title}>Driver Registration</Text>\r\n \r\n-      <Text style={styles.label}>Are you also the Driver?</Text>\r\n-      <View style={styles.optionGroup}>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(true)} style={[styles.option, isSamePerson && styles.selected]}>\r\n-          <Text>Oo</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity onPress={() => setIsSamePerson(false)} style={[styles.option, !isSamePerson && styles.selected]}>\r\n-          <Text>Hindi</Text>\r\n-        </TouchableOpacity>\r\n+      <View style={styles.pickercontainer}>\r\n+        <Text style={styles.label}>Ikaw ba ay:</Text>\r\n+        <Picker selectedValue={role} onValueChange={setRole}>\r\n+          <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n+          <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n+          <Picker.Item label=\"Parehas (Both)\" value=\"Both\" />\r\n+        </Picker>\r\n       </View>\r\n \r\n \r\n       {/* Group: Operator Name */}\r\n"
                },
                {
                    "date": 1745517020356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,351 +1,317 @@\n // app/login_and_reg/dregister.tsx\r\n \r\n import React, { useState } from \"react\";\r\n-import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, StatusBar, Alert, Platform,} from \"react-native\";\r\n-import DateTimePicker, { DateTimePickerEvent } from \"@react-native-community/datetimepicker\";\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TextInput,\r\n+  TouchableOpacity,\r\n+  ScrollView,\r\n+  StyleSheet,\r\n+  Alert,\r\n+  StatusBar,\r\n+  Platform,\r\n+  Image,\r\n+} from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n+import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n+import { Picker } from \"@react-native-picker/picker\";\r\n import API_BASE_URL from \"../../config\";\r\n-import { Picker } from \"@react-native-picker/picker\";\r\n \r\n export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Driver\"); // Default role\r\n+  const [role, setRole] = useState(\"Driver\"); // \"Driver\", \"Operator\", \"Both\"\r\n   const isBoth = role === \"Both\";\r\n \r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-\r\n-  const [selfie, setSelfie] = useState<ImagePickerAsset | null>(null);\r\n-  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-  \r\n+  // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n-  const [sector, setSector] = useState(\"\");\r\n-  \r\n-  \r\n+  const [todaName, setTodaName] = useState(\"\");\r\n+  const [sector, setSector] = useState(\"East\");\r\n+  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n+  const [votingLocation, setVotingLocation] = useState(\"\");\r\n \r\n-  // Operator fields\r\n+  // Operator info\r\n   const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n   const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n   const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n   const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n   const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n   const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n   const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n \r\n-  // Driver fields\r\n+  // Driver info\r\n   const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n   const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n   const [driverLastName, setDriverLastName] = useState(\"\");\r\n   const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n   const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n   const [showDriverDate, setShowDriverDate] = useState(false);\r\n   const [driverPhone, setDriverPhone] = useState(\"\");\r\n-\r\n-  // Voting\r\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n-  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n-  const [votingLocation, setVotingLocation] = useState(\"\");\r\n \r\n-  const isOperator = role === \"Operator\" || role === \"Both\";\r\n-  const isDriver = role === \"Driver\" || role === \"Both\";\r\n+  // Account\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n \r\n-  const [isSamePerson, setIsSamePerson] = useState(true);\r\n-  const [todaName, setTodaName] = useState(\"\");\r\n+  // Images\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n \r\n-  const pickImage = async (setImageFunc: (asset: ImagePickerAsset) => void) => {\r\n+  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n-      aspect: [1, 1],\r\n       quality: 1,\r\n     });\r\n-    if (!result.canceled && result.assets.length > 0) {\r\n-      setImageFunc(result.assets[0]);\r\n+    if (!result.canceled && result.assets?.length > 0) {\r\n+      setFunc(result.assets[0]);\r\n     }\r\n   };\r\n \r\n-  const handleDateChange = (\r\n-    selectedDate: Date,\r\n-    setFunc: (val: string) => void,\r\n-    setShow: (val: boolean) => void\r\n-  ) => {\r\n-    setShow(Platform.OS === \"ios\");\r\n-    if (selectedDate) {\r\n-      const formatted = selectedDate.toISOString().split(\"T\")[0];\r\n-      setFunc(formatted);\r\n-    }\r\n+  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n+    setShow(false);\r\n+    const formatted = date.toISOString().split(\"T\")[0];\r\n+    setFunc(formatted);\r\n   };\r\n \r\n   const handleSubmit = async () => {\r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n+      return;\r\n+    }\r\n+    if (password !== confirmPassword) {\r\n+      Alert.alert(\"Error\", \"Passwords do not match\");\r\n+      return;\r\n+    }\r\n \r\n     const formData = new FormData();\r\n     formData.append(\"role\", role);\r\n-    formData.append(\"email\", email);\r\n-    formData.append(\"password\", password);\r\n-\r\n-    formData.append(\"isSamePerson\", isSamePerson.toString());\r\n     formData.append(\"franchiseNumber\", franchiseNumber);\r\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n+    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n+    formData.append(\"votingLocation\", votingLocation);\r\n+    formData.append(\"email\", email);\r\n+    formData.append(\"password\", password);\r\n \r\n-    // Operator fields\r\n-    const operatorName = `${operatorFirstName} ${operatorMiddleName} ${operatorLastName} ${operatorSuffix}`.trim();\r\n-    formData.append(\"operatorName\", operatorName);\r\n     formData.append(\"operatorFirstName\", operatorFirstName);\r\n     formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n     formData.append(\"operatorLastName\", operatorLastName);\r\n     formData.append(\"operatorSuffix\", operatorSuffix);\r\n     formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n     formData.append(\"operatorPhone\", operatorPhone);\r\n \r\n-    if (!isSamePerson) {\r\n-      const driverName = `${driverFirstName} ${driverMiddleName} ${driverLastName} ${driverSuffix}`.trim();\r\n-      formData.append(\"driverName\", driverName);\r\n-      formData.append(\"driverFirstName\", driverFirstName);\r\n-      formData.append(\"driverMiddleName\", driverMiddleName);\r\n-      formData.append(\"driverLastName\", driverLastName);\r\n-      formData.append(\"driverSuffix\", driverSuffix);\r\n-      formData.append(\"driverBirthdate\", driverBirthdate);\r\n-      formData.append(\"driverPhone\", driverPhone);\r\n-    }\r\n-\r\n+    formData.append(\"driverFirstName\", driverFirstName);\r\n+    formData.append(\"driverMiddleName\", driverMiddleName);\r\n+    formData.append(\"driverLastName\", driverLastName);\r\n+    formData.append(\"driverSuffix\", driverSuffix);\r\n+    formData.append(\"driverBirthdate\", driverBirthdate);\r\n+    formData.append(\"driverPhone\", driverPhone);\r\n     formData.append(\"experienceYears\", experienceYears);\r\n-    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n-    formData.append(\"votingLocation\", votingLocation);\r\n \r\n-    // Images\r\n-    \r\n-    if (!votersIDImage) {\r\n-      Alert.alert(\"Missing Voter's ID image\");\r\n-      return;\r\n-    }\r\n-    if (!selfie) {\r\n-      Alert.alert(\"Missing Voter's ID image\");\r\n-      return;\r\n-    }\r\n     formData.append(\"votersIDImage\", {\r\n       uri: votersIDImage.uri,\r\n+      name: \"voter.jpg\",\r\n       type: \"image/jpeg\",\r\n-      name: \"voter_id.jpg\",\r\n     } as any);\r\n-\r\n-    formData.append(\"selfie\", {\r\n-      uri: selfie.uri,\r\n-      type: \"image/jpeg\",\r\n-      name: \"selfie.jpg\",\r\n-    } as any);\r\n-    if (driversLicenseImage) {\r\n+    if (driversLicenseImage)\r\n       formData.append(\"driversLicenseImage\", {\r\n         uri: driversLicenseImage.uri,\r\n+        name: \"license.jpg\",\r\n         type: \"image/jpeg\",\r\n-        name: \"license.jpg\",\r\n       } as any);\r\n-    }\r\n-\r\n-    if (orcrImage) {\r\n+    if (orcrImage)\r\n       formData.append(\"orcrImage\", {\r\n         uri: orcrImage.uri,\r\n+        name: \"orcr.jpg\",\r\n         type: \"image/jpeg\",\r\n-        name: \"orcr.jpg\",\r\n       } as any);\r\n-    }\r\n+    if (selfieImage)\r\n+      formData.append(\"selfie\", {\r\n+        uri: selfieImage.uri,\r\n+        name: \"selfie.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n \r\n     try {\r\n-      const response = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n+      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n         method: \"POST\",\r\n         body: formData,\r\n         headers: {\r\n           \"Content-Type\": \"multipart/form-data\",\r\n         },\r\n       });\r\n \r\n-      const text = await response.text();\r\n-      let data;\r\n-      try {\r\n-        data = JSON.parse(text); // ✅ only parse if JSON\r\n-      } catch (e) {\r\n-        console.error(\"❌ Response not JSON:\", text);\r\n-        Alert.alert(\"Error\", \"Invalid server response. Check your backend.\");\r\n-        return;\r\n-      }\r\n-      if (response.ok) {\r\n-        Alert.alert(\"Success\", data.message);\r\n-      } else {\r\n-        Alert.alert(\"Error\", data.error || \"Registration failed\");\r\n-      }\r\n-    } catch (err) {\r\n-      console.error(\"Driver registration failed:\", err);\r\n+      const text = await res.text();\r\n+      const data = JSON.parse(text);\r\n+      if (res.ok) Alert.alert(\"Success\", data.message);\r\n+      else Alert.alert(\"Error\", data.error);\r\n+    } catch (e) {\r\n+      console.error(\"Driver registration failed:\", e);\r\n       Alert.alert(\"Error\", \"Network error or server issue\");\r\n     }\r\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n-      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\r\n-      <Text style={styles.title}>Driver Registration</Text>\r\n+      <StatusBar barStyle=\"light-content\" />\r\n \r\n-      <View style={styles.pickercontainer}>\r\n-        <Text style={styles.label}>Ikaw ba ay:</Text>\r\n-        <Picker selectedValue={role} onValueChange={setRole}>\r\n-          <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n-          <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n-          <Picker.Item label=\"Parehas (Both)\" value=\"Both\" />\r\n-        </Picker>\r\n-      </View>\r\n+      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n+      <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n+        <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n+        <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n+        <Picker.Item label=\"Both\" value=\"Both\" />\r\n+      </Picker>\r\n \r\n-\r\n-      {/* Group: Operator Name */}\r\n-      <Text style={styles.subheading}>Operator Information</Text>\r\n+      {/* Operator Info */}\r\n+      <Text style={styles.header}>Operator Info</Text>\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n-      <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n-      <TouchableOpacity style={styles.input} onPress={() => setShowOperatorDate(true)}>\r\n-        <Text style={{ color: operatorBirthdate ? \"black\" : \"#aaa\" }}>\r\n-          {operatorBirthdate || \"Select Birthdate\"}\r\n-        </Text>\r\n+      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n+        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n       </TouchableOpacity>\r\n       {showOperatorDate && (\r\n         <DateTimePicker\r\n-          value={operatorBirthdate ? new Date(operatorBirthdate) : new Date()}\r\n+          value={new Date()}\r\n           mode=\"date\"\r\n           display=\"default\"\r\n-          onChange={(e, d) => handleDateChange(d!, setOperatorBirthdate, setShowOperatorDate)}\r\n-          maximumDate={new Date()}\r\n+          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n         />\r\n       )}\r\n-\r\n       <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-      <TextInput style={styles.input} placeholder=\"Address\" value={operatorAddress} onChangeText={setOperatorAddress} />\r\n-      <TextInput style={styles.input} placeholder=\"Voter's ID\" value={operatorVotersID} onChangeText={setOperatorVotersID} />\r\n \r\n-      {/* Group: Driver if different */}\r\n-      {!isSamePerson && (\r\n+      {/* Driver Info */}\r\n+      {(role !== \"Operator\") && (\r\n         <>\r\n-          <Text style={styles.subheading}>Driver Information</Text>\r\n+          <Text style={styles.header}>Driver Info</Text>\r\n           <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n           <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n           <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n-          <TextInput style={styles.input} placeholder=\"Suffix (if any)\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n-          <TouchableOpacity style={styles.input} onPress={() => setShowDriverDate(true)}>\r\n-            <Text style={{ color: driverBirthdate ? \"black\" : \"#aaa\" }}>\r\n-              {driverBirthdate || \"Select Birthdate\"}\r\n-            </Text>\r\n+          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n+            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n           </TouchableOpacity>\r\n           {showDriverDate && (\r\n             <DateTimePicker\r\n-              value={driverBirthdate ? new Date(driverBirthdate) : new Date()}\r\n+              value={new Date()}\r\n               mode=\"date\"\r\n               display=\"default\"\r\n-              onChange={(e, d) => handleDateChange(d!, setDriverBirthdate, setShowDriverDate)}\r\n-              maximumDate={new Date()}\r\n+              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n             />\r\n           )}\r\n           <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n-          <TextInput style={styles.input} placeholder=\"Address\" value={driverAddress} onChangeText={setDriverAddress} />\r\n-          <TextInput style={styles.input} placeholder=\"Voter's ID\" value={driverVotersID} onChangeText={setDriverVotersID} />\r\n         </>\r\n       )}\r\n+      {(role !== \"Operator\") && (\r\n+        <View style={styles.pickerBox}>\r\n+          <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n+            <Picker.Item label=\"Experience\" value=\"\" />\r\n+            <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n+            <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n+            <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n+            <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n+          </Picker>\r\n+        </View>\r\n+      )}\r\n \r\n-      {/* Group: Voting */}\r\n-      <View style={styles.pickercontainer}>\r\n-        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} mode=\"dropdown\">\r\n-          <Picker.Item label=\"Select Experience\" value=\"\" />\r\n-          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n-          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n-          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n-          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <View style={styles.pickercontainer}>\r\n-        <Picker\r\n-          selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} mode=\"dropdown\">\r\n-          <Picker.Item label=\"Select Lucena Voter Status\" value=\"\" />\r\n-          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n-          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <TextInput style={styles.input} placeholder=\"Lugar ng Boto (if Hindi)\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-      \r\n-      {/* Group: Shared */}\r\n+      {/* Registration Info */}\r\n+      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <View style={styles.pickercontainer}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector} mode=\"dropdown\">\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector}>\r\n           <Picker.Item label=\"East\" value=\"East\" />\r\n           <Picker.Item label=\"West\" value=\"West\" />\r\n           <Picker.Item label=\"North\" value=\"North\" />\r\n           <Picker.Item label=\"South\" value=\"South\" />\r\n           <Picker.Item label=\"Other\" value=\"Other\" />\r\n         </Picker>\r\n       </View>\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n+          <Picker.Item label=\"Lucena Voter?\" value=\"\" />\r\n+          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n+          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <TextInput style={styles.input} placeholder=\"Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n-      \r\n-      {/* Upload Buttons with indicator */}\r\n-      <TouchableOpacity\r\n-        style={[styles.button, votersIDImage && styles.uploaded]}\r\n-        onPress={() => pickImage(setVotersIDImage)}\r\n-      >\r\n-        <Text style={styles.buttonText}>Upload Voter’s ID</Text>\r\n-      </TouchableOpacity>\r\n+      {/* Account Info */}\r\n+      <Text style={styles.header}>Account</Text>\r\n+      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n+      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n \r\n-      <TouchableOpacity\r\n-        style={[styles.button, driversLicenseImage && styles.uploaded]}\r\n-        onPress={() => pickImage(setDriversLicenseImage)}\r\n-      >\r\n-        <Text style={styles.buttonText}>Upload Driver’s License</Text>\r\n+      {/* Uploads */}\r\n+      <Text style={styles.header}>Uploads</Text>\r\n+      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n+        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n       </TouchableOpacity>\r\n-\r\n-      <TouchableOpacity\r\n-        style={[styles.button, orcrImage && styles.uploaded]}\r\n-        onPress={() => pickImage(setOrcrImage)}\r\n-      >\r\n+      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n+        <Text style={styles.buttonText}>Upload License</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n         <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n       </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n+        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n+      </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n-        <Text style={styles.buttonText}>Register</Text>\r\n+        <Text style={styles.buttonText}>Submit</Text>\r\n       </TouchableOpacity>\r\n     </ScrollView>\r\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: { alignItems: \"center\", padding: 20, paddingTop: 50 },\r\n-  title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15 },\r\n-  label: { fontWeight: \"bold\", marginBottom: 5 },\r\n-  subheading: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n-  optionGroup: { flexDirection: \"row\", marginBottom: 15 },\r\n-  option: { padding: 10, borderWidth: 1, borderRadius: 8, marginHorizontal: 5 },\r\n-  selected: { backgroundColor: \"#cce7ff\", borderColor: \"#1e90ff\" },\r\n-  pickercontainer: {\r\n-    width: \"100%\",\r\n+  container: { padding: 20 },\r\n+  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n+  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n+  input: {\r\n+    backgroundColor: \"#fff\",\r\n     borderWidth: 1,\r\n-    borderColor: \"black\",\r\n+    borderColor: \"#ccc\",\r\n+    padding: 12,\r\n+    marginBottom: 10,\r\n     borderRadius: 10,\r\n+  },\r\n+  picker: {\r\n+    borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n     marginBottom: 10,\r\n-    justifyContent: 'center',\r\n   },\r\n-  \r\n-  input: {\r\n-    width: \"100%\", padding: 12, borderWidth: 1, borderRadius: 10,\r\n-    marginBottom: 10, backgroundColor: \"#fff\",\r\n+  pickerBox: {\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n-    backgroundColor: \"#aaa\", padding: 12, borderRadius: 10,\r\n-    width: \"100%\", marginVertical: 5,\r\n+    backgroundColor: \"#aaa\",\r\n+    padding: 12,\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    alignItems: \"center\",\r\n   },\r\n   uploaded: {\r\n     backgroundColor: \"#4caf50\",\r\n   },\r\n+  buttonText: {\r\n+    color: \"#fff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n   submitButton: {\r\n-    backgroundColor: \"#1e90ff\", padding: 15, borderRadius: 10, width: \"100%\", marginTop: 15,\r\n+    backgroundColor: \"#1e90ff\",\r\n+    padding: 15,\r\n+    borderRadius: 10,\r\n+    alignItems: \"center\",\r\n+    marginTop: 20,\r\n   },\r\n-  buttonText: { color: \"#fff\", textAlign: \"center\", fontWeight: \"bold\" },\r\n });\r\n"
                },
                {
                    "date": 1745518857727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n \r\n export default function DriverRegister() {\r\n   const [role, setRole] = useState(\"Driver\"); // \"Driver\", \"Operator\", \"Both\"\r\n   const isBoth = role === \"Both\";\r\n+  \r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n"
                },
                {
                    "date": 1745519475363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-// app/login_and_reg/dregister.tsx\r\n-\r\n import React, { useState } from \"react\";\r\n import {\r\n   View,\r\n   Text,\r\n@@ -19,9 +17,9 @@\n import { Picker } from \"@react-native-picker/picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Driver\"); // \"Driver\", \"Operator\", \"Both\"\r\n+  const [role, setRole] = useState(\"Driver\");\r\n   const isBoth = role === \"Both\";\r\n   \r\n \r\n   // Shared\r\n"
                },
                {
                    "date": 1745544038893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,316 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TextInput,\r\n+  TouchableOpacity,\r\n+  ScrollView,\r\n+  StyleSheet,\r\n+  Alert,\r\n+  StatusBar,\r\n+  Platform,\r\n+  Image,\r\n+} from \"react-native\";\r\n+import * as ImagePicker from \"expo-image-picker\";\r\n+import { ImagePickerAsset } from \"expo-image-picker\";\r\n+import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n+import { Picker } from \"@react-native-picker/picker\";\r\n+import API_BASE_URL from \"../../config\";\r\n+\r\n+export default function DriverRegister() {\r\n+  const [role, setRole] = useState(\"Driver\");\r\n+  const isBoth = role === \"Both\";\r\n+  \r\n+\r\n+  // Shared\r\n+  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n+  const [todaName, setTodaName] = useState(\"\");\r\n+  const [sector, setSector] = useState(\"East\");\r\n+  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n+  const [votingLocation, setVotingLocation] = useState(\"\");\r\n+\r\n+  // Operator info\r\n+  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n+  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n+  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n+  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n+  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n+  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n+  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n+\r\n+  // Driver info\r\n+  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n+  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n+  const [driverLastName, setDriverLastName] = useState(\"\");\r\n+  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n+  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n+  const [showDriverDate, setShowDriverDate] = useState(false);\r\n+  const [driverPhone, setDriverPhone] = useState(\"\");\r\n+  const [experienceYears, setExperienceYears] = useState(\"\");\r\n+\r\n+  // Account\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+\r\n+  // Images\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n+\r\n+  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n+    const result = await ImagePicker.launchImageLibraryAsync({\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      allowsEditing: true,\r\n+      quality: 1,\r\n+    });\r\n+    if (!result.canceled && result.assets?.length > 0) {\r\n+      setFunc(result.assets[0]);\r\n+    }\r\n+  };\r\n+\r\n+  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n+    setShow(false);\r\n+    const formatted = date.toISOString().split(\"T\")[0];\r\n+    setFunc(formatted);\r\n+  };\r\n+\r\n+  const handleSubmit = async () => {\r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n+      return;\r\n+    }\r\n+    if (password !== confirmPassword) {\r\n+      Alert.alert(\"Error\", \"Passwords do not match\");\r\n+      return;\r\n+    }\r\n+\r\n+    const formData = new FormData();\r\n+    formData.append(\"role\", role);\r\n+    formData.append(\"franchiseNumber\", franchiseNumber);\r\n+    formData.append(\"todaName\", todaName);\r\n+    formData.append(\"sector\", sector);\r\n+    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n+    formData.append(\"votingLocation\", votingLocation);\r\n+    formData.append(\"email\", email);\r\n+    formData.append(\"password\", password);\r\n+\r\n+    formData.append(\"operatorFirstName\", operatorFirstName);\r\n+    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+    formData.append(\"operatorLastName\", operatorLastName);\r\n+    formData.append(\"operatorSuffix\", operatorSuffix);\r\n+    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n+    formData.append(\"operatorPhone\", operatorPhone);\r\n+\r\n+    formData.append(\"driverFirstName\", driverFirstName);\r\n+    formData.append(\"driverMiddleName\", driverMiddleName);\r\n+    formData.append(\"driverLastName\", driverLastName);\r\n+    formData.append(\"driverSuffix\", driverSuffix);\r\n+    formData.append(\"driverBirthdate\", driverBirthdate);\r\n+    formData.append(\"driverPhone\", driverPhone);\r\n+    formData.append(\"experienceYears\", experienceYears);\r\n+\r\n+    formData.append(\"votersIDImage\", {\r\n+      uri: votersIDImage.uri,\r\n+      name: \"voter.jpg\",\r\n+      type: \"image/jpeg\",\r\n+    } as any);\r\n+    if (driversLicenseImage)\r\n+      formData.append(\"driversLicenseImage\", {\r\n+        uri: driversLicenseImage.uri,\r\n+        name: \"license.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (orcrImage)\r\n+      formData.append(\"orcrImage\", {\r\n+        uri: orcrImage.uri,\r\n+        name: \"orcr.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (selfieImage)\r\n+      formData.append(\"selfie\", {\r\n+        uri: selfieImage.uri,\r\n+        name: \"selfie.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+\r\n+    try {\r\n+      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n+        method: \"POST\",\r\n+        body: formData,\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+        },\r\n+      });\r\n+\r\n+      const text = await res.text();\r\n+      const data = JSON.parse(text);\r\n+      if (res.ok) Alert.alert(\"Success\", data.message);\r\n+      else Alert.alert(\"Error\", data.error);\r\n+    } catch (e) {\r\n+      console.error(\"Driver registration failed:\", e);\r\n+      Alert.alert(\"Error\", \"Network error or server issue\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <ScrollView contentContainerStyle={styles.container}>\r\n+      <StatusBar barStyle=\"light-content\" />\r\n+\r\n+      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n+      <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n+        <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n+        <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n+        <Picker.Item label=\"Both\" value=\"Both\" />\r\n+      </Picker>\r\n+\r\n+      {/* Operator Info */}\r\n+      <Text style={styles.header}>Operator Info</Text>\r\n+      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n+      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n+      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n+      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n+        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+      </TouchableOpacity>\r\n+      {showOperatorDate && (\r\n+        <DateTimePicker\r\n+          value={new Date()}\r\n+          mode=\"date\"\r\n+          display=\"default\"\r\n+          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n+        />\r\n+      )}\r\n+      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+\r\n+      {/* Driver Info */}\r\n+      {(role !== \"Operator\") && (\r\n+        <>\r\n+          <Text style={styles.header}>Driver Info</Text>\r\n+          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n+          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n+          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n+          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n+            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n+          </TouchableOpacity>\r\n+          {showDriverDate && (\r\n+            <DateTimePicker\r\n+              value={new Date()}\r\n+              mode=\"date\"\r\n+              display=\"default\"\r\n+              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n+            />\r\n+          )}\r\n+          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n+        </>\r\n+      )}\r\n+      {(role !== \"Operator\") && (\r\n+        <View style={styles.pickerBox}>\r\n+          <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n+            <Picker.Item label=\"Experience\" value=\"\" />\r\n+            <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n+            <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n+            <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n+            <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n+          </Picker>\r\n+        </View>\r\n+      )}\r\n+\r\n+      {/* Registration Info */}\r\n+      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n+      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector}>\r\n+          <Picker.Item label=\"East\" value=\"East\" />\r\n+          <Picker.Item label=\"West\" value=\"West\" />\r\n+          <Picker.Item label=\"North\" value=\"North\" />\r\n+          <Picker.Item label=\"South\" value=\"South\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n+          <Picker.Item label=\"Lucena Voter?\" value=\"\" />\r\n+          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n+          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <TextInput style={styles.input} placeholder=\"Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+\r\n+      {/* Account Info */}\r\n+      <Text style={styles.header}>Account</Text>\r\n+      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n+      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n+\r\n+      {/* Uploads */}\r\n+      <Text style={styles.header}>Uploads</Text>\r\n+      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n+        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n+        <Text style={styles.buttonText}>Upload License</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n+        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n+        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n+      </TouchableOpacity>\r\n+\r\n+      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n+        <Text style={styles.buttonText}>Submit</Text>\r\n+      </TouchableOpacity>\r\n+    </ScrollView>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { padding: 20 },\r\n+  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n+  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n+  input: {\r\n+    backgroundColor: \"#fff\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    padding: 12,\r\n+    marginBottom: 10,\r\n+    borderRadius: 10,\r\n+  },\r\n+  picker: {\r\n+    borderWidth: 1,\r\n+    backgroundColor: \"#fff\",\r\n+    marginBottom: 10,\r\n+  },\r\n+  pickerBox: {\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    backgroundColor: \"#fff\",\r\n+  },\r\n+  button: {\r\n+    backgroundColor: \"#aaa\",\r\n+    padding: 12,\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    alignItems: \"center\",\r\n+  },\r\n+  uploaded: {\r\n+    backgroundColor: \"#4caf50\",\r\n+  },\r\n+  buttonText: {\r\n+    color: \"#fff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  submitButton: {\r\n+    backgroundColor: \"#1e90ff\",\r\n+    padding: 15,\r\n+    borderRadius: 10,\r\n+    alignItems: \"center\",\r\n+    marginTop: 20,\r\n+  },\r\n+});\r\n"
                },
                {
                    "date": 1745643595949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,324 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TextInput,\r\n+  TouchableOpacity,\r\n+  ScrollView,\r\n+  StyleSheet,\r\n+  Alert,\r\n+  StatusBar,\r\n+  Platform,\r\n+  Image,\r\n+} from \"react-native\";\r\n+import * as ImagePicker from \"expo-image-picker\";\r\n+import { ImagePickerAsset } from \"expo-image-picker\";\r\n+import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n+import { Picker } from \"@react-native-picker/picker\";\r\n+import API_BASE_URL from \"../../config\";\r\n+\r\n+export default function DriverRegister() {\r\n+  const [role, setRole] = useState(\"Driver\");\r\n+  const isBoth = role === \"Both\";\r\n+  \r\n+\r\n+  // Shared\r\n+  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n+  const [todaName, setTodaName] = useState(\"\");\r\n+  const [sector, setSector] = useState(\"East\");\r\n+  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n+  const [votingLocation, setVotingLocation] = useState(\"\");\r\n+\r\n+  // Operator info\r\n+  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n+  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n+  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n+  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n+  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n+  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n+  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n+\r\n+  // Driver info\r\n+  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n+  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n+  const [driverLastName, setDriverLastName] = useState(\"\");\r\n+  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n+  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n+  const [showDriverDate, setShowDriverDate] = useState(false);\r\n+  const [driverPhone, setDriverPhone] = useState(\"\");\r\n+  const [experienceYears, setExperienceYears] = useState(\"\");\r\n+\r\n+  // Account\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+\r\n+  // Images\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n+\r\n+  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n+    const result = await ImagePicker.launchImageLibraryAsync({\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      allowsEditing: true,\r\n+      quality: 1,\r\n+    });\r\n+    if (!result.canceled && result.assets?.length > 0) {\r\n+      setFunc(result.assets[0]);\r\n+    }\r\n+  };\r\n+\r\n+  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n+    setShow(false);\r\n+    const formatted = date.toISOString().split(\"T\")[0];\r\n+    setFunc(formatted);\r\n+  };\r\n+\r\n+  const handleSubmit = async () => {\r\n+    if (role === \"Both\") {\r\n+      setDriverFirstName(operatorFirstName);\r\n+      setDriverMiddleName(operatorMiddleName);\r\n+      setDriverLastName(operatorLastName);\r\n+      setDriverSuffix(operatorSuffix);\r\n+      setDriverBirthdate(operatorBirthdate);\r\n+      setDriverPhone(operatorPhone);\r\n+    }\r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n+      return;\r\n+    }\r\n+    if (password !== confirmPassword) {\r\n+      Alert.alert(\"Error\", \"Passwords do not match\");\r\n+      return;\r\n+    }\r\n+\r\n+    const formData = new FormData();\r\n+    formData.append(\"role\", role);\r\n+    formData.append(\"franchiseNumber\", franchiseNumber);\r\n+    formData.append(\"todaName\", todaName);\r\n+    formData.append(\"sector\", sector);\r\n+    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n+    formData.append(\"votingLocation\", votingLocation);\r\n+    formData.append(\"email\", email);\r\n+    formData.append(\"password\", password);\r\n+\r\n+    formData.append(\"operatorFirstName\", operatorFirstName);\r\n+    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+    formData.append(\"operatorLastName\", operatorLastName);\r\n+    formData.append(\"operatorSuffix\", operatorSuffix);\r\n+    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n+    formData.append(\"operatorPhone\", operatorPhone);\r\n+\r\n+    formData.append(\"driverFirstName\", driverFirstName);\r\n+    formData.append(\"driverMiddleName\", driverMiddleName);\r\n+    formData.append(\"driverLastName\", driverLastName);\r\n+    formData.append(\"driverSuffix\", driverSuffix);\r\n+    formData.append(\"driverBirthdate\", driverBirthdate);\r\n+    formData.append(\"driverPhone\", driverPhone);\r\n+    formData.append(\"experienceYears\", experienceYears);\r\n+\r\n+    formData.append(\"votersIDImage\", {\r\n+      uri: votersIDImage.uri,\r\n+      name: \"voter.jpg\",\r\n+      type: \"image/jpeg\",\r\n+    } as any);\r\n+    if (driversLicenseImage)\r\n+      formData.append(\"driversLicenseImage\", {\r\n+        uri: driversLicenseImage.uri,\r\n+        name: \"license.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (orcrImage)\r\n+      formData.append(\"orcrImage\", {\r\n+        uri: orcrImage.uri,\r\n+        name: \"orcr.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (selfieImage)\r\n+      formData.append(\"selfie\", {\r\n+        uri: selfieImage.uri,\r\n+        name: \"selfie.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+\r\n+    try {\r\n+      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n+        method: \"POST\",\r\n+        body: formData,\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+        },\r\n+      });\r\n+\r\n+      const text = await res.text();\r\n+      const data = JSON.parse(text);\r\n+      if (res.ok) Alert.alert(\"Success\", data.message);\r\n+      else Alert.alert(\"Error\", data.error);\r\n+    } catch (e) {\r\n+      console.error(\"Driver registration failed:\", e);\r\n+      Alert.alert(\"Error\", \"Network error or server issue\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <ScrollView contentContainerStyle={styles.container}>\r\n+      <StatusBar barStyle=\"light-content\" />\r\n+\r\n+      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n+      <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n+        <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n+        <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n+        <Picker.Item label=\"Both\" value=\"Both\" />\r\n+      </Picker>\r\n+\r\n+      {/* Operator Info */}\r\n+      <Text style={styles.header}>Operator Info</Text>\r\n+      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n+      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n+      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n+      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n+        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+      </TouchableOpacity>\r\n+      {showOperatorDate && (\r\n+        <DateTimePicker\r\n+          value={new Date()}\r\n+          mode=\"date\"\r\n+          display=\"default\"\r\n+          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n+        />\r\n+      )}\r\n+      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+\r\n+      {/* Driver Info */}\r\n+      {(role !== \"Operator\") && (\r\n+        <>\r\n+          <Text style={styles.header}>Driver Info</Text>\r\n+          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n+          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n+          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n+          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n+            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n+          </TouchableOpacity>\r\n+          {showDriverDate && (\r\n+            <DateTimePicker\r\n+              value={new Date()}\r\n+              mode=\"date\"\r\n+              display=\"default\"\r\n+              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n+            />\r\n+          )}\r\n+          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n+        </>\r\n+      )}\r\n+      {(role !== \"Operator\") && (\r\n+        <View style={styles.pickerBox}>\r\n+          <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n+            <Picker.Item label=\"Experience\" value=\"\" />\r\n+            <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n+            <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n+            <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n+            <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n+          </Picker>\r\n+        </View>\r\n+      )}\r\n+\r\n+      {/* Registration Info */}\r\n+      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n+      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector}>\r\n+          <Picker.Item label=\"East\" value=\"East\" />\r\n+          <Picker.Item label=\"West\" value=\"West\" />\r\n+          <Picker.Item label=\"North\" value=\"North\" />\r\n+          <Picker.Item label=\"South\" value=\"South\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n+          <Picker.Item label=\"Lucena Voter?\" value=\"\" />\r\n+          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n+          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <TextInput style={styles.input} placeholder=\"Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+\r\n+      {/* Account Info */}\r\n+      <Text style={styles.header}>Account</Text>\r\n+      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n+      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n+\r\n+      {/* Uploads */}\r\n+      <Text style={styles.header}>Uploads</Text>\r\n+      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n+        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n+        <Text style={styles.buttonText}>Upload License</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n+        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n+        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n+      </TouchableOpacity>\r\n+\r\n+      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n+        <Text style={styles.buttonText}>Submit</Text>\r\n+      </TouchableOpacity>\r\n+    </ScrollView>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { padding: 20 },\r\n+  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n+  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n+  input: {\r\n+    backgroundColor: \"#fff\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    padding: 12,\r\n+    marginBottom: 10,\r\n+    borderRadius: 10,\r\n+  },\r\n+  picker: {\r\n+    borderWidth: 1,\r\n+    backgroundColor: \"#fff\",\r\n+    marginBottom: 10,\r\n+  },\r\n+  pickerBox: {\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    backgroundColor: \"#fff\",\r\n+  },\r\n+  button: {\r\n+    backgroundColor: \"#aaa\",\r\n+    padding: 12,\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    alignItems: \"center\",\r\n+  },\r\n+  uploaded: {\r\n+    backgroundColor: \"#4caf50\",\r\n+  },\r\n+  buttonText: {\r\n+    color: \"#fff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  submitButton: {\r\n+    backgroundColor: \"#1e90ff\",\r\n+    padding: 15,\r\n+    borderRadius: 10,\r\n+    alignItems: \"center\",\r\n+    marginTop: 20,\r\n+  },\r\n+});\r\n"
                },
                {
                    "date": 1745643682732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n       )}\r\n       <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n \r\n       {/* Driver Info */}\r\n-      {(role !== \"Operator\") && (\r\n+      {role == 'Driver' && (\r\n         <>\r\n           <Text style={styles.header}>Driver Info</Text>\r\n           <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n           <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n@@ -213,9 +213,9 @@\n           )}\r\n           <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n         </>\r\n       )}\r\n-      {(role !== \"Operator\") && (\r\n+      {(role === \"Operator\" || role === \"Both\") && (\r\n         <View style={styles.pickerBox}>\r\n           <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n             <Picker.Item label=\"Experience\" value=\"\" />\r\n             <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n@@ -321,636 +321,4 @@\n     alignItems: \"center\",\r\n     marginTop: 20,\r\n   },\r\n });\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  TextInput,\r\n-  TouchableOpacity,\r\n-  ScrollView,\r\n-  StyleSheet,\r\n-  Alert,\r\n-  StatusBar,\r\n-  Platform,\r\n-  Image,\r\n-} from \"react-native\";\r\n-import * as ImagePicker from \"expo-image-picker\";\r\n-import { ImagePickerAsset } from \"expo-image-picker\";\r\n-import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n-import { Picker } from \"@react-native-picker/picker\";\r\n-import API_BASE_URL from \"../../config\";\r\n-\r\n-export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Driver\");\r\n-  const isBoth = role === \"Both\";\r\n-  \r\n-\r\n-  // Shared\r\n-  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n-  const [todaName, setTodaName] = useState(\"\");\r\n-  const [sector, setSector] = useState(\"East\");\r\n-  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n-  const [votingLocation, setVotingLocation] = useState(\"\");\r\n-\r\n-  // Operator info\r\n-  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n-  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n-  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n-  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n-  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n-  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n-  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n-\r\n-  // Driver info\r\n-  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n-  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n-  const [driverLastName, setDriverLastName] = useState(\"\");\r\n-  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n-  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n-  const [showDriverDate, setShowDriverDate] = useState(false);\r\n-  const [driverPhone, setDriverPhone] = useState(\"\");\r\n-  const [experienceYears, setExperienceYears] = useState(\"\");\r\n-\r\n-  // Account\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-\r\n-  // Images\r\n-  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n-\r\n-  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n-    const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-      allowsEditing: true,\r\n-      quality: 1,\r\n-    });\r\n-    if (!result.canceled && result.assets?.length > 0) {\r\n-      setFunc(result.assets[0]);\r\n-    }\r\n-  };\r\n-\r\n-  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n-    setShow(false);\r\n-    const formatted = date.toISOString().split(\"T\")[0];\r\n-    setFunc(formatted);\r\n-  };\r\n-\r\n-  const handleSubmit = async () => {\r\n-    if (!votersIDImage) {\r\n-      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n-      return;\r\n-    }\r\n-    if (password !== confirmPassword) {\r\n-      Alert.alert(\"Error\", \"Passwords do not match\");\r\n-      return;\r\n-    }\r\n-\r\n-    const formData = new FormData();\r\n-    formData.append(\"role\", role);\r\n-    formData.append(\"franchiseNumber\", franchiseNumber);\r\n-    formData.append(\"todaName\", todaName);\r\n-    formData.append(\"sector\", sector);\r\n-    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n-    formData.append(\"votingLocation\", votingLocation);\r\n-    formData.append(\"email\", email);\r\n-    formData.append(\"password\", password);\r\n-\r\n-    formData.append(\"operatorFirstName\", operatorFirstName);\r\n-    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n-    formData.append(\"operatorLastName\", operatorLastName);\r\n-    formData.append(\"operatorSuffix\", operatorSuffix);\r\n-    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n-    formData.append(\"operatorPhone\", operatorPhone);\r\n-\r\n-    formData.append(\"driverFirstName\", driverFirstName);\r\n-    formData.append(\"driverMiddleName\", driverMiddleName);\r\n-    formData.append(\"driverLastName\", driverLastName);\r\n-    formData.append(\"driverSuffix\", driverSuffix);\r\n-    formData.append(\"driverBirthdate\", driverBirthdate);\r\n-    formData.append(\"driverPhone\", driverPhone);\r\n-    formData.append(\"experienceYears\", experienceYears);\r\n-\r\n-    formData.append(\"votersIDImage\", {\r\n-      uri: votersIDImage.uri,\r\n-      name: \"voter.jpg\",\r\n-      type: \"image/jpeg\",\r\n-    } as any);\r\n-    if (driversLicenseImage)\r\n-      formData.append(\"driversLicenseImage\", {\r\n-        uri: driversLicenseImage.uri,\r\n-        name: \"license.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (orcrImage)\r\n-      formData.append(\"orcrImage\", {\r\n-        uri: orcrImage.uri,\r\n-        name: \"orcr.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (selfieImage)\r\n-      formData.append(\"selfie\", {\r\n-        uri: selfieImage.uri,\r\n-        name: \"selfie.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-\r\n-    try {\r\n-      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n-        method: \"POST\",\r\n-        body: formData,\r\n-        headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n-        },\r\n-      });\r\n-\r\n-      const text = await res.text();\r\n-      const data = JSON.parse(text);\r\n-      if (res.ok) Alert.alert(\"Success\", data.message);\r\n-      else Alert.alert(\"Error\", data.error);\r\n-    } catch (e) {\r\n-      console.error(\"Driver registration failed:\", e);\r\n-      Alert.alert(\"Error\", \"Network error or server issue\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <ScrollView contentContainerStyle={styles.container}>\r\n-      <StatusBar barStyle=\"light-content\" />\r\n-\r\n-      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n-      <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n-        <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n-        <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n-        <Picker.Item label=\"Both\" value=\"Both\" />\r\n-      </Picker>\r\n-\r\n-      {/* Operator Info */}\r\n-      <Text style={styles.header}>Operator Info</Text>\r\n-      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n-      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n-      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n-      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n-      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n-      </TouchableOpacity>\r\n-      {showOperatorDate && (\r\n-        <DateTimePicker\r\n-          value={new Date()}\r\n-          mode=\"date\"\r\n-          display=\"default\"\r\n-          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n-        />\r\n-      )}\r\n-      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-\r\n-      {/* Driver Info */}\r\n-      {(role !== \"Operator\") && (\r\n-        <>\r\n-          <Text style={styles.header}>Driver Info</Text>\r\n-          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n-          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n-          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n-          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n-          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n-          </TouchableOpacity>\r\n-          {showDriverDate && (\r\n-            <DateTimePicker\r\n-              value={new Date()}\r\n-              mode=\"date\"\r\n-              display=\"default\"\r\n-              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n-            />\r\n-          )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n-        </>\r\n-      )}\r\n-      {(role !== \"Operator\") && (\r\n-        <View style={styles.pickerBox}>\r\n-          <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n-            <Picker.Item label=\"Experience\" value=\"\" />\r\n-            <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n-            <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n-            <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n-            <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n-          </Picker>\r\n-        </View>\r\n-      )}\r\n-\r\n-      {/* Registration Info */}\r\n-      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n-      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector}>\r\n-          <Picker.Item label=\"East\" value=\"East\" />\r\n-          <Picker.Item label=\"West\" value=\"West\" />\r\n-          <Picker.Item label=\"North\" value=\"North\" />\r\n-          <Picker.Item label=\"South\" value=\"South\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n-          <Picker.Item label=\"Lucena Voter?\" value=\"\" />\r\n-          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n-          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <TextInput style={styles.input} placeholder=\"Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-\r\n-      {/* Account Info */}\r\n-      <Text style={styles.header}>Account</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n-      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n-      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n-\r\n-      {/* Uploads */}\r\n-      <Text style={styles.header}>Uploads</Text>\r\n-      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n-        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n-        <Text style={styles.buttonText}>Upload License</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n-        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n-        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n-      </TouchableOpacity>\r\n-\r\n-      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n-        <Text style={styles.buttonText}>Submit</Text>\r\n-      </TouchableOpacity>\r\n-    </ScrollView>\r\n-  );\r\n-}\r\n-\r\n-const styles = StyleSheet.create({\r\n-  container: { padding: 20 },\r\n-  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n-  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n-  input: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    padding: 12,\r\n-    marginBottom: 10,\r\n-    borderRadius: 10,\r\n-  },\r\n-  picker: {\r\n-    borderWidth: 1,\r\n-    backgroundColor: \"#fff\",\r\n-    marginBottom: 10,\r\n-  },\r\n-  pickerBox: {\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    borderRadius: 10,\r\n-    marginBottom: 10,\r\n-    backgroundColor: \"#fff\",\r\n-  },\r\n-  button: {\r\n-    backgroundColor: \"#aaa\",\r\n-    padding: 12,\r\n-    borderRadius: 10,\r\n-    marginBottom: 10,\r\n-    alignItems: \"center\",\r\n-  },\r\n-  uploaded: {\r\n-    backgroundColor: \"#4caf50\",\r\n-  },\r\n-  buttonText: {\r\n-    color: \"#fff\",\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  submitButton: {\r\n-    backgroundColor: \"#1e90ff\",\r\n-    padding: 15,\r\n-    borderRadius: 10,\r\n-    alignItems: \"center\",\r\n-    marginTop: 20,\r\n-  },\r\n-});\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  TextInput,\r\n-  TouchableOpacity,\r\n-  ScrollView,\r\n-  StyleSheet,\r\n-  Alert,\r\n-  StatusBar,\r\n-  Platform,\r\n-  Image,\r\n-} from \"react-native\";\r\n-import * as ImagePicker from \"expo-image-picker\";\r\n-import { ImagePickerAsset } from \"expo-image-picker\";\r\n-import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n-import { Picker } from \"@react-native-picker/picker\";\r\n-import API_BASE_URL from \"../../config\";\r\n-\r\n-export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Driver\");\r\n-  const isBoth = role === \"Both\";\r\n-  \r\n-\r\n-  // Shared\r\n-  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n-  const [todaName, setTodaName] = useState(\"\");\r\n-  const [sector, setSector] = useState(\"East\");\r\n-  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n-  const [votingLocation, setVotingLocation] = useState(\"\");\r\n-\r\n-  // Operator info\r\n-  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n-  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n-  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n-  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n-  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n-  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n-  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n-\r\n-  // Driver info\r\n-  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n-  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n-  const [driverLastName, setDriverLastName] = useState(\"\");\r\n-  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n-  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n-  const [showDriverDate, setShowDriverDate] = useState(false);\r\n-  const [driverPhone, setDriverPhone] = useState(\"\");\r\n-  const [experienceYears, setExperienceYears] = useState(\"\");\r\n-\r\n-  // Account\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-\r\n-  // Images\r\n-  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n-\r\n-  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n-    const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-      allowsEditing: true,\r\n-      quality: 1,\r\n-    });\r\n-    if (!result.canceled && result.assets?.length > 0) {\r\n-      setFunc(result.assets[0]);\r\n-    }\r\n-  };\r\n-\r\n-  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n-    setShow(false);\r\n-    const formatted = date.toISOString().split(\"T\")[0];\r\n-    setFunc(formatted);\r\n-  };\r\n-\r\n-  const handleSubmit = async () => {\r\n-    if (!votersIDImage) {\r\n-      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n-      return;\r\n-    }\r\n-    if (password !== confirmPassword) {\r\n-      Alert.alert(\"Error\", \"Passwords do not match\");\r\n-      return;\r\n-    }\r\n-\r\n-    const formData = new FormData();\r\n-    formData.append(\"role\", role);\r\n-    formData.append(\"franchiseNumber\", franchiseNumber);\r\n-    formData.append(\"todaName\", todaName);\r\n-    formData.append(\"sector\", sector);\r\n-    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n-    formData.append(\"votingLocation\", votingLocation);\r\n-    formData.append(\"email\", email);\r\n-    formData.append(\"password\", password);\r\n-\r\n-    formData.append(\"operatorFirstName\", operatorFirstName);\r\n-    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n-    formData.append(\"operatorLastName\", operatorLastName);\r\n-    formData.append(\"operatorSuffix\", operatorSuffix);\r\n-    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n-    formData.append(\"operatorPhone\", operatorPhone);\r\n-\r\n-    formData.append(\"driverFirstName\", driverFirstName);\r\n-    formData.append(\"driverMiddleName\", driverMiddleName);\r\n-    formData.append(\"driverLastName\", driverLastName);\r\n-    formData.append(\"driverSuffix\", driverSuffix);\r\n-    formData.append(\"driverBirthdate\", driverBirthdate);\r\n-    formData.append(\"driverPhone\", driverPhone);\r\n-    formData.append(\"experienceYears\", experienceYears);\r\n-\r\n-    formData.append(\"votersIDImage\", {\r\n-      uri: votersIDImage.uri,\r\n-      name: \"voter.jpg\",\r\n-      type: \"image/jpeg\",\r\n-    } as any);\r\n-    if (driversLicenseImage)\r\n-      formData.append(\"driversLicenseImage\", {\r\n-        uri: driversLicenseImage.uri,\r\n-        name: \"license.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (orcrImage)\r\n-      formData.append(\"orcrImage\", {\r\n-        uri: orcrImage.uri,\r\n-        name: \"orcr.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (selfieImage)\r\n-      formData.append(\"selfie\", {\r\n-        uri: selfieImage.uri,\r\n-        name: \"selfie.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-\r\n-    try {\r\n-      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n-        method: \"POST\",\r\n-        body: formData,\r\n-        headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n-        },\r\n-      });\r\n-\r\n-      const text = await res.text();\r\n-      const data = JSON.parse(text);\r\n-      if (res.ok) Alert.alert(\"Success\", data.message);\r\n-      else Alert.alert(\"Error\", data.error);\r\n-    } catch (e) {\r\n-      console.error(\"Driver registration failed:\", e);\r\n-      Alert.alert(\"Error\", \"Network error or server issue\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <ScrollView contentContainerStyle={styles.container}>\r\n-      <StatusBar barStyle=\"light-content\" />\r\n-\r\n-      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n-      <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n-        <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n-        <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n-        <Picker.Item label=\"Both\" value=\"Both\" />\r\n-      </Picker>\r\n-\r\n-      {/* Operator Info */}\r\n-      <Text style={styles.header}>Operator Info</Text>\r\n-      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n-      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n-      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n-      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n-      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n-      </TouchableOpacity>\r\n-      {showOperatorDate && (\r\n-        <DateTimePicker\r\n-          value={new Date()}\r\n-          mode=\"date\"\r\n-          display=\"default\"\r\n-          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n-        />\r\n-      )}\r\n-      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-\r\n-      {/* Driver Info */}\r\n-      {(role !== \"Operator\") && (\r\n-        <>\r\n-          <Text style={styles.header}>Driver Info</Text>\r\n-          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n-          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n-          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n-          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n-          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n-          </TouchableOpacity>\r\n-          {showDriverDate && (\r\n-            <DateTimePicker\r\n-              value={new Date()}\r\n-              mode=\"date\"\r\n-              display=\"default\"\r\n-              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n-            />\r\n-          )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n-        </>\r\n-      )}\r\n-      {(role !== \"Operator\") && (\r\n-        <View style={styles.pickerBox}>\r\n-          <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n-            <Picker.Item label=\"Experience\" value=\"\" />\r\n-            <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n-            <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n-            <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n-            <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n-          </Picker>\r\n-        </View>\r\n-      )}\r\n-\r\n-      {/* Registration Info */}\r\n-      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n-      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector}>\r\n-          <Picker.Item label=\"East\" value=\"East\" />\r\n-          <Picker.Item label=\"West\" value=\"West\" />\r\n-          <Picker.Item label=\"North\" value=\"North\" />\r\n-          <Picker.Item label=\"South\" value=\"South\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n-          <Picker.Item label=\"Lucena Voter?\" value=\"\" />\r\n-          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n-          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <TextInput style={styles.input} placeholder=\"Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-\r\n-      {/* Account Info */}\r\n-      <Text style={styles.header}>Account</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n-      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n-      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n-\r\n-      {/* Uploads */}\r\n-      <Text style={styles.header}>Uploads</Text>\r\n-      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n-        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n-        <Text style={styles.buttonText}>Upload License</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n-        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n-        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n-      </TouchableOpacity>\r\n-\r\n-      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n-        <Text style={styles.buttonText}>Submit</Text>\r\n-      </TouchableOpacity>\r\n-    </ScrollView>\r\n-  );\r\n-}\r\n-\r\n-const styles = StyleSheet.create({\r\n-  container: { padding: 20 },\r\n-  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n-  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n-  input: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    padding: 12,\r\n-    marginBottom: 10,\r\n-    borderRadius: 10,\r\n-  },\r\n-  picker: {\r\n-    borderWidth: 1,\r\n-    backgroundColor: \"#fff\",\r\n-    marginBottom: 10,\r\n-  },\r\n-  pickerBox: {\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    borderRadius: 10,\r\n-    marginBottom: 10,\r\n-    backgroundColor: \"#fff\",\r\n-  },\r\n-  button: {\r\n-    backgroundColor: \"#aaa\",\r\n-    padding: 12,\r\n-    borderRadius: 10,\r\n-    marginBottom: 10,\r\n-    alignItems: \"center\",\r\n-  },\r\n-  uploaded: {\r\n-    backgroundColor: \"#4caf50\",\r\n-  },\r\n-  buttonText: {\r\n-    color: \"#fff\",\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  submitButton: {\r\n-    backgroundColor: \"#1e90ff\",\r\n-    padding: 15,\r\n-    borderRadius: 10,\r\n-    alignItems: \"center\",\r\n-    marginTop: 20,\r\n-  },\r\n-});\r\n"
                },
                {
                    "date": 1745643764471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n       )}\r\n       <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n \r\n       {/* Driver Info */}\r\n-      {role == 'Driver' && (\r\n+      {(role === \"Operator\" || role === \"Driver\") && (\r\n         <>\r\n           <Text style={styles.header}>Driver Info</Text>\r\n           <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n           <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n"
                },
                {
                    "date": 1745643873624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,11 @@\n         <Picker.Item label=\"Both\" value=\"Both\" />\r\n       </Picker>\r\n \r\n       {/* Operator Info */}\r\n-      <Text style={styles.header}>Operator Info</Text>\r\n+      {(role === \"Operator\" || role === \"Driver\") && (\r\n+        <Text style={styles.header}>Operator Info</Text>\r\n+      )}\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n       <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n"
                },
                {
                    "date": 1745643900410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,8 +176,11 @@\n       {/* Operator Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <Text style={styles.header}>Operator Info</Text>\r\n       )}\r\n+      {(role === \"Both\") && (\r\n+        <Text style={styles.header}>Info</Text>\r\n+      )}\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n       <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n"
                },
                {
                    "date": 1745643915376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <Text style={styles.header}>Operator Info</Text>\r\n       )}\r\n       {(role === \"Both\") && (\r\n-        <Text style={styles.header}>Info</Text>\r\n+        <Text style={styles.header}>Basic Information</Text>\r\n       )}\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n"
                },
                {
                    "date": 1745643924446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n       </Picker>\r\n \r\n       {/* Operator Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <Text style={styles.header}>Operator Info</Text>\r\n+        <Text style={styles.header}>Operator Information</Text>\r\n       )}\r\n       {(role === \"Both\") && (\r\n         <Text style={styles.header}>Basic Information</Text>\r\n       )}\r\n@@ -199,9 +199,9 @@\n \r\n       {/* Driver Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <>\r\n-          <Text style={styles.header}>Driver Info</Text>\r\n+          <Text style={styles.header}>Driver Information</Text>\r\n           <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n           <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n           <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n           <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n"
                },
                {
                    "date": 1745644011184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n           )}\r\n           <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n         </>\r\n       )}\r\n-      {(role === \"Operator\" || role === \"Both\") && (\r\n+      {(role === \"Operator\" || role === \"Driver\") && (\r\n         <View style={styles.pickerBox}>\r\n           <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n             <Picker.Item label=\"Experience\" value=\"\" />\r\n             <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n"
                },
                {
                    "date": 1745644043951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,19 +218,17 @@\n           )}\r\n           <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n         </>\r\n       )}\r\n-      {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <View style={styles.pickerBox}>\r\n-          <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n-            <Picker.Item label=\"Experience\" value=\"\" />\r\n-            <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n-            <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n-            <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n-            <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n-          </Picker>\r\n-        </View>\r\n-      )}\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n+          <Picker.Item label=\"Experience\" value=\"\" />\r\n+          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n+          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n+          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n+          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n+        </Picker>\r\n+      </View>\r\n \r\n       {/* Registration Info */}\r\n       <Text style={styles.header}>Franchise & Voting Info</Text>\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n"
                },
                {
                    "date": 1745644246072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         </>\r\n       )}\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n-          <Picker.Item label=\"Experience\" value=\"\" />\r\n+          <Picker.Item label=\"Experience\" value=\"\" enabled={false} color=\"gray\" />\r\n           <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n           <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n           <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n           <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n"
                },
                {
                    "date": 1745644354394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,8 +234,9 @@\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={sector} onValueChange={setSector}>\r\n+          <Picker.Item label=\"Sector\" value=\"\" enabled={false} color=\"gray\" />\r\n           <Picker.Item label=\"East\" value=\"East\" />\r\n           <Picker.Item label=\"West\" value=\"West\" />\r\n           <Picker.Item label=\"North\" value=\"North\" />\r\n           <Picker.Item label=\"South\" value=\"South\" />\r\n"
                },
                {
                    "date": 1745644415862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,9 +244,9 @@\n         </Picker>\r\n       </View>\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n-          <Picker.Item label=\"Lucena Voter?\" value=\"\" />\r\n+          <Picker.Item label=\"Ikaw ba ay botante ng Lungsod ng Lucena\" value=\"\" enabled={false} color=\"gray\"  />\r\n           <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n           <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n         </Picker>\r\n       </View>\r\n"
                },
                {
                    "date": 1745644447500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,9 +244,9 @@\n         </Picker>\r\n       </View>\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n-          <Picker.Item label=\"Ikaw ba ay botante ng Lungsod ng Lucena\" value=\"\" enabled={false} color=\"gray\"  />\r\n+          <Picker.Item label=\"botante ng Lucena\" value=\"\" enabled={false} color=\"gray\"  />\r\n           <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n           <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n         </Picker>\r\n       </View>\r\n"
                },
                {
                    "date": 1745644453363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,9 +244,9 @@\n         </Picker>\r\n       </View>\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n-          <Picker.Item label=\"botante ng Lucena\" value=\"\" enabled={false} color=\"gray\"  />\r\n+          <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\"  />\r\n           <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n           <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n         </Picker>\r\n       </View>\r\n"
                },
                {
                    "date": 1745644472330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -249,9 +249,9 @@\n           <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n           <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n         </Picker>\r\n       </View>\r\n-      <TextInput style={styles.input} placeholder=\"Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+      <TextInput style={styles.input} placeholder=\"Kung Hindi saan Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n       {/* Account Info */}\r\n       <Text style={styles.header}>Account</Text>\r\n       <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n"
                },
                {
                    "date": 1745644789696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n           display=\"default\"\r\n           onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n         />\r\n       )}\r\n-      <TextInput style={styles.input} placeholder=\"Phone\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      <TextInput style={styles.input} placeholder=\"Cellphone Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n \r\n       {/* Driver Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <>\r\n"
                },
                {
                    "date": 1745644798819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n           display=\"default\"\r\n           onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n         />\r\n       )}\r\n-      <TextInput style={styles.input} placeholder=\"Cellphone Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      <TextInput style={styles.input} placeholder=\"Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n \r\n       {/* Driver Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <>\r\n"
                },
                {
                    "date": 1745644805742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n           display=\"default\"\r\n           onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n         />\r\n       )}\r\n-      <TextInput style={styles.input} placeholder=\"Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n \r\n       {/* Driver Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <>\r\n"
                },
                {
                    "date": 1745644859871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,15 @@\n           display=\"default\"\r\n           onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n         />\r\n       )}\r\n-      <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      {(role === \"Operator\" || role === \"Driver\") && (\r\n+        <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      )}\r\n+      {(role === \"Both\") && (\r\n+        <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      )}\r\n+      \r\n \r\n       {/* Driver Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <>\r\n"
                },
                {
                    "date": 1745644882138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n               display=\"default\"\r\n               onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n             />\r\n           )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone\" value={driverPhone} onChangeText={setDriverPhone} />\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n         </>\r\n       )}\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n"
                },
                {
                    "date": 1745644945834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n         </>\r\n       )}\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n-          <Picker.Item label=\"Experience\" value=\"\" enabled={false} color=\"gray\" />\r\n+          <Picker.Item label=\"Gaano katagal ng nag mamaneho ng tricycle?\" value=\"\" enabled={false} color=\"gray\" />\r\n           <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n           <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n           <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n           <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n"
                },
                {
                    "date": 1745644991460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -307,8 +307,9 @@\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n     borderRadius: 10,\r\n     marginBottom: 10,\r\n+    padding: 5,\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n     backgroundColor: \"#aaa\",\r\n"
                },
                {
                    "date": 1745645006881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -307,9 +307,8 @@\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n     borderRadius: 10,\r\n     marginBottom: 10,\r\n-    padding: 5,\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n     backgroundColor: \"#aaa\",\r\n"
                },
                {
                    "date": 1745645135623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n           <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n         </>\r\n       )}\r\n       <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears}>\r\n+        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} style={styles.picker}>\r\n           <Picker.Item label=\"Gaano katagal ng nag mamaneho ng tricycle?\" value=\"\" enabled={false} color=\"gray\" />\r\n           <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n           <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n           <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n@@ -239,9 +239,9 @@\n       <Text style={styles.header}>Franchise & Voting Info</Text>\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n       <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n           <Picker.Item label=\"Sector\" value=\"\" enabled={false} color=\"gray\" />\r\n           <Picker.Item label=\"East\" value=\"East\" />\r\n           <Picker.Item label=\"West\" value=\"West\" />\r\n           <Picker.Item label=\"North\" value=\"North\" />\r\n@@ -249,9 +249,9 @@\n           <Picker.Item label=\"Other\" value=\"Other\" />\r\n         </Picker>\r\n       </View>\r\n       <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter}>\r\n+        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} style={styles.picker}>\r\n           <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\"  />\r\n           <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n           <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n         </Picker>\r\n"
                },
                {
                    "date": 1745645185799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,14 +166,15 @@\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <StatusBar barStyle=\"light-content\" />\r\n \r\n       <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n-      <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n-        <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n-        <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n-        <Picker.Item label=\"Both\" value=\"Both\" />\r\n-      </Picker>\r\n-\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n+          <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n+          <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n+          <Picker.Item label=\"Both\" value=\"Both\" />\r\n+        </Picker>\r\n+      </View>\r\n       {/* Operator Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <Text style={styles.header}>Operator Information</Text>\r\n       )}\r\n"
                },
                {
                    "date": 1745645229180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,9 +301,8 @@\n   },\r\n   picker: {\r\n     borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n-    marginBottom: 10,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645239699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,8 +301,9 @@\n   },\r\n   picker: {\r\n     borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n+    borderRadius: 5,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645249681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,9 +301,9 @@\n   },\r\n   picker: {\r\n     borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n-    borderRadius: 5,\r\n+    borderRadius: 10,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645285574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -307,8 +307,9 @@\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n     borderRadius: 10,\r\n+    padding: 5,\r\n     marginBottom: 10,\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n"
                },
                {
                    "date": 1745645316568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,8 +302,9 @@\n   picker: {\r\n     borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n     borderRadius: 10,\r\n+    fontSize: 14,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645346110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,9 +302,10 @@\n   picker: {\r\n     borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n     borderRadius: 10,\r\n-    fontSize: 14,\r\n+    fontSize: 10,\r\n+    height: 45\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645355203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,9 +309,9 @@\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n     borderRadius: 10,\r\n-    padding: 5,\r\n+    padding: 2,\r\n     marginBottom: 10,\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n"
                },
                {
                    "date": 1745645364089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,9 +303,10 @@\n     borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n     borderRadius: 10,\r\n     fontSize: 10,\r\n-    height: 45\r\n+    height: 45,\r\n+    padding: 0,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645371192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,9 +303,9 @@\n     borderWidth: 1,\r\n     backgroundColor: \"#fff\",\r\n     borderRadius: 10,\r\n     fontSize: 10,\r\n-    height: 45,\r\n+    height: 50,\r\n     padding: 0,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n"
                },
                {
                    "date": 1745645390889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,11 +299,9 @@\n     marginBottom: 10,\r\n     borderRadius: 10,\r\n   },\r\n   picker: {\r\n-    borderWidth: 1,\r\n-    backgroundColor: \"#fff\",\r\n-    borderRadius: 10,\r\n+    borderRadius: 5,\r\n     fontSize: 10,\r\n     height: 50,\r\n     padding: 0,\r\n   },\r\n"
                },
                {
                    "date": 1745645415583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,10 +299,10 @@\n     marginBottom: 10,\r\n     borderRadius: 10,\r\n   },\r\n   picker: {\r\n-    borderRadius: 5,\r\n-    fontSize: 10,\r\n+    borderRadius: 15,\r\n+    fontSize: 5,\r\n     height: 50,\r\n     padding: 0,\r\n   },\r\n   pickerBox: {\r\n"
                },
                {
                    "date": 1745645449388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n     borderRadius: 10,\r\n   },\r\n   picker: {\r\n     borderRadius: 15,\r\n-    fontSize: 5,\r\n+    fontSize: 10,\r\n     height: 50,\r\n     padding: 0,\r\n   },\r\n   pickerBox: {\r\n"
                },
                {
                    "date": 1745645465185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,10 +299,9 @@\n     marginBottom: 10,\r\n     borderRadius: 10,\r\n   },\r\n   picker: {\r\n-    borderRadius: 15,\r\n-    fontSize: 10,\r\n+    fontSize: 14,\r\n     height: 50,\r\n     padding: 0,\r\n   },\r\n   pickerBox: {\r\n"
                },
                {
                    "date": 1745645483455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,8 +299,9 @@\n     marginBottom: 10,\r\n     borderRadius: 10,\r\n   },\r\n   picker: {\r\n+    borderColor: 'white',\r\n     fontSize: 14,\r\n     height: 50,\r\n     padding: 0,\r\n   },\r\n"
                },
                {
                    "date": 1745645506222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,8 +300,9 @@\n     borderRadius: 10,\r\n   },\r\n   picker: {\r\n     borderColor: 'white',\r\n+    borderRadius: 10,\r\n     fontSize: 14,\r\n     height: 50,\r\n     padding: 0,\r\n   },\r\n"
                },
                {
                    "date": 1745645514186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,9 +303,9 @@\n     borderColor: 'white',\r\n     borderRadius: 10,\r\n     fontSize: 14,\r\n     height: 50,\r\n-    padding: 0,\r\n+    padding: 5,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645522043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,9 +309,9 @@\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n     borderRadius: 10,\r\n-    padding: 2,\r\n+    padding: 5,\r\n     marginBottom: 10,\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   button: {\r\n"
                },
                {
                    "date": 1745645530254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,10 +302,10 @@\n   picker: {\r\n     borderColor: 'white',\r\n     borderRadius: 10,\r\n     fontSize: 14,\r\n-    height: 50,\r\n-    padding: 5,\r\n+    height: 45,\r\n+    padding: 0,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n"
                },
                {
                    "date": 1745645542231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,9 +302,9 @@\n   picker: {\r\n     borderColor: 'white',\r\n     borderRadius: 10,\r\n     fontSize: 14,\r\n-    height: 45,\r\n+    height: 40,\r\n     padding: 0,\r\n   },\r\n   pickerBox: {\r\n     borderWidth: 1,\r\n"
                },
                {
                    "date": 1745645633015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -251,9 +251,9 @@\n         </Picker>\r\n       </View>\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} style={styles.picker}>\r\n-          <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\"  />\r\n+          <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\" />\r\n           <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n           <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n         </Picker>\r\n       </View>\r\n"
                },
                {
                    "date": 1745645709821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,10 +163,11 @@\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n-      <StatusBar barStyle=\"light-content\" />\r\n-\r\n+      <View style={{paddingTop: 30}}>\r\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+      </View>\r\n       <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n       <View style={styles.pickerBox}>\r\n         <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n           <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n"
                },
                {
                    "date": 1745646067479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,340 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TextInput,\r\n+  TouchableOpacity,\r\n+  ScrollView,\r\n+  StyleSheet,\r\n+  Alert,\r\n+  StatusBar,\r\n+  Platform,\r\n+  Image,\r\n+} from \"react-native\";\r\n+import { Modal, FlatList } from \"react-native\";\r\n+import * as ImagePicker from \"expo-image-picker\";\r\n+import { ImagePickerAsset } from \"expo-image-picker\";\r\n+import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n+import { Picker } from \"@react-native-picker/picker\";\r\n+import API_BASE_URL from \"../../config\";\r\n+\r\n+export default function DriverRegister() {\r\n+  const [role, setRole] = useState(\"Driver\");\r\n+  const isBoth = role === \"Both\";\r\n+  \r\n+\r\n+  // Shared\r\n+  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n+  const [todaName, setTodaName] = useState(\"\");\r\n+  const [sector, setSector] = useState(\"East\");\r\n+  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n+  const [votingLocation, setVotingLocation] = useState(\"\");\r\n+\r\n+  // Operator info\r\n+  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n+  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n+  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n+  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n+  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n+  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n+  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n+\r\n+  // Driver info\r\n+  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n+  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n+  const [driverLastName, setDriverLastName] = useState(\"\");\r\n+  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n+  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n+  const [showDriverDate, setShowDriverDate] = useState(false);\r\n+  const [driverPhone, setDriverPhone] = useState(\"\");\r\n+  const [experienceYears, setExperienceYears] = useState(\"\");\r\n+\r\n+  // Account\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+\r\n+  // Images\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n+\r\n+  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n+    const result = await ImagePicker.launchImageLibraryAsync({\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      allowsEditing: true,\r\n+      quality: 1,\r\n+    });\r\n+    if (!result.canceled && result.assets?.length > 0) {\r\n+      setFunc(result.assets[0]);\r\n+    }\r\n+  };\r\n+\r\n+  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n+    setShow(false);\r\n+    const formatted = date.toISOString().split(\"T\")[0];\r\n+    setFunc(formatted);\r\n+  };\r\n+\r\n+  const handleSubmit = async () => {\r\n+    if (role === \"Both\") {\r\n+      setDriverFirstName(operatorFirstName);\r\n+      setDriverMiddleName(operatorMiddleName);\r\n+      setDriverLastName(operatorLastName);\r\n+      setDriverSuffix(operatorSuffix);\r\n+      setDriverBirthdate(operatorBirthdate);\r\n+      setDriverPhone(operatorPhone);\r\n+    }\r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n+      return;\r\n+    }\r\n+    if (password !== confirmPassword) {\r\n+      Alert.alert(\"Error\", \"Passwords do not match\");\r\n+      return;\r\n+    }\r\n+\r\n+    const formData = new FormData();\r\n+    formData.append(\"role\", role);\r\n+    formData.append(\"franchiseNumber\", franchiseNumber);\r\n+    formData.append(\"todaName\", todaName);\r\n+    formData.append(\"sector\", sector);\r\n+    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n+    formData.append(\"votingLocation\", votingLocation);\r\n+    formData.append(\"email\", email);\r\n+    formData.append(\"password\", password);\r\n+\r\n+    formData.append(\"operatorFirstName\", operatorFirstName);\r\n+    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+    formData.append(\"operatorLastName\", operatorLastName);\r\n+    formData.append(\"operatorSuffix\", operatorSuffix);\r\n+    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n+    formData.append(\"operatorPhone\", operatorPhone);\r\n+\r\n+    formData.append(\"driverFirstName\", driverFirstName);\r\n+    formData.append(\"driverMiddleName\", driverMiddleName);\r\n+    formData.append(\"driverLastName\", driverLastName);\r\n+    formData.append(\"driverSuffix\", driverSuffix);\r\n+    formData.append(\"driverBirthdate\", driverBirthdate);\r\n+    formData.append(\"driverPhone\", driverPhone);\r\n+    formData.append(\"experienceYears\", experienceYears);\r\n+\r\n+    formData.append(\"votersIDImage\", {\r\n+      uri: votersIDImage.uri,\r\n+      name: \"voter.jpg\",\r\n+      type: \"image/jpeg\",\r\n+    } as any);\r\n+    if (driversLicenseImage)\r\n+      formData.append(\"driversLicenseImage\", {\r\n+        uri: driversLicenseImage.uri,\r\n+        name: \"license.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (orcrImage)\r\n+      formData.append(\"orcrImage\", {\r\n+        uri: orcrImage.uri,\r\n+        name: \"orcr.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (selfieImage)\r\n+      formData.append(\"selfie\", {\r\n+        uri: selfieImage.uri,\r\n+        name: \"selfie.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+\r\n+    try {\r\n+      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n+        method: \"POST\",\r\n+        body: formData,\r\n+        headers: {\r\n+          \"Content-Type\": \"multipart/form-data\",\r\n+        },\r\n+      });\r\n+\r\n+      const text = await res.text();\r\n+      const data = JSON.parse(text);\r\n+      if (res.ok) Alert.alert(\"Success\", data.message);\r\n+      else Alert.alert(\"Error\", data.error);\r\n+    } catch (e) {\r\n+      console.error(\"Driver registration failed:\", e);\r\n+      Alert.alert(\"Error\", \"Network error or server issue\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <ScrollView contentContainerStyle={styles.container}>\r\n+      <View style={{paddingTop: 30}}>\r\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+      </View>\r\n+      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n+          <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n+          <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n+          <Picker.Item label=\"Both\" value=\"Both\" />\r\n+        </Picker>\r\n+      </View>\r\n+      {/* Operator Info */}\r\n+      {(role === \"Operator\" || role === \"Driver\") && (\r\n+        <Text style={styles.header}>Operator Information</Text>\r\n+      )}\r\n+      {(role === \"Both\") && (\r\n+        <Text style={styles.header}>Basic Information</Text>\r\n+      )}\r\n+      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n+      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n+      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n+      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n+        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+      </TouchableOpacity>\r\n+      {showOperatorDate && (\r\n+        <DateTimePicker\r\n+          value={new Date()}\r\n+          mode=\"date\"\r\n+          display=\"default\"\r\n+          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n+        />\r\n+      )}\r\n+      {(role === \"Operator\" || role === \"Driver\") && (\r\n+        <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      )}\r\n+      {(role === \"Both\") && (\r\n+        <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+      )}\r\n+      \r\n+\r\n+      {/* Driver Info */}\r\n+      {(role === \"Operator\" || role === \"Driver\") && (\r\n+        <>\r\n+          <Text style={styles.header}>Driver Information</Text>\r\n+          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n+          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n+          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n+          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n+            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n+          </TouchableOpacity>\r\n+          {showDriverDate && (\r\n+            <DateTimePicker\r\n+              value={new Date()}\r\n+              mode=\"date\"\r\n+              display=\"default\"\r\n+              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n+            />\r\n+          )}\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+        </>\r\n+      )}\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} style={styles.picker}>\r\n+          <Picker.Item label=\"Gaano katagal ng nag mamaneho ng tricycle?\" value=\"\" enabled={false} color=\"gray\" />\r\n+          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n+          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n+          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n+          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n+        </Picker>\r\n+      </View>\r\n+\r\n+      {/* Registration Info */}\r\n+      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n+      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n+          <Picker.Item label=\"Sector\" value=\"\" enabled={false} color=\"gray\" />\r\n+          <Picker.Item label=\"East\" value=\"East\" />\r\n+          <Picker.Item label=\"West\" value=\"West\" />\r\n+          <Picker.Item label=\"North\" value=\"North\" />\r\n+          <Picker.Item label=\"South\" value=\"South\" />\r\n+          <Picker.Item label=\"Other\" value=\"Other\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <View style={styles.pickerBox}>\r\n+        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} style={styles.picker}>\r\n+          <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\" />\r\n+          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n+          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n+        </Picker>\r\n+      </View>\r\n+      <TextInput style={styles.input} placeholder=\"Kung Hindi saan Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+\r\n+      {/* Account Info */}\r\n+      <Text style={styles.header}>Account</Text>\r\n+      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n+      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n+\r\n+      {/* Uploads */}\r\n+      <Text style={styles.header}>Uploads</Text>\r\n+      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n+        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n+        <Text style={styles.buttonText}>Upload License</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n+        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n+      </TouchableOpacity>\r\n+      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n+        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n+      </TouchableOpacity>\r\n+\r\n+      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n+        <Text style={styles.buttonText}>Submit</Text>\r\n+      </TouchableOpacity>\r\n+    </ScrollView>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { padding: 20 },\r\n+  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n+  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n+  input: {\r\n+    backgroundColor: \"#fff\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    padding: 12,\r\n+    marginBottom: 10,\r\n+    borderRadius: 10,\r\n+  },\r\n+  picker: {\r\n+    borderColor: 'white',\r\n+    borderRadius: 10,\r\n+    fontSize: 14,\r\n+    height: 40,\r\n+    padding: 0,\r\n+  },\r\n+  pickerBox: {\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    borderRadius: 10,\r\n+    padding: 5,\r\n+    marginBottom: 10,\r\n+    backgroundColor: \"#fff\",\r\n+  },\r\n+  button: {\r\n+    backgroundColor: \"#aaa\",\r\n+    padding: 12,\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    alignItems: \"center\",\r\n+  },\r\n+  uploaded: {\r\n+    backgroundColor: \"#4caf50\",\r\n+  },\r\n+  buttonText: {\r\n+    color: \"#fff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  submitButton: {\r\n+    backgroundColor: \"#1e90ff\",\r\n+    padding: 15,\r\n+    borderRadius: 10,\r\n+    alignItems: \"center\",\r\n+    marginTop: 20,\r\n+  },\r\n+});\r\n"
                },
                {
                    "date": 1745646129536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,6 @@\n import React, { useState } from \"react\";\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  TextInput,\r\n-  TouchableOpacity,\r\n-  ScrollView,\r\n-  StyleSheet,\r\n-  Alert,\r\n-  StatusBar,\r\n-  Platform,\r\n-  Image,\r\n-} from \"react-native\";\r\n-import { Modal, FlatList } from \"react-native\";\r\n+import { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import { Picker } from \"@react-native-picker/picker\";\r\n@@ -337,343 +325,4 @@\n     alignItems: \"center\",\r\n     marginTop: 20,\r\n   },\r\n });\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  TextInput,\r\n-  TouchableOpacity,\r\n-  ScrollView,\r\n-  StyleSheet,\r\n-  Alert,\r\n-  StatusBar,\r\n-  Platform,\r\n-  Image,\r\n-} from \"react-native\";\r\n-import * as ImagePicker from \"expo-image-picker\";\r\n-import { ImagePickerAsset } from \"expo-image-picker\";\r\n-import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n-import { Picker } from \"@react-native-picker/picker\";\r\n-import API_BASE_URL from \"../../config\";\r\n-\r\n-export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Driver\");\r\n-  const isBoth = role === \"Both\";\r\n-  \r\n-\r\n-  // Shared\r\n-  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n-  const [todaName, setTodaName] = useState(\"\");\r\n-  const [sector, setSector] = useState(\"East\");\r\n-  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n-  const [votingLocation, setVotingLocation] = useState(\"\");\r\n-\r\n-  // Operator info\r\n-  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n-  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n-  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n-  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n-  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n-  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n-  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n-\r\n-  // Driver info\r\n-  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n-  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n-  const [driverLastName, setDriverLastName] = useState(\"\");\r\n-  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n-  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n-  const [showDriverDate, setShowDriverDate] = useState(false);\r\n-  const [driverPhone, setDriverPhone] = useState(\"\");\r\n-  const [experienceYears, setExperienceYears] = useState(\"\");\r\n-\r\n-  // Account\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-\r\n-  // Images\r\n-  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n-\r\n-  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n-    const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-      allowsEditing: true,\r\n-      quality: 1,\r\n-    });\r\n-    if (!result.canceled && result.assets?.length > 0) {\r\n-      setFunc(result.assets[0]);\r\n-    }\r\n-  };\r\n-\r\n-  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n-    setShow(false);\r\n-    const formatted = date.toISOString().split(\"T\")[0];\r\n-    setFunc(formatted);\r\n-  };\r\n-\r\n-  const handleSubmit = async () => {\r\n-    if (role === \"Both\") {\r\n-      setDriverFirstName(operatorFirstName);\r\n-      setDriverMiddleName(operatorMiddleName);\r\n-      setDriverLastName(operatorLastName);\r\n-      setDriverSuffix(operatorSuffix);\r\n-      setDriverBirthdate(operatorBirthdate);\r\n-      setDriverPhone(operatorPhone);\r\n-    }\r\n-    if (!votersIDImage) {\r\n-      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n-      return;\r\n-    }\r\n-    if (password !== confirmPassword) {\r\n-      Alert.alert(\"Error\", \"Passwords do not match\");\r\n-      return;\r\n-    }\r\n-\r\n-    const formData = new FormData();\r\n-    formData.append(\"role\", role);\r\n-    formData.append(\"franchiseNumber\", franchiseNumber);\r\n-    formData.append(\"todaName\", todaName);\r\n-    formData.append(\"sector\", sector);\r\n-    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n-    formData.append(\"votingLocation\", votingLocation);\r\n-    formData.append(\"email\", email);\r\n-    formData.append(\"password\", password);\r\n-\r\n-    formData.append(\"operatorFirstName\", operatorFirstName);\r\n-    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n-    formData.append(\"operatorLastName\", operatorLastName);\r\n-    formData.append(\"operatorSuffix\", operatorSuffix);\r\n-    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n-    formData.append(\"operatorPhone\", operatorPhone);\r\n-\r\n-    formData.append(\"driverFirstName\", driverFirstName);\r\n-    formData.append(\"driverMiddleName\", driverMiddleName);\r\n-    formData.append(\"driverLastName\", driverLastName);\r\n-    formData.append(\"driverSuffix\", driverSuffix);\r\n-    formData.append(\"driverBirthdate\", driverBirthdate);\r\n-    formData.append(\"driverPhone\", driverPhone);\r\n-    formData.append(\"experienceYears\", experienceYears);\r\n-\r\n-    formData.append(\"votersIDImage\", {\r\n-      uri: votersIDImage.uri,\r\n-      name: \"voter.jpg\",\r\n-      type: \"image/jpeg\",\r\n-    } as any);\r\n-    if (driversLicenseImage)\r\n-      formData.append(\"driversLicenseImage\", {\r\n-        uri: driversLicenseImage.uri,\r\n-        name: \"license.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (orcrImage)\r\n-      formData.append(\"orcrImage\", {\r\n-        uri: orcrImage.uri,\r\n-        name: \"orcr.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (selfieImage)\r\n-      formData.append(\"selfie\", {\r\n-        uri: selfieImage.uri,\r\n-        name: \"selfie.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-\r\n-    try {\r\n-      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n-        method: \"POST\",\r\n-        body: formData,\r\n-        headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n-        },\r\n-      });\r\n-\r\n-      const text = await res.text();\r\n-      const data = JSON.parse(text);\r\n-      if (res.ok) Alert.alert(\"Success\", data.message);\r\n-      else Alert.alert(\"Error\", data.error);\r\n-    } catch (e) {\r\n-      console.error(\"Driver registration failed:\", e);\r\n-      Alert.alert(\"Error\", \"Network error or server issue\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <ScrollView contentContainerStyle={styles.container}>\r\n-      <View style={{paddingTop: 30}}>\r\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n-      </View>\r\n-      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n-          <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n-          <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n-          <Picker.Item label=\"Both\" value=\"Both\" />\r\n-        </Picker>\r\n-      </View>\r\n-      {/* Operator Info */}\r\n-      {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <Text style={styles.header}>Operator Information</Text>\r\n-      )}\r\n-      {(role === \"Both\") && (\r\n-        <Text style={styles.header}>Basic Information</Text>\r\n-      )}\r\n-      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n-      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n-      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n-      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n-      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n-      </TouchableOpacity>\r\n-      {showOperatorDate && (\r\n-        <DateTimePicker\r\n-          value={new Date()}\r\n-          mode=\"date\"\r\n-          display=\"default\"\r\n-          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n-        />\r\n-      )}\r\n-      {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-      )}\r\n-      {(role === \"Both\") && (\r\n-        <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-      )}\r\n-      \r\n-\r\n-      {/* Driver Info */}\r\n-      {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <>\r\n-          <Text style={styles.header}>Driver Information</Text>\r\n-          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n-          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n-          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n-          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n-          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n-          </TouchableOpacity>\r\n-          {showDriverDate && (\r\n-            <DateTimePicker\r\n-              value={new Date()}\r\n-              mode=\"date\"\r\n-              display=\"default\"\r\n-              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n-            />\r\n-          )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n-        </>\r\n-      )}\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} style={styles.picker}>\r\n-          <Picker.Item label=\"Gaano katagal ng nag mamaneho ng tricycle?\" value=\"\" enabled={false} color=\"gray\" />\r\n-          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n-          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n-          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n-          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n-        </Picker>\r\n-      </View>\r\n-\r\n-      {/* Registration Info */}\r\n-      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n-      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n-          <Picker.Item label=\"Sector\" value=\"\" enabled={false} color=\"gray\" />\r\n-          <Picker.Item label=\"East\" value=\"East\" />\r\n-          <Picker.Item label=\"West\" value=\"West\" />\r\n-          <Picker.Item label=\"North\" value=\"North\" />\r\n-          <Picker.Item label=\"South\" value=\"South\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} style={styles.picker}>\r\n-          <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\" />\r\n-          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n-          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <TextInput style={styles.input} placeholder=\"Kung Hindi saan Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-\r\n-      {/* Account Info */}\r\n-      <Text style={styles.header}>Account</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n-      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n-      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n-\r\n-      {/* Uploads */}\r\n-      <Text style={styles.header}>Uploads</Text>\r\n-      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n-        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n-        <Text style={styles.buttonText}>Upload License</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n-        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n-        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n-      </TouchableOpacity>\r\n-\r\n-      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n-        <Text style={styles.buttonText}>Submit</Text>\r\n-      </TouchableOpacity>\r\n-    </ScrollView>\r\n-  );\r\n-}\r\n-\r\n-const styles = StyleSheet.create({\r\n-  container: { padding: 20 },\r\n-  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n-  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n-  input: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    padding: 12,\r\n-    marginBottom: 10,\r\n-    borderRadius: 10,\r\n-  },\r\n-  picker: {\r\n-    borderColor: 'white',\r\n-    borderRadius: 10,\r\n-    fontSize: 14,\r\n-    height: 40,\r\n-    padding: 0,\r\n-  },\r\n-  pickerBox: {\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    borderRadius: 10,\r\n-    padding: 5,\r\n-    marginBottom: 10,\r\n-    backgroundColor: \"#fff\",\r\n-  },\r\n-  button: {\r\n-    backgroundColor: \"#aaa\",\r\n-    padding: 12,\r\n-    borderRadius: 10,\r\n-    marginBottom: 10,\r\n-    alignItems: \"center\",\r\n-  },\r\n-  uploaded: {\r\n-    backgroundColor: \"#4caf50\",\r\n-  },\r\n-  buttonText: {\r\n-    color: \"#fff\",\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  submitButton: {\r\n-    backgroundColor: \"#1e90ff\",\r\n-    padding: 15,\r\n-    borderRadius: 10,\r\n-    alignItems: \"center\",\r\n-    marginTop: 20,\r\n-  },\r\n-});\r\n"
                },
                {
                    "date": 1745646400687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n \r\n export default function DriverRegister() {\r\n   const [role, setRole] = useState(\"Driver\");\r\n   const isBoth = role === \"Both\";\r\n-  \r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n@@ -35,9 +34,22 @@\n   const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n   const [showDriverDate, setShowDriverDate] = useState(false);\r\n   const [driverPhone, setDriverPhone] = useState(\"\");\r\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n+  const [isModalVisible, setModalVisible] = useState(false);\r\n \r\n+\r\n+  // picker choices\r\n+  const experienceOptions = [\r\n+    \"1-5 taon\",\r\n+    \"6-10 taon\",\r\n+    \"16-20 taon\",\r\n+    \"20 taon pataas\",\r\n+  ];\r\n+  const roles = [\"Driver\", \"Operator\", \"Both\"];\r\n+  const sectors = [\"East\", \"West\", \"North\", \"South\", \"Other\"];\r\n+  const voterOptions = [\"Oo\", \"Hindi\"];\r\n+\r\n   // Account\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n@@ -215,17 +227,43 @@\n           )}\r\n           <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n         </>\r\n       )}\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={experienceYears} onValueChange={setExperienceYears} style={styles.picker}>\r\n-          <Picker.Item label=\"Gaano katagal ng nag mamaneho ng tricycle?\" value=\"\" enabled={false} color=\"gray\" />\r\n-          <Picker.Item label=\"1-5 taon\" value=\"1-5 taon\" />\r\n-          <Picker.Item label=\"6-10 taon\" value=\"6-10 taon\" />\r\n-          <Picker.Item label=\"16-20 taon\" value=\"16-20 taon\" />\r\n-          <Picker.Item label=\"20 taon pataas\" value=\"20 taon pataas\" />\r\n-        </Picker>\r\n-      </View>\r\n+      <TouchableOpacity\r\n+        style={styles.customPicker}\r\n+        onPress={() => setModalVisible(true)}\r\n+      >\r\n+        <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n+          {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n+      <Modal\r\n+        animationType=\"slide\"\r\n+        transparent={true}\r\n+        visible={isModalVisible}\r\n+        onRequestClose={() => setModalVisible(false)}\r\n+      >\r\n+        <TouchableOpacity\r\n+          style={styles.modalOverlay}\r\n+          activeOpacity={1}\r\n+          onPressOut={() => setModalVisible(false)}\r\n+        >\r\n+          <View style={styles.modalContent}>\r\n+            {experienceOptions.map((option, index) => (\r\n+              <TouchableOpacity\r\n+                key={index}\r\n+                style={styles.optionItem}\r\n+                onPress={() => {\r\n+                  setExperienceYears(option);\r\n+                  setModalVisible(false);\r\n+                }}\r\n+              >\r\n+                <Text style={styles.optionText}>{option}</Text>\r\n+              </TouchableOpacity>\r\n+            ))}\r\n+          </View>\r\n+        </TouchableOpacity>\r\n+      </Modal>\r\n \r\n       {/* Registration Info */}\r\n       <Text style={styles.header}>Franchise & Voting Info</Text>\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n@@ -288,23 +326,43 @@\n     padding: 12,\r\n     marginBottom: 10,\r\n     borderRadius: 10,\r\n   },\r\n-  picker: {\r\n-    borderColor: 'white',\r\n-    borderRadius: 10,\r\n-    fontSize: 14,\r\n-    height: 40,\r\n-    padding: 0,\r\n-  },\r\n-  pickerBox: {\r\n+  customPicker: {\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n     borderRadius: 10,\r\n-    padding: 5,\r\n+    paddingVertical: 10,\r\n+    paddingHorizontal: 12,\r\n+    backgroundColor: \"#fff\",\r\n     marginBottom: 10,\r\n+  },\r\n+  \r\n+  modalOverlay: {\r\n+    flex: 1,\r\n+    backgroundColor: \"rgba(0, 0, 0, 0.3)\",\r\n+    justifyContent: \"center\",\r\n+    alignItems: \"center\",\r\n+  },\r\n+  \r\n+  modalContent: {\r\n     backgroundColor: \"#fff\",\r\n+    borderRadius: 10,\r\n+    padding: 20,\r\n+    width: \"80%\",\r\n+    elevation: 10,\r\n   },\r\n+  \r\n+  optionItem: {\r\n+    paddingVertical: 12,\r\n+    paddingHorizontal: 10,\r\n+    borderBottomWidth: 1,\r\n+    borderBottomColor: \"#eee\",\r\n+  },\r\n+  \r\n+  optionText: {\r\n+    fontSize: 16,\r\n+  },  \r\n   button: {\r\n     backgroundColor: \"#aaa\",\r\n     padding: 12,\r\n     borderRadius: 10,\r\n"
                },
                {
                    "date": 1745646751884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,20 @@\n   const [driverPhone, setDriverPhone] = useState(\"\");\r\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n   const [isModalVisible, setModalVisible] = useState(false);\r\n \r\n+  // Account\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n \r\n+  // Images\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n+\r\n+\r\n   // picker choices\r\n   const experienceOptions = [\r\n     \"1-5 taon\",\r\n     \"6-10 taon\",\r\n@@ -48,19 +59,8 @@\n   const roles = [\"Driver\", \"Operator\", \"Both\"];\r\n   const sectors = [\"East\", \"West\", \"North\", \"South\", \"Other\"];\r\n   const voterOptions = [\"Oo\", \"Hindi\"];\r\n \r\n-  // Account\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-\r\n-  // Images\r\n-  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n-\r\n   const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n     const result = await ImagePicker.launchImageLibraryAsync({\r\n       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n       allowsEditing: true,\r\n@@ -168,15 +168,19 @@\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={role} onValueChange={setRole} style={styles.picker}>\r\n-          <Picker.Item label=\"Driver\" value=\"Driver\" />\r\n-          <Picker.Item label=\"Operator\" value=\"Operator\" />\r\n-          <Picker.Item label=\"Both\" value=\"Both\" />\r\n-        </Picker>\r\n-      </View>\r\n+      <TouchableOpacity\r\n+        style={styles.customPicker}\r\n+        onPress={() => {\r\n+          setSelectedModalType(\"role\");\r\n+          setModalVisible(true);\r\n+        }}\r\n+      >\r\n+        <Text style={styles.pickerText}>\r\n+          {role || \"Pumili ng Role\"}\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n       {/* Operator Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <Text style={styles.header}>Operator Information</Text>\r\n       )}\r\n@@ -235,51 +239,25 @@\n         <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n           {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n         </Text>\r\n       </TouchableOpacity>\r\n-      <Modal\r\n-        animationType=\"slide\"\r\n-        transparent={true}\r\n-        visible={isModalVisible}\r\n-        onRequestClose={() => setModalVisible(false)}\r\n-      >\r\n-        <TouchableOpacity\r\n-          style={styles.modalOverlay}\r\n-          activeOpacity={1}\r\n-          onPressOut={() => setModalVisible(false)}\r\n-        >\r\n-          <View style={styles.modalContent}>\r\n-            {experienceOptions.map((option, index) => (\r\n-              <TouchableOpacity\r\n-                key={index}\r\n-                style={styles.optionItem}\r\n-                onPress={() => {\r\n-                  setExperienceYears(option);\r\n-                  setModalVisible(false);\r\n-                }}\r\n-              >\r\n-                <Text style={styles.optionText}>{option}</Text>\r\n-              </TouchableOpacity>\r\n-            ))}\r\n-          </View>\r\n-        </TouchableOpacity>\r\n-      </Modal>\r\n \r\n       {/* Registration Info */}\r\n       <Text style={styles.header}>Franchise & Voting Info</Text>\r\n       <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+      <TouchableOpacity\r\n+        style={styles.customPicker}\r\n+        onPress={() => {\r\n+          setSelectedModalType(\"sector\");\r\n+          setModalVisible(true);\r\n+        }}\r\n+      >\r\n+        <Text style={styles.pickerText}>\r\n+          {sector || \"Pumili ng Sector\"}\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n       <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={sector} onValueChange={setSector} style={styles.picker}>\r\n-          <Picker.Item label=\"Sector\" value=\"\" enabled={false} color=\"gray\" />\r\n-          <Picker.Item label=\"East\" value=\"East\" />\r\n-          <Picker.Item label=\"West\" value=\"West\" />\r\n-          <Picker.Item label=\"North\" value=\"North\" />\r\n-          <Picker.Item label=\"South\" value=\"South\" />\r\n-          <Picker.Item label=\"Other\" value=\"Other\" />\r\n-        </Picker>\r\n-      </View>\r\n-      <View style={styles.pickerBox}>\r\n         <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} style={styles.picker}>\r\n           <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\" />\r\n           <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n           <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n@@ -310,8 +288,51 @@\n \r\n       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n         <Text style={styles.buttonText}>Submit</Text>\r\n       </TouchableOpacity>\r\n+\r\n+\r\n+      {/* models */}\r\n+      <Modal\r\n+        animationType=\"fade\"\r\n+        transparent={true}\r\n+        visible={modalVisible}\r\n+        onRequestClose={() => setModalVisible(false)}\r\n+      >\r\n+        <TouchableOpacity\r\n+          style={styles.modalOverlay}\r\n+          activeOpacity={1}\r\n+          onPressOut={() => setModalVisible(false)}\r\n+        >\r\n+          <View style={styles.modalContent}>\r\n+            {(() => {\r\n+              let data = [];\r\n+              if (selectedModalType === \"experience\") data = experienceOptions;\r\n+              else if (selectedModalType === \"role\") data = roles;\r\n+              else if (selectedModalType === \"sector\") data = sectors;\r\n+              else if (selectedModalType === \"voter\") data = voterOptions;\r\n+\r\n+              return data.map((option, index) => (\r\n+                <TouchableOpacity\r\n+                  key={index}\r\n+                  style={styles.optionItem}\r\n+                  onPress={() => {\r\n+                    if (selectedModalType === \"experience\") setExperienceYears(option);\r\n+                    if (selectedModalType === \"role\") setRole(option);\r\n+                    if (selectedModalType === \"sector\") setSector(option);\r\n+                    if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n+                    setModalVisible(false);\r\n+                  }}\r\n+                >\r\n+                  <Text style={styles.optionText}>{option}</Text>\r\n+                </TouchableOpacity>\r\n+              ));\r\n+            })()}\r\n+          </View>\r\n+        </TouchableOpacity>\r\n+      </Modal>\r\n+\r\n+\r\n     </ScrollView>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1745646934699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,8 @@\n   const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n   const [showDriverDate, setShowDriverDate] = useState(false);\r\n   const [driverPhone, setDriverPhone] = useState(\"\");\r\n   const [experienceYears, setExperienceYears] = useState(\"\");\r\n-  const [isModalVisible, setModalVisible] = useState(false);\r\n \r\n   // Account\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n@@ -49,8 +48,10 @@\n   const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n \r\n \r\n   // picker choices\r\n+  const [modalVisible, setModalVisible] = useState(false);\r\n+  const [selectedModalType, setSelectedModalType] = useState(\"\");\r\n   const experienceOptions = [\r\n     \"1-5 taon\",\r\n     \"6-10 taon\",\r\n     \"16-20 taon\",\r\n@@ -255,15 +256,19 @@\n         <Text style={styles.pickerText}>\r\n           {sector || \"Pumili ng Sector\"}\r\n         </Text>\r\n       </TouchableOpacity>\r\n-      <View style={styles.pickerBox}>\r\n-        <Picker selectedValue={isLucenaVoter} onValueChange={setIsLucenaVoter} style={styles.picker}>\r\n-          <Picker.Item label=\"Botante ng Lucena\" value=\"\" enabled={false} color=\"gray\" />\r\n-          <Picker.Item label=\"Oo\" value=\"Oo\" />\r\n-          <Picker.Item label=\"Hindi\" value=\"Hindi\" />\r\n-        </Picker>\r\n-      </View>\r\n+      <TouchableOpacity\r\n+        style={styles.customPicker}\r\n+        onPress={() => {\r\n+          setSelectedModalType(\"voter\");\r\n+          setModalVisible(true);\r\n+        }}\r\n+      >\r\n+        <Text style={styles.pickerText}>\r\n+          {isLucenaVoter || \"Botante ng Lucena?\"}\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n       <TextInput style={styles.input} placeholder=\"Kung Hindi saan Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n       {/* Account Info */}\r\n       <Text style={styles.header}>Account</Text>\r\n"
                },
                {
                    "date": 1745647184787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,9 +234,12 @@\n         </>\r\n       )}\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n-        onPress={() => setModalVisible(true)}\r\n+        onPress={() => {\r\n+          setSelectedModalType(\"experience\");\r\n+          setModalVisible(true);\r\n+        }}\r\n       >\r\n         <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n           {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n         </Text>\r\n@@ -308,31 +311,32 @@\n           activeOpacity={1}\r\n           onPressOut={() => setModalVisible(false)}\r\n         >\r\n           <View style={styles.modalContent}>\r\n-            {(() => {\r\n-              let data = [];\r\n-              if (selectedModalType === \"experience\") data = experienceOptions;\r\n-              else if (selectedModalType === \"role\") data = roles;\r\n-              else if (selectedModalType === \"sector\") data = sectors;\r\n-              else if (selectedModalType === \"voter\") data = voterOptions;\r\n+          {(() => {\r\n+            let data = [];\r\n+            if (selectedModalType === \"experience\") data = experienceOptions;\r\n+            else if (selectedModalType === \"role\") data = roles;\r\n+            else if (selectedModalType === \"sector\") data = sectors;\r\n+            else if (selectedModalType === \"voter\") data = voterOptions;\r\n \r\n-              return data.map((option, index) => (\r\n-                <TouchableOpacity\r\n-                  key={index}\r\n-                  style={styles.optionItem}\r\n-                  onPress={() => {\r\n-                    if (selectedModalType === \"experience\") setExperienceYears(option);\r\n-                    if (selectedModalType === \"role\") setRole(option);\r\n-                    if (selectedModalType === \"sector\") setSector(option);\r\n-                    if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n-                    setModalVisible(false);\r\n-                  }}\r\n-                >\r\n-                  <Text style={styles.optionText}>{option}</Text>\r\n-                </TouchableOpacity>\r\n-              ));\r\n-            })()}\r\n+            return data.map((option, index) => (\r\n+              <TouchableOpacity\r\n+                key={index}\r\n+                style={styles.optionItem}\r\n+                onPress={() => {\r\n+                  if (selectedModalType === \"experience\") setExperienceYears(option);\r\n+                  if (selectedModalType === \"role\") setRole(option);\r\n+                  if (selectedModalType === \"sector\") setSector(option);\r\n+                  if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n+                  setModalVisible(false);\r\n+                }}\r\n+              >\r\n+                <Text style={styles.optionText}>{option}</Text>\r\n+              </TouchableOpacity>\r\n+            ));\r\n+          })()}\r\n+\r\n           </View>\r\n         </TouchableOpacity>\r\n       </Modal>\r\n \r\n@@ -362,33 +366,38 @@\n     backgroundColor: \"#fff\",\r\n     marginBottom: 10,\r\n   },\r\n   \r\n+  pickerText: {\r\n+    fontSize: 14,\r\n+    color: \"#000\",\r\n+  },\r\n+  \r\n   modalOverlay: {\r\n     flex: 1,\r\n-    backgroundColor: \"rgba(0, 0, 0, 0.3)\",\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\",\r\n+    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n   },\r\n   \r\n   modalContent: {\r\n     backgroundColor: \"#fff\",\r\n+    width: \"80%\",\r\n     borderRadius: 10,\r\n-    padding: 20,\r\n-    width: \"80%\",\r\n-    elevation: 10,\r\n+    padding: 15,\r\n+    elevation: 5,\r\n   },\r\n   \r\n   optionItem: {\r\n     paddingVertical: 12,\r\n-    paddingHorizontal: 10,\r\n     borderBottomWidth: 1,\r\n     borderBottomColor: \"#eee\",\r\n   },\r\n   \r\n   optionText: {\r\n     fontSize: 16,\r\n-  },  \r\n+    color: \"#333\",\r\n+  }, \r\n   button: {\r\n     backgroundColor: \"#aaa\",\r\n     padding: 12,\r\n     borderRadius: 10,\r\n"
                },
                {
                    "date": 1745647747215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,32 +311,36 @@\n           activeOpacity={1}\r\n           onPressOut={() => setModalVisible(false)}\r\n         >\r\n           <View style={styles.modalContent}>\r\n-          {(() => {\r\n-            let data = [];\r\n-            if (selectedModalType === \"experience\") data = experienceOptions;\r\n-            else if (selectedModalType === \"role\") data = roles;\r\n-            else if (selectedModalType === \"sector\") data = sectors;\r\n-            else if (selectedModalType === \"voter\") data = voterOptions;\r\n+            {(() => {\r\n+            let xdata = [];\r\n+            if (selectedModalType === \"experience\") xdata = experienceOptions;\r\n+            else if (selectedModalType === \"role\") xdata = roles;\r\n+            else if (selectedModalType === \"sector\") xdata = sectors;\r\n+            else if (selectedModalType === \"voter\") xdata = voterOptions;\r\n \r\n-            return data.map((option, index) => (\r\n-              <TouchableOpacity\r\n-                key={index}\r\n-                style={styles.optionItem}\r\n-                onPress={() => {\r\n-                  if (selectedModalType === \"experience\") setExperienceYears(option);\r\n-                  if (selectedModalType === \"role\") setRole(option);\r\n-                  if (selectedModalType === \"sector\") setSector(option);\r\n-                  if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n-                  setModalVisible(false);\r\n-                }}\r\n-              >\r\n-                <Text style={styles.optionText}>{option}</Text>\r\n-              </TouchableOpacity>\r\n-            ));\r\n-          })()}\r\n-\r\n+            // ✅ Wrap the return value in a fragment or View to ensure JSX expression is valid\r\n+            return (\r\n+              <>\r\n+                {xdata.map((option, index) => (\r\n+                  <TouchableOpacity\r\n+                    key={index}\r\n+                    style={styles.optionItem}\r\n+                    onPress={() => {\r\n+                      if (selectedModalType === \"experience\") setExperienceYears(option);\r\n+                      if (selectedModalType === \"role\") setRole(option);\r\n+                      if (selectedModalType === \"sector\") setSector(option);\r\n+                      if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n+                      setModalVisible(false);\r\n+                    }}\r\n+                  >\r\n+                    <Text style={styles.optionText}>{option}</Text>\r\n+                  </TouchableOpacity>\r\n+                ))}\r\n+              </>\r\n+            );\r\n+            })()}\r\n           </View>\r\n         </TouchableOpacity>\r\n       </Modal>\r\n \r\n"
                },
                {
                    "date": 1745647968666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n           setSelectedModalType(\"role\");\r\n           setModalVisible(true);\r\n         }}\r\n       >\r\n-        <Text style={styles.pickerText}>\r\n+        <Text style={{ fontSize: 14, color: role ? \"#000\" : \"#888\" }}>\r\n           {role || \"Pumili ng Role\"}\r\n         </Text>\r\n       </TouchableOpacity>\r\n       {/* Operator Info */}\r\n@@ -255,9 +255,9 @@\n           setSelectedModalType(\"sector\");\r\n           setModalVisible(true);\r\n         }}\r\n       >\r\n-        <Text style={styles.pickerText}>\r\n+        <Text style={{ fontSize: 14, color: sector ? \"#000\" : \"#888\" }}>\r\n           {sector || \"Pumili ng Sector\"}\r\n         </Text>\r\n       </TouchableOpacity>\r\n       <TouchableOpacity\r\n@@ -266,9 +266,9 @@\n           setSelectedModalType(\"voter\");\r\n           setModalVisible(true);\r\n         }}\r\n       >\r\n-        <Text style={styles.pickerText}>\r\n+        <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n           {isLucenaVoter || \"Botante ng Lucena?\"}\r\n         </Text>\r\n       </TouchableOpacity>\r\n       <TextInput style={styles.input} placeholder=\"Kung Hindi saan Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n@@ -370,13 +370,8 @@\n     backgroundColor: \"#fff\",\r\n     marginBottom: 10,\r\n   },\r\n   \r\n-  pickerText: {\r\n-    fontSize: 14,\r\n-    color: \"#000\",\r\n-  },\r\n-  \r\n   modalOverlay: {\r\n     flex: 1,\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\",\r\n"
                },
                {
                    "date": 1745648265785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,41 +311,43 @@\n           activeOpacity={1}\r\n           onPressOut={() => setModalVisible(false)}\r\n         >\r\n           <View style={styles.modalContent}>\r\n+            {/* Modal Picker Content */}\r\n             {(() => {\r\n-            let xdata = [];\r\n-            if (selectedModalType === \"experience\") xdata = experienceOptions;\r\n-            else if (selectedModalType === \"role\") xdata = roles;\r\n-            else if (selectedModalType === \"sector\") xdata = sectors;\r\n-            else if (selectedModalType === \"voter\") xdata = voterOptions;\r\n+              let xdata: string[] = [];\r\n \r\n-            // ✅ Wrap the return value in a fragment or View to ensure JSX expression is valid\r\n-            return (\r\n-              <>\r\n-                {xdata.map((option, index) => (\r\n-                  <TouchableOpacity\r\n-                    key={index}\r\n-                    style={styles.optionItem}\r\n-                    onPress={() => {\r\n-                      if (selectedModalType === \"experience\") setExperienceYears(option);\r\n-                      if (selectedModalType === \"role\") setRole(option);\r\n-                      if (selectedModalType === \"sector\") setSector(option);\r\n-                      if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n-                      setModalVisible(false);\r\n-                    }}\r\n-                  >\r\n-                    <Text style={styles.optionText}>{option}</Text>\r\n-                  </TouchableOpacity>\r\n-                ))}\r\n-              </>\r\n-            );\r\n+              if (selectedModalType === \"experience\") xdata = experienceOptions;\r\n+              else if (selectedModalType === \"role\") xdata = roles;\r\n+              else if (selectedModalType === \"sector\") xdata = sectors;\r\n+              else if (selectedModalType === \"voter\") xdata = voterOptions;\r\n+\r\n+              return (\r\n+                <>\r\n+                  {xdata.map((option, index) => (\r\n+                    <TouchableOpacity\r\n+                      key={index}\r\n+                      style={styles.optionItem}\r\n+                      onPress={() => {\r\n+                        if (selectedModalType === \"experience\") setExperienceYears(option);\r\n+                        if (selectedModalType === \"role\") setRole(option);\r\n+                        if (selectedModalType === \"sector\") setSector(option);\r\n+                        if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n+                        setModalVisible(false);\r\n+                      }}\r\n+                    >\r\n+                      <Text style={styles.optionText}>{option}</Text>\r\n+                    </TouchableOpacity>\r\n+                  ))}\r\n+                </>\r\n+              );\r\n             })()}\r\n           </View>\r\n         </TouchableOpacity>\r\n       </Modal>\r\n \r\n \r\n+\r\n     </ScrollView>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1745648409521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,9 +185,9 @@\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <Text style={styles.header}>Operator Information</Text>\r\n       )}\r\n       {(role === \"Both\") && (\r\n-        <Text style={styles.header}>Basic Information</Text>\r\n+        <Text style={styles.header}>Personal Information</Text>\r\n       )}\r\n       <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n"
                },
                {
                    "date": 1745648512292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,13 @@\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n   const [role, setRole] = useState(\"Driver\");\r\n-  const isBoth = role === \"Both\";\r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n-  const [sector, setSector] = useState(\"East\");\r\n+  const [sector, setSector] = useState(\"\");\r\n   const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n   const [votingLocation, setVotingLocation] = useState(\"\");\r\n \r\n   // Operator info\r\n"
                },
                {
                    "date": 1745648544014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { Picker } from \"@react-native-picker/picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Driver\");\r\n+  const [role, setRole] = useState(\"\");\r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n"
                },
                {
                    "date": 1745648561572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { Picker } from \"@react-native-picker/picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"\");\r\n+  const [role, setRole] = useState(\"Driver\");\r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n"
                },
                {
                    "date": 1745648567593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { Picker } from \"@react-native-picker/picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Driver\");\r\n+  const [role, setRole] = useState(\"Both\");\r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n"
                },
                {
                    "date": 1745648573494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { Picker } from \"@react-native-picker/picker\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n-  const [role, setRole] = useState(\"Both\");\r\n+  const [role, setRole] = useState(\"Driver\");\r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n   const [todaName, setTodaName] = useState(\"\");\r\n"
                },
                {
                    "date": 1745648702393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n               display=\"default\"\r\n               onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n             />\r\n           )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setOperatorPhone} />\r\n         </>\r\n       )}\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n"
                },
                {
                    "date": 1745648755691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n               display=\"default\"\r\n               onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n             />\r\n           )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setOperatorPhone} />\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} />\r\n         </>\r\n       )}\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n"
                },
                {
                    "date": 1745648926299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n-import { Picker } from \"@react-native-picker/picker\";\r\n+import { MaterialIcons } from \"@expo/vector-icons\";\r\n import API_BASE_URL from \"../../config\";\r\n \r\n export default function DriverRegister() {\r\n   const [role, setRole] = useState(\"Driver\");\r\n@@ -178,8 +178,9 @@\n       >\r\n         <Text style={{ fontSize: 14, color: role ? \"#000\" : \"#888\" }}>\r\n           {role || \"Pumili ng Role\"}\r\n         </Text>\r\n+        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n       </TouchableOpacity>\r\n       {/* Operator Info */}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n         <Text style={styles.header}>Operator Information</Text>\r\n"
                },
                {
                    "date": 1745648986339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,15 +363,18 @@\n     marginBottom: 10,\r\n     borderRadius: 10,\r\n   },\r\n   customPicker: {\r\n+    flexDirection: 'row',\r\n     borderWidth: 1,\r\n     borderColor: \"#ccc\",\r\n     borderRadius: 10,\r\n     paddingVertical: 10,\r\n     paddingHorizontal: 12,\r\n     backgroundColor: \"#fff\",\r\n     marginBottom: 10,\r\n+    justifyContent: \"space-between\", \r\n+    alignItems: \"center\"\r\n   },\r\n   \r\n   modalOverlay: {\r\n     flex: 1,\r\n"
                },
                {
                    "date": 1745649195508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n       <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n       <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-        <Text>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+        <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"#888\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n       </TouchableOpacity>\r\n       {showOperatorDate && (\r\n         <DateTimePicker\r\n           value={new Date()}\r\n"
                },
                {
                    "date": 1745649237469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,8 +242,9 @@\n       >\r\n         <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n           {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n         </Text>\r\n+        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n       </TouchableOpacity>\r\n \r\n       {/* Registration Info */}\r\n       <Text style={styles.header}>Franchise & Voting Info</Text>\r\n"
                },
                {
                    "date": 1745649249703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,8 +259,9 @@\n       >\r\n         <Text style={{ fontSize: 14, color: sector ? \"#000\" : \"#888\" }}>\r\n           {sector || \"Pumili ng Sector\"}\r\n         </Text>\r\n+        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n       </TouchableOpacity>\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n         onPress={() => {\r\n"
                },
                {
                    "date": 1745649258899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,8 +271,9 @@\n       >\r\n         <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n           {isLucenaVoter || \"Botante ng Lucena?\"}\r\n         </Text>\r\n+        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n       </TouchableOpacity>\r\n       <TextInput style={styles.input} placeholder=\"Kung Hindi saan Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n       {/* Account Info */}\r\n"
                },
                {
                    "date": 1745649444849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n           {isLucenaVoter || \"Botante ng Lucena?\"}\r\n         </Text>\r\n         <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n       </TouchableOpacity>\r\n-      <TextInput style={styles.input} placeholder=\"Kung Hindi saan Lugar ng Boto\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+      <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n       {/* Account Info */}\r\n       <Text style={styles.header}>Account</Text>\r\n       <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n"
                },
                {
                    "date": 1745649470578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,9 @@\n           setModalVisible(true);\r\n         }}\r\n       >\r\n         <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n-          {isLucenaVoter || \"Botante ng Lucena?\"}\r\n+          {isLucenaVoter || \"Ikaw ba ay botante ng Lungsod ng Lucena\"}\r\n         </Text>\r\n         <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n       </TouchableOpacity>\r\n       <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n"
                },
                {
                    "date": 1745649595175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,9 @@\n           setModalVisible(true);\r\n         }}\r\n       >\r\n         <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n-          {isLucenaVoter || \"Ikaw ba ay botante ng Lungsod ng Lucena\"}\r\n+          {isLucenaVoter || \"Ikaw ba ay botante ng Lucena city?\"}\r\n         </Text>\r\n         <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n       </TouchableOpacity>\r\n       <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n"
                },
                {
                    "date": 1745649677585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n       <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n       <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-        <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"#888\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+        <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"gray\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n       </TouchableOpacity>\r\n       {showOperatorDate && (\r\n         <DateTimePicker\r\n           value={new Date()}\r\n"
                },
                {
                    "date": 1745649693082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n       <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n       <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n       <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n       <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-        <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"gray\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+        <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"#888\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n       </TouchableOpacity>\r\n       {showOperatorDate && (\r\n         <DateTimePicker\r\n           value={new Date()}\r\n"
                },
                {
                    "date": 1745649734848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n           <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n           <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n           <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n           <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-            <Text>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n+            <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n           </TouchableOpacity>\r\n           {showDriverDate && (\r\n             <DateTimePicker\r\n               value={new Date()}\r\n"
                },
                {
                    "date": 1745649754388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n           <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n           <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n           <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n           <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-            <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n+            <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Kelan and Birthdate\"}</Text>\r\n           </TouchableOpacity>\r\n           {showDriverDate && (\r\n             <DateTimePicker\r\n               value={new Date()}\r\n"
                },
                {
                    "date": 1745649804861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n           <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n           <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n           <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n           <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-            <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Kelan and Birthdate\"}</Text>\r\n+            <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n           </TouchableOpacity>\r\n           {showDriverDate && (\r\n             <DateTimePicker\r\n               value={new Date()}\r\n"
                },
                {
                    "date": 1745650189337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n               display=\"default\"\r\n               onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n             />\r\n           )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} />\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} keyboardType=\"phone-pad\"/>\r\n         </>\r\n       )}\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n"
                },
                {
                    "date": 1745650594867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,12 +203,12 @@\n           onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n         />\r\n       )}\r\n       {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+        <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\" />\r\n       )}\r\n       {(role === \"Both\") && (\r\n-        <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} />\r\n+        <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n       )}\r\n       \r\n \r\n       {/* Driver Info */}\r\n@@ -229,9 +229,9 @@\n               display=\"default\"\r\n               onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n             />\r\n           )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} keyboardType=\"phone-pad\"/>\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n         </>\r\n       )}\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n"
                },
                {
                    "date": 1745650705981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,9 +247,9 @@\n       </TouchableOpacity>\r\n \r\n       {/* Registration Info */}\r\n       <Text style={styles.header}>Franchise & Voting Info</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} />\r\n+      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} keyboardType=\"phone-pad\" />\r\n       <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n         onPress={() => {\r\n"
                },
                {
                    "date": 1745651357140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,11 +101,15 @@\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n     formData.append(\"votingLocation\", votingLocation);\r\n-    formData.append(\"email\", email);\r\n-    formData.append(\"password\", password);\r\n+    formData.append(\"driverPassword\", password);  // Driver password\r\n+    formData.append(\"operatorPassword\", password);  // Operator password\r\n \r\n+    formData.append(\"driverEmail\", email);  // Driver email\r\n+    formData.append(\"operatorEmail\", email);  // Operator email\r\n+\r\n+\r\n     formData.append(\"operatorFirstName\", operatorFirstName);\r\n     formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n     formData.append(\"operatorLastName\", operatorLastName);\r\n     formData.append(\"operatorSuffix\", operatorSuffix);\r\n"
                },
                {
                    "date": 1745651412624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,15 +101,20 @@\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n     formData.append(\"votingLocation\", votingLocation);\r\n-    formData.append(\"driverPassword\", password);  // Driver password\r\n-    formData.append(\"operatorPassword\", password);  // Operator password\r\n+    if (role === \"Driver\" || role === \"Both\") {\r\n+      formData.append(\"driverEmail\", email);\r\n+      formData.append(\"driverPassword\", password);\r\n+    }\r\n+    \r\n+    if (role === \"Operator\" || role === \"Both\") {\r\n+      formData.append(\"operatorEmail\", email);\r\n+      formData.append(\"operatorPassword\", password);\r\n+    }\r\n+    \r\n \r\n-    formData.append(\"driverEmail\", email);  // Driver email\r\n-    formData.append(\"operatorEmail\", email);  // Operator email\r\n \r\n-\r\n     formData.append(\"operatorFirstName\", operatorFirstName);\r\n     formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n     formData.append(\"operatorLastName\", operatorLastName);\r\n     formData.append(\"operatorSuffix\", operatorSuffix);\r\n"
                },
                {
                    "date": 1745652621202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,18 +101,12 @@\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n     formData.append(\"votingLocation\", votingLocation);\r\n-    if (role === \"Driver\" || role === \"Both\") {\r\n-      formData.append(\"driverEmail\", email);\r\n-      formData.append(\"driverPassword\", password);\r\n-    }\r\n+    formData.append(\"email\", email);\r\n+formData.append(\"password\", password);\r\n+\r\n     \r\n-    if (role === \"Operator\" || role === \"Both\") {\r\n-      formData.append(\"operatorEmail\", email);\r\n-      formData.append(\"operatorPassword\", password);\r\n-    }\r\n-    \r\n \r\n \r\n     formData.append(\"operatorFirstName\", operatorFirstName);\r\n     formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n"
                },
                {
                    "date": 1745652629991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,13 +102,10 @@\n     formData.append(\"sector\", sector);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n     formData.append(\"votingLocation\", votingLocation);\r\n     formData.append(\"email\", email);\r\n-formData.append(\"password\", password);\r\n+    formData.append(\"password\", password);\r\n \r\n-    \r\n-\r\n-\r\n     formData.append(\"operatorFirstName\", operatorFirstName);\r\n     formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n     formData.append(\"operatorLastName\", operatorLastName);\r\n     formData.append(\"operatorSuffix\", operatorSuffix);\r\n"
                },
                {
                    "date": 1745654243927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,9 @@\n     setFunc(formatted);\r\n   };\r\n \r\n   const handleSubmit = async () => {\r\n+    console.log(\"submit clicked\")\r\n     if (role === \"Both\") {\r\n       setDriverFirstName(operatorFirstName);\r\n       setDriverMiddleName(operatorMiddleName);\r\n       setDriverLastName(operatorLastName);\r\n"
                },
                {
                    "date": 1745654343759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,8 +145,9 @@\n         type: \"image/jpeg\",\r\n       } as any);\r\n \r\n     try {\r\n+      console.log(\"fetching\")\r\n       const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n         method: \"POST\",\r\n         body: formData,\r\n         headers: {\r\n"
                },
                {
                    "date": 1745656348528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,16 +78,8 @@\n   };\r\n \r\n   const handleSubmit = async () => {\r\n     console.log(\"submit clicked\")\r\n-    if (role === \"Both\") {\r\n-      setDriverFirstName(operatorFirstName);\r\n-      setDriverMiddleName(operatorMiddleName);\r\n-      setDriverLastName(operatorLastName);\r\n-      setDriverSuffix(operatorSuffix);\r\n-      setDriverBirthdate(operatorBirthdate);\r\n-      setDriverPhone(operatorPhone);\r\n-    }\r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n       return;\r\n     }\r\n@@ -105,23 +97,27 @@\n     formData.append(\"votingLocation\", votingLocation);\r\n     formData.append(\"email\", email);\r\n     formData.append(\"password\", password);\r\n \r\n-    formData.append(\"operatorFirstName\", operatorFirstName);\r\n-    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n-    formData.append(\"operatorLastName\", operatorLastName);\r\n-    formData.append(\"operatorSuffix\", operatorSuffix);\r\n-    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n-    formData.append(\"operatorPhone\", operatorPhone);\r\n+    if (role === \"Operator\" || role === \"Both\") {\r\n+      formData.append(\"operatorFirstName\", operatorFirstName);\r\n+      formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+      formData.append(\"operatorLastName\", operatorLastName);\r\n+      formData.append(\"operatorSuffix\", operatorSuffix);\r\n+      formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n+      formData.append(\"operatorPhone\", operatorPhone);\r\n+    }\r\n+  \r\n+    if (role === \"Driver\" || role === \"Both\") {\r\n+      formData.append(\"driverFirstName\", role === \"Both\" ? operatorFirstName : driverFirstName);\r\n+      formData.append(\"driverMiddleName\", role === \"Both\" ? operatorMiddleName : driverMiddleName);\r\n+      formData.append(\"driverLastName\", role === \"Both\" ? operatorLastName : driverLastName);\r\n+      formData.append(\"driverSuffix\", role === \"Both\" ? operatorSuffix : driverSuffix);\r\n+      formData.append(\"driverBirthdate\", role === \"Both\" ? operatorBirthdate : driverBirthdate);\r\n+      formData.append(\"driverPhone\", role === \"Both\" ? operatorPhone : driverPhone);\r\n+      formData.append(\"experienceYears\", experienceYears);\r\n+    }\r\n \r\n-    formData.append(\"driverFirstName\", driverFirstName);\r\n-    formData.append(\"driverMiddleName\", driverMiddleName);\r\n-    formData.append(\"driverLastName\", driverLastName);\r\n-    formData.append(\"driverSuffix\", driverSuffix);\r\n-    formData.append(\"driverBirthdate\", driverBirthdate);\r\n-    formData.append(\"driverPhone\", driverPhone);\r\n-    formData.append(\"experienceYears\", experienceYears);\r\n-\r\n     formData.append(\"votersIDImage\", {\r\n       uri: votersIDImage.uri,\r\n       name: \"voter.jpg\",\r\n       type: \"image/jpeg\",\r\n"
                },
                {
                    "date": 1745656375793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,11 +113,11 @@\n       formData.append(\"driverLastName\", role === \"Both\" ? operatorLastName : driverLastName);\r\n       formData.append(\"driverSuffix\", role === \"Both\" ? operatorSuffix : driverSuffix);\r\n       formData.append(\"driverBirthdate\", role === \"Both\" ? operatorBirthdate : driverBirthdate);\r\n       formData.append(\"driverPhone\", role === \"Both\" ? operatorPhone : driverPhone);\r\n-      formData.append(\"experienceYears\", experienceYears);\r\n     }\r\n-\r\n+    \r\n+    formData.append(\"experienceYears\", experienceYears);\r\n     formData.append(\"votersIDImage\", {\r\n       uri: votersIDImage.uri,\r\n       name: \"voter.jpg\",\r\n       type: \"image/jpeg\",\r\n"
                },
                {
                    "date": 1745656443770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n       return;\r\n     }\r\n \r\n     const formData = new FormData();\r\n+    \r\n     formData.append(\"role\", role);\r\n     formData.append(\"franchiseNumber\", franchiseNumber);\r\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n@@ -114,9 +115,9 @@\n       formData.append(\"driverSuffix\", role === \"Both\" ? operatorSuffix : driverSuffix);\r\n       formData.append(\"driverBirthdate\", role === \"Both\" ? operatorBirthdate : driverBirthdate);\r\n       formData.append(\"driverPhone\", role === \"Both\" ? operatorPhone : driverPhone);\r\n     }\r\n-    \r\n+\r\n     formData.append(\"experienceYears\", experienceYears);\r\n     formData.append(\"votersIDImage\", {\r\n       uri: votersIDImage.uri,\r\n       name: \"voter.jpg\",\r\n"
                },
                {
                    "date": 1745740711969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,26 +141,34 @@\n         name: \"selfie.jpg\",\r\n         type: \"image/jpeg\",\r\n       } as any);\r\n \r\n-    try {\r\n-      console.log(\"fetching\")\r\n-      const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n-        method: \"POST\",\r\n-        body: formData,\r\n-        headers: {\r\n-          \"Content-Type\": \"multipart/form-data\",\r\n-        },\r\n-      });\r\n-\r\n-      const text = await res.text();\r\n-      const data = JSON.parse(text);\r\n-      if (res.ok) Alert.alert(\"Success\", data.message);\r\n-      else Alert.alert(\"Error\", data.error);\r\n-    } catch (e) {\r\n-      console.error(\"Driver registration failed:\", e);\r\n-      Alert.alert(\"Error\", \"Network error or server issue\");\r\n-    }\r\n+      try {\r\n+        const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n+          method: \"POST\",\r\n+          body: formData,\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+          },\r\n+        });\r\n+      \r\n+        const text = await res.text();\r\n+      \r\n+        let data;\r\n+        try {\r\n+          data = JSON.parse(text);\r\n+        } catch (e) {\r\n+          console.error(\"Not a JSON response:\", text);\r\n+          throw new Error(text); // handle non-JSON response cleanly\r\n+        }\r\n+      \r\n+        if (res.ok) Alert.alert(\"Success\", data.message || \"Registration successful\");\r\n+        else Alert.alert(\"Error\", data.error || text);\r\n+      \r\n+      } catch (e: any) {\r\n+        console.error(\"Driver registration failed:\", e);\r\n+        Alert.alert(\"Error\", e.message || \"Network error or server issue\");\r\n+      }      \r\n   };\r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n"
                },
                {
                    "date": 1745742359740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,14 @@\n     const formatted = date.toISOString().split(\"T\")[0];\r\n     setFunc(formatted);\r\n   };\r\n \r\n+  const generateProfileID = () => {\r\n+    return Math.random().toString(36).substr(2, 9);  // simple random string\r\n+  };\r\n+  const [profileID] = useState(generateProfileID());\r\n+  \r\n+\r\n   const handleSubmit = async () => {\r\n     console.log(\"submit clicked\")\r\n     if (!votersIDImage) {\r\n       Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n"
                },
                {
                    "date": 1745742377287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,10 @@\n       return;\r\n     }\r\n \r\n     const formData = new FormData();\r\n-    \r\n+\r\n+    formData.append(\"profileID\", profileID);\r\n     formData.append(\"role\", role);\r\n     formData.append(\"franchiseNumber\", franchiseNumber);\r\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n"
                },
                {
                    "date": 1745742415088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n         style={styles.customPicker}\r\n         onPress={() => {\r\n           setSelectedModalType(\"role\");\r\n           setModalVisible(true);\r\n-        }}\r\n+        }}        \r\n       >\r\n         <Text style={{ fontSize: 14, color: role ? \"#000\" : \"#888\" }}>\r\n           {role || \"Pumili ng Role\"}\r\n         </Text>\r\n"
                },
                {
                    "date": 1745742553241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -345,9 +345,19 @@\n                       key={index}\r\n                       style={styles.optionItem}\r\n                       onPress={() => {\r\n                         if (selectedModalType === \"experience\") setExperienceYears(option);\r\n-                        if (selectedModalType === \"role\") setRole(option);\r\n+                        if (selectedModalType === \"role\") {\r\n+                          setRole(option);\r\n+                          if (option === \"Both\") {\r\n+                            setDriverFirstName(operatorFirstName);\r\n+                            setDriverMiddleName(operatorMiddleName);\r\n+                            setDriverLastName(operatorLastName);\r\n+                            setDriverSuffix(operatorSuffix);\r\n+                            setDriverBirthdate(operatorBirthdate);\r\n+                            setDriverPhone(operatorPhone);\r\n+                          }\r\n+                        }\r\n                         if (selectedModalType === \"sector\") setSector(option);\r\n                         if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n                         setModalVisible(false);\r\n                       }}\r\n"
                },
                {
                    "date": 1745742794088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,37 +95,51 @@\n     }\r\n \r\n     const formData = new FormData();\r\n \r\n-    formData.append(\"profileID\", profileID);\r\n-    formData.append(\"role\", role);\r\n+    formData.append(\"profileID\", profileID); // <-- you need to generate this earlier (I'll show later)\r\n+\r\n     formData.append(\"franchiseNumber\", franchiseNumber);\r\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n     formData.append(\"votingLocation\", votingLocation);\r\n-    formData.append(\"email\", email);\r\n-    formData.append(\"password\", password);\r\n \r\n-    if (role === \"Operator\" || role === \"Both\") {\r\n-      formData.append(\"operatorFirstName\", operatorFirstName);\r\n-      formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n-      formData.append(\"operatorLastName\", operatorLastName);\r\n-      formData.append(\"operatorSuffix\", operatorSuffix);\r\n-      formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n-      formData.append(\"operatorPhone\", operatorPhone);\r\n+    // Operator fields\r\n+    formData.append(\"operatorFirstName\", operatorFirstName);\r\n+    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+    formData.append(\"operatorLastName\", operatorLastName);\r\n+    formData.append(\"operatorSuffix\", operatorSuffix);\r\n+    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n+    formData.append(\"operatorPhone\", operatorPhone);\r\n+\r\n+    // Driver fields\r\n+    formData.append(\"driverFirstName\", driverFirstName);\r\n+    formData.append(\"driverMiddleName\", driverMiddleName);\r\n+    formData.append(\"driverLastName\", driverLastName);\r\n+    formData.append(\"driverSuffix\", driverSuffix);\r\n+    formData.append(\"driverBirthdate\", driverBirthdate);\r\n+    formData.append(\"driverPhone\", driverPhone);\r\n+\r\n+    formData.append(\"experienceYears\", experienceYears);\r\n+\r\n+    // 📩 Email/password handling:\r\n+    if (role === \"Driver\") {\r\n+      formData.append(\"driverEmail\", email);\r\n+      formData.append(\"driverPassword\", password);\r\n     }\r\n-  \r\n-    if (role === \"Driver\" || role === \"Both\") {\r\n-      formData.append(\"driverFirstName\", role === \"Both\" ? operatorFirstName : driverFirstName);\r\n-      formData.append(\"driverMiddleName\", role === \"Both\" ? operatorMiddleName : driverMiddleName);\r\n-      formData.append(\"driverLastName\", role === \"Both\" ? operatorLastName : driverLastName);\r\n-      formData.append(\"driverSuffix\", role === \"Both\" ? operatorSuffix : driverSuffix);\r\n-      formData.append(\"driverBirthdate\", role === \"Both\" ? operatorBirthdate : driverBirthdate);\r\n-      formData.append(\"driverPhone\", role === \"Both\" ? operatorPhone : driverPhone);\r\n+\r\n+    if (role === \"Operator\") {\r\n+      formData.append(\"operatorEmail\", email);\r\n+      formData.append(\"operatorPassword\", password);\r\n     }\r\n \r\n-    formData.append(\"experienceYears\", experienceYears);\r\n+    if (role === \"Both\") {\r\n+      formData.append(\"driverEmail\", email);\r\n+      formData.append(\"driverPassword\", password);\r\n+      formData.append(\"operatorEmail\", email);\r\n+      formData.append(\"operatorPassword\", password);\r\n+    }\r\n     formData.append(\"votersIDImage\", {\r\n       uri: votersIDImage.uri,\r\n       name: \"voter.jpg\",\r\n       type: \"image/jpeg\",\r\n"
                },
                {
                    "date": 1745742883561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     setFunc(formatted);\r\n   };\r\n \r\n   const generateProfileID = () => {\r\n-    return Math.random().toString(36).substr(2, 9);  // simple random string\r\n+    return Math.random().toString(36).substring(2, 9) + Date.now(); \r\n   };\r\n   const [profileID] = useState(generateProfileID());\r\n   \r\n \r\n@@ -95,9 +95,9 @@\n     }\r\n \r\n     const formData = new FormData();\r\n \r\n-    formData.append(\"profileID\", profileID); // <-- you need to generate this earlier (I'll show later)\r\n+    formData.append(\"profileID\", profileID); \r\n \r\n     formData.append(\"franchiseNumber\", franchiseNumber);\r\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n"
                },
                {
                    "date": 1745746626842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,13 @@\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import API_BASE_URL from \"../../config\";\r\n+import { useRouter } from \"expo-router\";\r\n \r\n+\r\n export default function DriverRegister() {\r\n+  const router = useRouter();\r\n   const [role, setRole] = useState(\"Driver\");\r\n \r\n   // Shared\r\n   const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n@@ -181,9 +184,18 @@\n           console.error(\"Not a JSON response:\", text);\r\n           throw new Error(text); // handle non-JSON response cleanly\r\n         }\r\n       \r\n-        if (res.ok) Alert.alert(\"Success\", data.message || \"Registration successful\");\r\n+        if (res.ok) {\r\n+          Alert.alert(\"Success\", data.message || \"Registration successful\", [\r\n+            {\r\n+              text: \"OK\",\r\n+              onPress: () => {\r\n+                router.push(\"/login_and_reg/dlogin\"); // 👉 navigate to dlogin.tsx\r\n+              },\r\n+            },\r\n+          ]);\r\n+        }\r\n         else Alert.alert(\"Error\", data.error || text);\r\n       \r\n       } catch (e: any) {\r\n         console.error(\"Driver registration failed:\", e);\r\n"
                },
                {
                    "date": 1745746713302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,8 +339,14 @@\n \r\n       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n         <Text style={styles.buttonText}>Submit</Text>\r\n       </TouchableOpacity>\r\n+      <Text style={styles.signupPrompt}>\r\n+        Don't have an account?{\" \"}\r\n+        <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dregister\")}>\r\n+          Sign Up\r\n+        </Text>\r\n+      </Text>\r\n \r\n \r\n       {/* models */}\r\n       <Modal\r\n@@ -474,5 +480,14 @@\n     borderRadius: 10,\r\n     alignItems: \"center\",\r\n     marginTop: 20,\r\n   },\r\n+  signupPrompt: {\r\n+    textAlign: \"center\",\r\n+    fontSize: 14,\r\n+    color: \"#414141\",\r\n+  },\r\n+  signupLink: {\r\n+    color: \"#5089A3\",\r\n+    fontWeight: \"600\",\r\n+  },\r\n });\r\n"
                },
                {
                    "date": 1745746783112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -340,11 +340,11 @@\n       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n         <Text style={styles.buttonText}>Submit</Text>\r\n       </TouchableOpacity>\r\n       <Text style={styles.signupPrompt}>\r\n-        Don't have an account?{\" \"}\r\n-        <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dregister\")}>\r\n-          Sign Up\r\n+        already have an account?{\" \"}\r\n+        <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dlogin\")}>\r\n+          Log In\r\n         </Text>\r\n       </Text>\r\n \r\n \r\n"
                },
                {
                    "date": 1745746808200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -479,8 +479,9 @@\n     padding: 15,\r\n     borderRadius: 10,\r\n     alignItems: \"center\",\r\n     marginTop: 20,\r\n+    marginBottom: 20,\r\n   },\r\n   signupPrompt: {\r\n     textAlign: \"center\",\r\n     fontSize: 14,\r\n"
                },
                {
                    "date": 1745747076540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,14 +201,34 @@\n         console.error(\"Driver registration failed:\", e);\r\n         Alert.alert(\"Error\", e.message || \"Network error or server issue\");\r\n       }      \r\n   };\r\n+  const UploadItem = ({ label, onPress, uploaded }: { label: string; onPress: () => void; uploaded: boolean }) => (\r\n+    <View style={styles.uploadRow}>\r\n+      <Text style={styles.uploadLabel}>{label}</Text>\r\n+      <TouchableOpacity style={[styles.uploadButton, uploaded && styles.uploaded]} onPress={onPress}>\r\n+        <Text style={styles.uploadButtonText}>UPLOAD</Text>\r\n+      </TouchableOpacity>\r\n+    </View>\r\n+  );\r\n+  \r\n \r\n   return (\r\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n+      <View style={styles.selfieContainer}>\r\n+        <TouchableOpacity onPress={() => pickImage(setSelfieImage)}>\r\n+          {selfieImage ? (\r\n+            <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n+          ) : (\r\n+            <View style={styles.placeholderCircle}>\r\n+              <MaterialIcons name=\"camera-alt\" size={24} color=\"#fff\" />\r\n+            </View>\r\n+          )}\r\n+        </TouchableOpacity>\r\n+      </View>\r\n       <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n       <TouchableOpacity\r\n         style={styles.customPicker}\r\n         onPress={() => {\r\n@@ -323,20 +343,12 @@\n       <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n \r\n       {/* Uploads */}\r\n       <Text style={styles.header}>Uploads</Text>\r\n-      <TouchableOpacity style={[styles.button, votersIDImage && styles.uploaded]} onPress={() => pickImage(setVotersIDImage)}>\r\n-        <Text style={styles.buttonText}>Upload Voter's ID</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, driversLicenseImage && styles.uploaded]} onPress={() => pickImage(setDriversLicenseImage)}>\r\n-        <Text style={styles.buttonText}>Upload License</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, orcrImage && styles.uploaded]} onPress={() => pickImage(setOrcrImage)}>\r\n-        <Text style={styles.buttonText}>Upload OR/CR</Text>\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity style={[styles.button, selfieImage && styles.uploaded]} onPress={() => pickImage(setSelfieImage)}>\r\n-        <Text style={styles.buttonText}>Upload Selfie</Text>\r\n-      </TouchableOpacity>\r\n+      {/* Other Documents Uploads */}\r\n+      <UploadItem label=\"I-upload ang picture ng iyong Voter's ID o Certificate\" onPress={() => pickImage(setVotersIDImage)} uploaded={!!votersIDImage} />\r\n+      <UploadItem label=\"I-upload ang picture ng iyong Driver's License\" onPress={() => pickImage(setDriversLicenseImage)} uploaded={!!driversLicenseImage} />\r\n+      <UploadItem label=\"I-upload ang picture ng OR at CR ng Tricycle\" onPress={() => pickImage(setOrcrImage)} uploaded={!!orcrImage} />\r\n \r\n       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n         <Text style={styles.buttonText}>Submit</Text>\r\n       </TouchableOpacity>\r\n@@ -490,5 +502,43 @@\n   signupLink: {\r\n     color: \"#5089A3\",\r\n     fontWeight: \"600\",\r\n   },\r\n+  selfieContainer: {\r\n+    alignItems: 'center',\r\n+    marginBottom: 20,\r\n+  },\r\n+  placeholderCircle: {\r\n+    width: 120,\r\n+    height: 120,\r\n+    borderRadius: 60,\r\n+    backgroundColor: '#ccc',\r\n+    alignItems: 'center',\r\n+    justifyContent: 'center',\r\n+  },\r\n+  selfieImage: {\r\n+    width: 120,\r\n+    height: 120,\r\n+    borderRadius: 60,\r\n+  },\r\n+  uploadRow: {\r\n+    flexDirection: 'row',\r\n+    justifyContent: 'space-between',\r\n+    alignItems: 'center',\r\n+    marginBottom: 15,\r\n+  },\r\n+  uploadLabel: {\r\n+    flex: 1,\r\n+    fontSize: 14,\r\n+    color: '#333',\r\n+  },\r\n+  uploadButton: {\r\n+    backgroundColor: '#4a90e2',\r\n+    paddingVertical: 8,\r\n+    paddingHorizontal: 20,\r\n+    borderRadius: 20,\r\n+  },\r\n+  uploadButtonText: {\r\n+    color: '#fff',\r\n+    fontWeight: 'bold',\r\n+  },  \r\n });\r\n"
                },
                {
                    "date": 1745747141172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -531,9 +531,9 @@\n     fontSize: 14,\r\n     color: '#333',\r\n   },\r\n   uploadButton: {\r\n-    backgroundColor: '#4a90e2',\r\n+    backgroundColor: '#5089A3',\r\n     paddingVertical: 8,\r\n     paddingHorizontal: 20,\r\n     borderRadius: 20,\r\n   },\r\n"
                },
                {
                    "date": 1745747158372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -486,9 +486,9 @@\n     color: \"#fff\",\r\n     fontWeight: \"bold\",\r\n   },\r\n   submitButton: {\r\n-    backgroundColor: \"#1e90ff\",\r\n+    backgroundColor: \"#5089A3\",\r\n     padding: 15,\r\n     borderRadius: 10,\r\n     alignItems: \"center\",\r\n     marginTop: 20,\r\n"
                },
                {
                    "date": 1745747210083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -539,6 +539,7 @@\n   },\r\n   uploadButtonText: {\r\n     color: '#fff',\r\n     fontWeight: 'bold',\r\n+    fontSize: 14,\r\n   },  \r\n });\r\n"
                },
                {
                    "date": 1745747217496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -538,8 +538,6 @@\n     borderRadius: 20,\r\n   },\r\n   uploadButtonText: {\r\n     color: '#fff',\r\n-    fontWeight: 'bold',\r\n-    fontSize: 14,\r\n   },  \r\n });\r\n"
                },
                {
                    "date": 1745747287916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -532,9 +532,9 @@\n     color: '#333',\r\n   },\r\n   uploadButton: {\r\n     backgroundColor: '#5089A3',\r\n-    paddingVertical: 8,\r\n+    paddingVertical: 3,\r\n     paddingHorizontal: 20,\r\n     borderRadius: 20,\r\n   },\r\n   uploadButtonText: {\r\n"
                },
                {
                    "date": 1745747293963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -532,9 +532,9 @@\n     color: '#333',\r\n   },\r\n   uploadButton: {\r\n     backgroundColor: '#5089A3',\r\n-    paddingVertical: 3,\r\n+    paddingVertical: 4,\r\n     paddingHorizontal: 20,\r\n     borderRadius: 20,\r\n   },\r\n   uploadButtonText: {\r\n"
                },
                {
                    "date": 1745747306516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -534,9 +534,9 @@\n   uploadButton: {\r\n     backgroundColor: '#5089A3',\r\n     paddingVertical: 4,\r\n     paddingHorizontal: 20,\r\n-    borderRadius: 20,\r\n+    borderRadius: 15,\r\n   },\r\n   uploadButtonText: {\r\n     color: '#fff',\r\n   },  \r\n"
                },
                {
                    "date": 1745747324524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,9 +533,9 @@\n   },\r\n   uploadButton: {\r\n     backgroundColor: '#5089A3',\r\n     paddingVertical: 4,\r\n-    paddingHorizontal: 20,\r\n+    paddingHorizontal: 15,\r\n     borderRadius: 15,\r\n   },\r\n   uploadButtonText: {\r\n     color: '#fff',\r\n"
                },
                {
                    "date": 1745747330527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,9 +533,9 @@\n   },\r\n   uploadButton: {\r\n     backgroundColor: '#5089A3',\r\n     paddingVertical: 4,\r\n-    paddingHorizontal: 15,\r\n+    paddingHorizontal: 20,\r\n     borderRadius: 15,\r\n   },\r\n   uploadButtonText: {\r\n     color: '#fff',\r\n"
                },
                {
                    "date": 1745747491258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,8 +216,15 @@\n     <ScrollView contentContainerStyle={styles.container}>\r\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n+      <View style={styles.headerBar}>\r\n+        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n+          <Text style={styles.backText}>‹ Back</Text>\r\n+        </TouchableOpacity>\r\n+        <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n+      </View>\r\n+\r\n       <View style={styles.selfieContainer}>\r\n         <TouchableOpacity onPress={() => pickImage(setSelfieImage)}>\r\n           {selfieImage ? (\r\n             <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n@@ -423,8 +430,27 @@\n }\r\n \r\n const styles = StyleSheet.create({\r\n   container: { padding: 20 },\r\n+  headerBar: {\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n+    paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n+    paddingBottom: 15,\r\n+    paddingHorizontal: 15,\r\n+    backgroundColor: '#fff',\r\n+  },\r\n+  backText: {\r\n+    fontSize: 16,\r\n+    color: '#555',\r\n+    marginRight: 20,\r\n+  },\r\n+  headerTitle: {\r\n+    fontSize: 18,\r\n+    fontWeight: 'bold',\r\n+    color: '#333',\r\n+  },\r\n+  \r\n   title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n   header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n   input: {\r\n     backgroundColor: \"#fff\",\r\n"
                },
                {
                    "date": 1745747515432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,14 @@\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import API_BASE_URL from \"../../config\";\r\n import { useRouter } from \"expo-router\";\r\n+import { useNavigation } from \"@react-navigation/native\";\r\n \r\n \r\n+\r\n export default function DriverRegister() {\r\n+  const navigation = useNavigation();\r\n   const router = useRouter();\r\n   const [role, setRole] = useState(\"Driver\");\r\n \r\n   // Shared\r\n"
                },
                {
                    "date": 1745747549653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -432,9 +432,8 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: { padding: 20 },\r\n   headerBar: {\r\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n     paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n"
                },
                {
                    "date": 1745747642499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,218 +215,221 @@\n   );\r\n   \r\n \r\n   return (\r\n-    <ScrollView contentContainerStyle={styles.container}>\r\n+    <ScrollView>\r\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n-      <View style={styles.headerBar}>\r\n-        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n-          <Text style={styles.backText}>‹ Back</Text>\r\n+      <View style={{padding: 20}}>\r\n+        <View style={styles.headerBar}>\r\n+          <TouchableOpacity onPress={() => navigation.goBack()}>\r\n+            <Text style={styles.backText}>‹ Back</Text>\r\n+          </TouchableOpacity>\r\n+          <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n+        </View>\r\n+\r\n+        <View style={styles.selfieContainer}>\r\n+          <TouchableOpacity onPress={() => pickImage(setSelfieImage)}>\r\n+            {selfieImage ? (\r\n+              <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n+            ) : (\r\n+              <View style={styles.placeholderCircle}>\r\n+                <MaterialIcons name=\"camera-alt\" size={24} color=\"#fff\" />\r\n+              </View>\r\n+            )}\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+        <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"role\");\r\n+            setModalVisible(true);\r\n+          }}        \r\n+        >\r\n+          <Text style={{ fontSize: 14, color: role ? \"#000\" : \"#888\" }}>\r\n+            {role || \"Pumili ng Role\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n         </TouchableOpacity>\r\n-        <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n-      </View>\r\n+        {/* Operator Info */}\r\n+        {(role === \"Operator\" || role === \"Driver\") && (\r\n+          <Text style={styles.header}>Operator Information</Text>\r\n+        )}\r\n+        {(role === \"Both\") && (\r\n+          <Text style={styles.header}>Personal Information</Text>\r\n+        )}\r\n+        <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n+        <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n+        <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n+        <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+        <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n+          <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"#888\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+        </TouchableOpacity>\r\n+        {showOperatorDate && (\r\n+          <DateTimePicker\r\n+            value={new Date()}\r\n+            mode=\"date\"\r\n+            display=\"default\"\r\n+            onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n+          />\r\n+        )}\r\n+        {(role === \"Operator\" || role === \"Driver\") && (\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\" />\r\n+        )}\r\n+        {(role === \"Both\") && (\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n+        )}\r\n+        \r\n \r\n-      <View style={styles.selfieContainer}>\r\n-        <TouchableOpacity onPress={() => pickImage(setSelfieImage)}>\r\n-          {selfieImage ? (\r\n-            <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n-          ) : (\r\n-            <View style={styles.placeholderCircle}>\r\n-              <MaterialIcons name=\"camera-alt\" size={24} color=\"#fff\" />\r\n-            </View>\r\n-          )}\r\n+        {/* Driver Info */}\r\n+        {(role === \"Operator\" || role === \"Driver\") && (\r\n+          <>\r\n+            <Text style={styles.header}>Driver Information</Text>\r\n+            <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n+            <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n+            <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n+            <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+            <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n+              <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n+            </TouchableOpacity>\r\n+            {showDriverDate && (\r\n+              <DateTimePicker\r\n+                value={new Date()}\r\n+                mode=\"date\"\r\n+                display=\"default\"\r\n+                onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n+              />\r\n+            )}\r\n+            <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n+          </>\r\n+        )}\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"experience\");\r\n+            setModalVisible(true);\r\n+          }}\r\n+        >\r\n+          <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n+            {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n         </TouchableOpacity>\r\n-      </View>\r\n-      <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n-      <TouchableOpacity\r\n-        style={styles.customPicker}\r\n-        onPress={() => {\r\n-          setSelectedModalType(\"role\");\r\n-          setModalVisible(true);\r\n-        }}        \r\n-      >\r\n-        <Text style={{ fontSize: 14, color: role ? \"#000\" : \"#888\" }}>\r\n-          {role || \"Pumili ng Role\"}\r\n-        </Text>\r\n-        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-      </TouchableOpacity>\r\n-      {/* Operator Info */}\r\n-      {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <Text style={styles.header}>Operator Information</Text>\r\n-      )}\r\n-      {(role === \"Both\") && (\r\n-        <Text style={styles.header}>Personal Information</Text>\r\n-      )}\r\n-      <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n-      <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n-      <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n-      <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n-      <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-        <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"#888\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n-      </TouchableOpacity>\r\n-      {showOperatorDate && (\r\n-        <DateTimePicker\r\n-          value={new Date()}\r\n-          mode=\"date\"\r\n-          display=\"default\"\r\n-          onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n-        />\r\n-      )}\r\n-      {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\" />\r\n-      )}\r\n-      {(role === \"Both\") && (\r\n-        <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n-      )}\r\n-      \r\n \r\n-      {/* Driver Info */}\r\n-      {(role === \"Operator\" || role === \"Driver\") && (\r\n-        <>\r\n-          <Text style={styles.header}>Driver Information</Text>\r\n-          <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n-          <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n-          <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n-          <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n-          <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-            <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n-          </TouchableOpacity>\r\n-          {showDriverDate && (\r\n-            <DateTimePicker\r\n-              value={new Date()}\r\n-              mode=\"date\"\r\n-              display=\"default\"\r\n-              onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n-            />\r\n-          )}\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n-        </>\r\n-      )}\r\n-      <TouchableOpacity\r\n-        style={styles.customPicker}\r\n-        onPress={() => {\r\n-          setSelectedModalType(\"experience\");\r\n-          setModalVisible(true);\r\n-        }}\r\n-      >\r\n-        <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n-          {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n-        </Text>\r\n-        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-      </TouchableOpacity>\r\n+        {/* Registration Info */}\r\n+        <Text style={styles.header}>Franchise & Voting Info</Text>\r\n+        <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} keyboardType=\"phone-pad\" />\r\n+        <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"sector\");\r\n+            setModalVisible(true);\r\n+          }}\r\n+        >\r\n+          <Text style={{ fontSize: 14, color: sector ? \"#000\" : \"#888\" }}>\r\n+            {sector || \"Pumili ng Sector\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"voter\");\r\n+            setModalVisible(true);\r\n+          }}\r\n+        >\r\n+          <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n+            {isLucenaVoter || \"Ikaw ba ay botante ng Lucena city?\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n+        </TouchableOpacity>\r\n+        <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n-      {/* Registration Info */}\r\n-      <Text style={styles.header}>Franchise & Voting Info</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} keyboardType=\"phone-pad\" />\r\n-      <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-      <TouchableOpacity\r\n-        style={styles.customPicker}\r\n-        onPress={() => {\r\n-          setSelectedModalType(\"sector\");\r\n-          setModalVisible(true);\r\n-        }}\r\n-      >\r\n-        <Text style={{ fontSize: 14, color: sector ? \"#000\" : \"#888\" }}>\r\n-          {sector || \"Pumili ng Sector\"}\r\n-        </Text>\r\n-        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-      </TouchableOpacity>\r\n-      <TouchableOpacity\r\n-        style={styles.customPicker}\r\n-        onPress={() => {\r\n-          setSelectedModalType(\"voter\");\r\n-          setModalVisible(true);\r\n-        }}\r\n-      >\r\n-        <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n-          {isLucenaVoter || \"Ikaw ba ay botante ng Lucena city?\"}\r\n-        </Text>\r\n-        <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-      </TouchableOpacity>\r\n-      <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+        {/* Account Info */}\r\n+        <Text style={styles.header}>Account</Text>\r\n+        <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+        <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n+        <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n \r\n-      {/* Account Info */}\r\n-      <Text style={styles.header}>Account</Text>\r\n-      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n-      <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n-      <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n+        {/* Uploads */}\r\n+        <Text style={styles.header}>Uploads</Text>\r\n+        {/* Other Documents Uploads */}\r\n+        <UploadItem label=\"I-upload ang picture ng iyong Voter's ID o Certificate\" onPress={() => pickImage(setVotersIDImage)} uploaded={!!votersIDImage} />\r\n+        <UploadItem label=\"I-upload ang picture ng iyong Driver's License\" onPress={() => pickImage(setDriversLicenseImage)} uploaded={!!driversLicenseImage} />\r\n+        <UploadItem label=\"I-upload ang picture ng OR at CR ng Tricycle\" onPress={() => pickImage(setOrcrImage)} uploaded={!!orcrImage} />\r\n \r\n-      {/* Uploads */}\r\n-      <Text style={styles.header}>Uploads</Text>\r\n-      {/* Other Documents Uploads */}\r\n-      <UploadItem label=\"I-upload ang picture ng iyong Voter's ID o Certificate\" onPress={() => pickImage(setVotersIDImage)} uploaded={!!votersIDImage} />\r\n-      <UploadItem label=\"I-upload ang picture ng iyong Driver's License\" onPress={() => pickImage(setDriversLicenseImage)} uploaded={!!driversLicenseImage} />\r\n-      <UploadItem label=\"I-upload ang picture ng OR at CR ng Tricycle\" onPress={() => pickImage(setOrcrImage)} uploaded={!!orcrImage} />\r\n-\r\n-      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n-        <Text style={styles.buttonText}>Submit</Text>\r\n-      </TouchableOpacity>\r\n-      <Text style={styles.signupPrompt}>\r\n-        already have an account?{\" \"}\r\n-        <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dlogin\")}>\r\n-          Log In\r\n+        <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n+          <Text style={styles.buttonText}>Submit</Text>\r\n+        </TouchableOpacity>\r\n+        <Text style={styles.signupPrompt}>\r\n+          already have an account?{\" \"}\r\n+          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dlogin\")}>\r\n+            Log In\r\n+          </Text>\r\n         </Text>\r\n-      </Text>\r\n \r\n \r\n-      {/* models */}\r\n-      <Modal\r\n-        animationType=\"fade\"\r\n-        transparent={true}\r\n-        visible={modalVisible}\r\n-        onRequestClose={() => setModalVisible(false)}\r\n-      >\r\n-        <TouchableOpacity\r\n-          style={styles.modalOverlay}\r\n-          activeOpacity={1}\r\n-          onPressOut={() => setModalVisible(false)}\r\n+        {/* models */}\r\n+        <Modal\r\n+          animationType=\"fade\"\r\n+          transparent={true}\r\n+          visible={modalVisible}\r\n+          onRequestClose={() => setModalVisible(false)}\r\n         >\r\n-          <View style={styles.modalContent}>\r\n-            {/* Modal Picker Content */}\r\n-            {(() => {\r\n-              let xdata: string[] = [];\r\n+          <TouchableOpacity\r\n+            style={styles.modalOverlay}\r\n+            activeOpacity={1}\r\n+            onPressOut={() => setModalVisible(false)}\r\n+          >\r\n+            <View style={styles.modalContent}>\r\n+              {/* Modal Picker Content */}\r\n+              {(() => {\r\n+                let xdata: string[] = [];\r\n \r\n-              if (selectedModalType === \"experience\") xdata = experienceOptions;\r\n-              else if (selectedModalType === \"role\") xdata = roles;\r\n-              else if (selectedModalType === \"sector\") xdata = sectors;\r\n-              else if (selectedModalType === \"voter\") xdata = voterOptions;\r\n+                if (selectedModalType === \"experience\") xdata = experienceOptions;\r\n+                else if (selectedModalType === \"role\") xdata = roles;\r\n+                else if (selectedModalType === \"sector\") xdata = sectors;\r\n+                else if (selectedModalType === \"voter\") xdata = voterOptions;\r\n \r\n-              return (\r\n-                <>\r\n-                  {xdata.map((option, index) => (\r\n-                    <TouchableOpacity\r\n-                      key={index}\r\n-                      style={styles.optionItem}\r\n-                      onPress={() => {\r\n-                        if (selectedModalType === \"experience\") setExperienceYears(option);\r\n-                        if (selectedModalType === \"role\") {\r\n-                          setRole(option);\r\n-                          if (option === \"Both\") {\r\n-                            setDriverFirstName(operatorFirstName);\r\n-                            setDriverMiddleName(operatorMiddleName);\r\n-                            setDriverLastName(operatorLastName);\r\n-                            setDriverSuffix(operatorSuffix);\r\n-                            setDriverBirthdate(operatorBirthdate);\r\n-                            setDriverPhone(operatorPhone);\r\n+                return (\r\n+                  <>\r\n+                    {xdata.map((option, index) => (\r\n+                      <TouchableOpacity\r\n+                        key={index}\r\n+                        style={styles.optionItem}\r\n+                        onPress={() => {\r\n+                          if (selectedModalType === \"experience\") setExperienceYears(option);\r\n+                          if (selectedModalType === \"role\") {\r\n+                            setRole(option);\r\n+                            if (option === \"Both\") {\r\n+                              setDriverFirstName(operatorFirstName);\r\n+                              setDriverMiddleName(operatorMiddleName);\r\n+                              setDriverLastName(operatorLastName);\r\n+                              setDriverSuffix(operatorSuffix);\r\n+                              setDriverBirthdate(operatorBirthdate);\r\n+                              setDriverPhone(operatorPhone);\r\n+                            }\r\n                           }\r\n-                        }\r\n-                        if (selectedModalType === \"sector\") setSector(option);\r\n-                        if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n-                        setModalVisible(false);\r\n-                      }}\r\n-                    >\r\n-                      <Text style={styles.optionText}>{option}</Text>\r\n-                    </TouchableOpacity>\r\n-                  ))}\r\n-                </>\r\n-              );\r\n-            })()}\r\n-          </View>\r\n-        </TouchableOpacity>\r\n-      </Modal>\r\n+                          if (selectedModalType === \"sector\") setSector(option);\r\n+                          if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n+                          setModalVisible(false);\r\n+                        }}\r\n+                      >\r\n+                        <Text style={styles.optionText}>{option}</Text>\r\n+                      </TouchableOpacity>\r\n+                    ))}\r\n+                  </>\r\n+                );\r\n+              })()}\r\n+            </View>\r\n+          </TouchableOpacity>\r\n+        </Modal>\r\n \r\n+      </View>\r\n+      \r\n \r\n \r\n     </ScrollView>\r\n   );\r\n"
                },
                {
                    "date": 1745747661135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,16 +219,15 @@\n     <ScrollView>\r\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n+      <View style={styles.headerBar}>\r\n+        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n+          <Text style={styles.backText}>‹ Back</Text>\r\n+        </TouchableOpacity>\r\n+        <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n+      </View>\r\n       <View style={{padding: 20}}>\r\n-        <View style={styles.headerBar}>\r\n-          <TouchableOpacity onPress={() => navigation.goBack()}>\r\n-            <Text style={styles.backText}>‹ Back</Text>\r\n-          </TouchableOpacity>\r\n-          <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n-        </View>\r\n-\r\n         <View style={styles.selfieContainer}>\r\n           <TouchableOpacity onPress={() => pickImage(setSelfieImage)}>\r\n             {selfieImage ? (\r\n               <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n"
                },
                {
                    "date": 1745747699849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -451,8 +451,9 @@\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n     color: '#333',\r\n+    textAlign: \"center\",\r\n   },\r\n   \r\n   title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n   header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745747735903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -445,9 +445,9 @@\n   },\r\n   backText: {\r\n     fontSize: 16,\r\n     color: '#555',\r\n-    marginRight: 20,\r\n+    width: \"100%\"\r\n   },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n"
                },
                {
                    "date": 1745747786366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useState } from \"react\";\r\n-import { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList } from \"react-native\";\r\n+import { View, Text, TextInput, Dimensions ,TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import API_BASE_URL from \"../../config\";\r\n import { useRouter } from \"expo-router\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n+const { width } = Dimensions.get('window');\r\n \r\n \r\n-\r\n export default function DriverRegister() {\r\n   const navigation = useNavigation();\r\n   const router = useRouter();\r\n   const [role, setRole] = useState(\"Driver\");\r\n"
                },
                {
                    "date": 1745747816284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -445,9 +445,9 @@\n   },\r\n   backText: {\r\n     fontSize: 16,\r\n     color: '#555',\r\n-    width: \"100%\"\r\n+    width: 100,\r\n   },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n"
                },
                {
                    "date": 1745747850026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -452,8 +452,10 @@\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n     color: '#333',\r\n     textAlign: \"center\",\r\n+    width: width,\r\n+    marginLeft: -100,\r\n   },\r\n   \r\n   title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n   header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745748084044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -445,9 +445,8 @@\n   },\r\n   backText: {\r\n     fontSize: 16,\r\n     color: '#555',\r\n-    width: 100,\r\n   },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n"
                },
                {
                    "date": 1745748116423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,11 +220,8 @@\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <View style={styles.headerBar}>\r\n-        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n-          <Text style={styles.backText}>‹ Back</Text>\r\n-        </TouchableOpacity>\r\n         <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n       </View>\r\n       <View style={{padding: 20}}>\r\n         <View style={styles.selfieContainer}>\r\n"
                },
                {
                    "date": 1745748170765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -439,19 +439,14 @@\n     paddingBottom: 15,\r\n     paddingHorizontal: 15,\r\n     backgroundColor: '#fff',\r\n   },\r\n-  backText: {\r\n-    fontSize: 16,\r\n-    color: '#555',\r\n-  },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n     color: '#333',\r\n     textAlign: \"center\",\r\n     width: width,\r\n-    marginLeft: -100,\r\n   },\r\n   \r\n   title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n   header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745748184476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -443,10 +443,8 @@\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n     color: '#333',\r\n-    textAlign: \"center\",\r\n-    width: width,\r\n   },\r\n   \r\n   title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n   header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745748202760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -438,8 +438,9 @@\n     paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n     paddingBottom: 15,\r\n     paddingHorizontal: 15,\r\n     backgroundColor: '#fff',\r\n+    textAlign: \"center\",\r\n   },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n"
                },
                {
                    "date": 1745748221595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,8 +444,9 @@\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n     color: '#333',\r\n+    width: width\r\n   },\r\n   \r\n   title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n   header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745748237271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -436,9 +436,8 @@\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n     paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n     paddingBottom: 15,\r\n-    paddingHorizontal: 15,\r\n     backgroundColor: '#fff',\r\n     textAlign: \"center\",\r\n   },\r\n   headerTitle: {\r\n"
                },
                {
                    "date": 1745748253458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -443,9 +443,10 @@\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n     color: '#333',\r\n-    width: width\r\n+    width: width,\r\n+    textAlign: 'center'\r\n   },\r\n   \r\n   title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n   header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n"
                },
                {
                    "date": 1745748285806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -437,14 +437,13 @@\n     alignItems: 'center',\r\n     paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n     paddingBottom: 15,\r\n     backgroundColor: '#fff',\r\n-    textAlign: \"center\",\r\n   },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n-    color: '#333',\r\n+    color: '#414141',\r\n     width: width,\r\n     textAlign: 'center'\r\n   },\r\n   \r\n"
                },
                {
                    "date": 1745748350443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -534,10 +534,10 @@\n     width: 120,\r\n     height: 120,\r\n     borderRadius: 60,\r\n     backgroundColor: '#ccc',\r\n-    alignItems: 'center',\r\n-    justifyContent: 'center',\r\n+    alignItems: 'flex-end',\r\n+    justifyContent: 'flex-end',\r\n   },\r\n   selfieImage: {\r\n     width: 120,\r\n     height: 120,\r\n"
                },
                {
                    "date": 1745748407052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,9 +533,9 @@\n   placeholderCircle: {\r\n     width: 120,\r\n     height: 120,\r\n     borderRadius: 60,\r\n-    backgroundColor: '#ccc',\r\n+    backgroundColor: '#5089A3',\r\n     alignItems: 'flex-end',\r\n     justifyContent: 'flex-end',\r\n   },\r\n   selfieImage: {\r\n"
                },
                {
                    "date": 1745748417047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,9 +533,9 @@\n   placeholderCircle: {\r\n     width: 120,\r\n     height: 120,\r\n     borderRadius: 60,\r\n-    backgroundColor: '#5089A3',\r\n+    backgroundColor: '#D0D0D0',\r\n     alignItems: 'flex-end',\r\n     justifyContent: 'flex-end',\r\n   },\r\n   selfieImage: {\r\n"
                },
                {
                    "date": 1745748427044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -530,10 +530,10 @@\n     alignItems: 'center',\r\n     marginBottom: 20,\r\n   },\r\n   placeholderCircle: {\r\n-    width: 120,\r\n-    height: 120,\r\n+    width: 100,\r\n+    height: 100,\r\n     borderRadius: 60,\r\n     backgroundColor: '#D0D0D0',\r\n     alignItems: 'flex-end',\r\n     justifyContent: 'flex-end',\r\n"
                },
                {
                    "date": 1745748511666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n             {selfieImage ? (\r\n               <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n             ) : (\r\n               <View style={styles.placeholderCircle}>\r\n-                <MaterialIcons name=\"camera-alt\" size={24} color=\"#fff\" />\r\n+                <MaterialIcons name=\"camera-alt\" size={24} color=\"#fff\" style={styles.icon} />\r\n               </View>\r\n             )}\r\n           </TouchableOpacity>\r\n         </View>\r\n@@ -537,8 +537,12 @@\n     backgroundColor: '#D0D0D0',\r\n     alignItems: 'flex-end',\r\n     justifyContent: 'flex-end',\r\n   },\r\n+  icon: {\r\n+    borderRadius: 50,\r\n+    backgroundColor: \"#5089A3\"\r\n+  },\r\n   selfieImage: {\r\n     width: 120,\r\n     height: 120,\r\n     borderRadius: 60,\r\n"
                },
                {
                    "date": 1745748529880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -539,9 +539,10 @@\n     justifyContent: 'flex-end',\r\n   },\r\n   icon: {\r\n     borderRadius: 50,\r\n-    backgroundColor: \"#5089A3\"\r\n+    backgroundColor: \"#5089A3\",\r\n+    padding: 5,\r\n   },\r\n   selfieImage: {\r\n     width: 120,\r\n     height: 120,\r\n"
                },
                {
                    "date": 1745748542613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n             {selfieImage ? (\r\n               <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n             ) : (\r\n               <View style={styles.placeholderCircle}>\r\n-                <MaterialIcons name=\"camera-alt\" size={24} color=\"#fff\" style={styles.icon} />\r\n+                <MaterialIcons name=\"camera-alt\" size={10} color=\"#fff\" style={styles.icon} />\r\n               </View>\r\n             )}\r\n           </TouchableOpacity>\r\n         </View>\r\n"
                },
                {
                    "date": 1745748548782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n             {selfieImage ? (\r\n               <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n             ) : (\r\n               <View style={styles.placeholderCircle}>\r\n-                <MaterialIcons name=\"camera-alt\" size={10} color=\"#fff\" style={styles.icon} />\r\n+                <MaterialIcons name=\"camera-alt\" size={15} color=\"#fff\" style={styles.icon} />\r\n               </View>\r\n             )}\r\n           </TouchableOpacity>\r\n         </View>\r\n"
                },
                {
                    "date": 1745748560644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n             {selfieImage ? (\r\n               <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n             ) : (\r\n               <View style={styles.placeholderCircle}>\r\n-                <MaterialIcons name=\"camera-alt\" size={15} color=\"#fff\" style={styles.icon} />\r\n+                <MaterialIcons name=\"camera-alt\" size={20} color=\"#fff\" style={styles.icon} />\r\n               </View>\r\n             )}\r\n           </TouchableOpacity>\r\n         </View>\r\n"
                },
                {
                    "date": 1745748726970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -344,9 +344,9 @@\n         <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n \r\n         {/* Account Info */}\r\n         <Text style={styles.header}>Account</Text>\r\n-        <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n+        <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n         <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n         <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n \r\n         {/* Uploads */}\r\n"
                },
                {
                    "date": 1745748796588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -436,9 +436,9 @@\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n     paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n     paddingBottom: 15,\r\n-    backgroundColor: '#fff',\r\n+    backgroundColor: '#313639',\r\n   },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n"
                },
                {
                    "date": 1745748808927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -436,9 +436,9 @@\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n     paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n     paddingBottom: 15,\r\n-    backgroundColor: '#313639',\r\n+    backgroundColor: '#f2f2f2',\r\n   },\r\n   headerTitle: {\r\n     fontSize: 18,\r\n     fontWeight: 'bold',\r\n"
                },
                {
                    "date": 1745748908096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,10 +364,25 @@\n           <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dlogin\")}>\r\n             Log In\r\n           </Text>\r\n         </Text>\r\n+        <View style={styles.footerTextContainer}>\r\n+          <Text style={styles.agreementText}>\r\n+            By signing up, you agree to the \r\n+            <Text style={styles.linkText}> Terms of service </Text>\r\n+            and \r\n+            <Text style={styles.linkText}> Privacy policy.</Text>\r\n+          </Text>\r\n \r\n+          <Text style={styles.helpTitle}>\r\n+            {\"\\n\"}Kaylangan ng tulong sa registration?\r\n+          </Text>\r\n+          <Text style={styles.helpSubtitle}>\r\n+            Pumunta sa TFRO - Lucena Office upang magpaturo\r\n+          </Text>\r\n+        </View>\r\n \r\n+\r\n         {/* models */}\r\n         <Modal\r\n           animationType=\"fade\"\r\n           transparent={true}\r\n@@ -567,5 +582,32 @@\n   },\r\n   uploadButtonText: {\r\n     color: '#fff',\r\n   },  \r\n+  footerTextContainer: {\r\n+    marginTop: 20,\r\n+    alignItems: \"center\",\r\n+    paddingHorizontal: 20,\r\n+  },\r\n+  agreementText: {\r\n+    fontSize: 12,\r\n+    color: \"#999\",\r\n+    textAlign: \"center\",\r\n+  },\r\n+  linkText: {\r\n+    color: \"#1e90ff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  helpTitle: {\r\n+    fontSize: 16,\r\n+    fontWeight: \"bold\",\r\n+    color: \"#000\",\r\n+    marginTop: 15,\r\n+    textAlign: \"center\",\r\n+  },\r\n+  helpSubtitle: {\r\n+    fontSize: 14,\r\n+    color: \"#333\",\r\n+    textAlign: \"center\",\r\n+    marginTop: 2,\r\n+  },  \r\n });\r\n"
                },
                {
                    "date": 1745748984315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -600,9 +600,8 @@\n   helpTitle: {\r\n     fontSize: 16,\r\n     fontWeight: \"bold\",\r\n     color: \"#000\",\r\n-    marginTop: 15,\r\n     textAlign: \"center\",\r\n   },\r\n   helpSubtitle: {\r\n     fontSize: 14,\r\n"
                },
                {
                    "date": 1745748995825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -603,9 +603,9 @@\n     color: \"#000\",\r\n     textAlign: \"center\",\r\n   },\r\n   helpSubtitle: {\r\n-    fontSize: 14,\r\n+    fontSize: 10,\r\n     color: \"#333\",\r\n     textAlign: \"center\",\r\n     marginTop: 2,\r\n   },  \r\n"
                },
                {
                    "date": 1745749001523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -603,9 +603,9 @@\n     color: \"#000\",\r\n     textAlign: \"center\",\r\n   },\r\n   helpSubtitle: {\r\n-    fontSize: 10,\r\n+    fontSize: 11,\r\n     color: \"#333\",\r\n     textAlign: \"center\",\r\n     marginTop: 2,\r\n   },  \r\n"
                },
                {
                    "date": 1745749020366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -584,9 +584,8 @@\n     color: '#fff',\r\n   },  \r\n   footerTextContainer: {\r\n     marginTop: 20,\r\n-    alignItems: \"center\",\r\n     paddingHorizontal: 20,\r\n   },\r\n   agreementText: {\r\n     fontSize: 12,\r\n"
                },
                {
                    "date": 1745749028581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -584,8 +584,9 @@\n     color: '#fff',\r\n   },  \r\n   footerTextContainer: {\r\n     marginTop: 20,\r\n+    alignItems: \"center\",\r\n     paddingHorizontal: 20,\r\n   },\r\n   agreementText: {\r\n     fontSize: 12,\r\n"
                },
                {
                    "date": 1745764684129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n \r\n     const formData = new FormData();\r\n \r\n     formData.append(\"profileID\", profileID); \r\n-\r\n+    formData.append(\"role\", role);\r\n     formData.append(\"franchiseNumber\", franchiseNumber);\r\n     formData.append(\"todaName\", todaName);\r\n     formData.append(\"sector\", sector);\r\n     formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n"
                },
                {
                    "date": 1745802238054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from \"react\";\r\n-import { View, Text, TextInput, Dimensions ,TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList } from \"react-native\";\r\n+import { View, Text, TextInput, Dimensions ,TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList, ActionSheetIOS } from \"react-native\";\r\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n@@ -75,8 +75,68 @@\n     if (!result.canceled && result.assets?.length > 0) {\r\n       setFunc(result.assets[0]);\r\n     }\r\n   };\r\n+  const pickSelfieImage = async (setFunc: (img: ImagePicker.ImagePickerAsset) => void) => {\r\n+    if (Platform.OS === \"ios\") {\r\n+      ActionSheetIOS.showActionSheetWithOptions(\r\n+        {\r\n+          options: [\"Take a Photo\", \"Choose from Gallery\", \"Cancel\"],\r\n+          cancelButtonIndex: 2,\r\n+        },\r\n+        async (buttonIndex) => {\r\n+          if (buttonIndex === 0) {\r\n+            // Take photo\r\n+            const cameraResult = await ImagePicker.launchCameraAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!cameraResult.canceled && cameraResult.assets.length > 0) {\r\n+              setFunc(cameraResult.assets[0]);\r\n+            }\r\n+          } else if (buttonIndex === 1) {\r\n+            // Pick from gallery\r\n+            const galleryResult = await ImagePicker.launchImageLibraryAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!galleryResult.canceled && galleryResult.assets.length > 0) {\r\n+              setFunc(galleryResult.assets[0]);\r\n+            }\r\n+          }\r\n+        }\r\n+      );\r\n+    } else {\r\n+      // Android simpler (Alert alternative)\r\n+      Alert.alert(\"Select Option\", \"\", [\r\n+        { text: \"Take a Photo\", onPress: async () => {\r\n+            const cameraResult = await ImagePicker.launchCameraAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!cameraResult.canceled && cameraResult.assets.length > 0) {\r\n+              setFunc(cameraResult.assets[0]);\r\n+            }\r\n+          } \r\n+        },\r\n+        { text: \"Choose from Gallery\", onPress: async () => {\r\n+            const galleryResult = await ImagePicker.launchImageLibraryAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!galleryResult.canceled && galleryResult.assets.length > 0) {\r\n+              setFunc(galleryResult.assets[0]);\r\n+            }\r\n+          } \r\n+        },\r\n+        { text: \"Cancel\", style: \"cancel\" }\r\n+      ]);\r\n+    }\r\n+  };\r\n \r\n   const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n     setShow(false);\r\n     const formatted = date.toISOString().split(\"T\")[0];\r\n"
                },
                {
                    "date": 1745802275204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n         <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n       </View>\r\n       <View style={{padding: 20}}>\r\n         <View style={styles.selfieContainer}>\r\n-          <TouchableOpacity onPress={() => pickImage(setSelfieImage)}>\r\n+          <TouchableOpacity onPress={() => pickSelfieImage(setSelfieImage)}>\r\n             {selfieImage ? (\r\n               <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n             ) : (\r\n               <View style={styles.placeholderCircle}>\r\n"
                },
                {
                    "date": 1745812354529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,672 @@\n+import React, { useState } from \"react\";\r\n+import { View, Text, TextInput, Dimensions ,TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList, ActionSheetIOS } from \"react-native\";\r\n+import * as ImagePicker from \"expo-image-picker\";\r\n+import { ImagePickerAsset } from \"expo-image-picker\";\r\n+import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n+import { MaterialIcons } from \"@expo/vector-icons\";\r\n+import API_BASE_URL from \"../../config\";\r\n+import { useRouter } from \"expo-router\";\r\n+import { useNavigation } from \"@react-navigation/native\";\r\n+const { width } = Dimensions.get('window');\r\n+\r\n+\r\n+export default function DriverRegister() {\r\n+  const navigation = useNavigation();\r\n+  const router = useRouter();\r\n+  const [role, setRole] = useState(\"Driver\");\r\n+\r\n+  // Shared\r\n+  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n+  const [todaName, setTodaName] = useState(\"\");\r\n+  const [sector, setSector] = useState(\"\");\r\n+  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n+  const [votingLocation, setVotingLocation] = useState(\"\");\r\n+\r\n+  // Operator info\r\n+  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n+  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n+  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n+  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n+  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n+  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n+  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n+\r\n+  // Driver info\r\n+  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n+  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n+  const [driverLastName, setDriverLastName] = useState(\"\");\r\n+  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n+  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n+  const [showDriverDate, setShowDriverDate] = useState(false);\r\n+  const [driverPhone, setDriverPhone] = useState(\"\");\r\n+  const [experienceYears, setExperienceYears] = useState(\"\");\r\n+\r\n+  // Account\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+\r\n+  // Images\r\n+  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n+  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n+\r\n+\r\n+  // picker choices\r\n+  const [modalVisible, setModalVisible] = useState(false);\r\n+  const [selectedModalType, setSelectedModalType] = useState(\"\");\r\n+  const experienceOptions = [\r\n+    \"1-5 taon\",\r\n+    \"6-10 taon\",\r\n+    \"16-20 taon\",\r\n+    \"20 taon pataas\",\r\n+  ];\r\n+  const roles = [\"Driver\", \"Operator\", \"Both\"];\r\n+  const sectors = [\"East\", \"West\", \"North\", \"South\", \"Other\"];\r\n+  const voterOptions = [\"Oo\", \"Hindi\"];\r\n+\r\n+  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n+    const result = await ImagePicker.launchImageLibraryAsync({\r\n+      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+      allowsEditing: true,\r\n+      quality: 1,\r\n+    });\r\n+    if (!result.canceled && result.assets?.length > 0) {\r\n+      setFunc(result.assets[0]);\r\n+    }\r\n+  };\r\n+  const pickSelfieImage = async (setFunc: (img: ImagePicker.ImagePickerAsset) => void) => {\r\n+    if (Platform.OS === \"ios\") {\r\n+      ActionSheetIOS.showActionSheetWithOptions(\r\n+        {\r\n+          options: [\"Take a Photo\", \"Choose from Gallery\", \"Cancel\"],\r\n+          cancelButtonIndex: 2,\r\n+        },\r\n+        async (buttonIndex) => {\r\n+          if (buttonIndex === 0) {\r\n+            // Take photo\r\n+            const cameraResult = await ImagePicker.launchCameraAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!cameraResult.canceled && cameraResult.assets.length > 0) {\r\n+              setFunc(cameraResult.assets[0]);\r\n+            }\r\n+          } else if (buttonIndex === 1) {\r\n+            // Pick from gallery\r\n+            const galleryResult = await ImagePicker.launchImageLibraryAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!galleryResult.canceled && galleryResult.assets.length > 0) {\r\n+              setFunc(galleryResult.assets[0]);\r\n+            }\r\n+          }\r\n+        }\r\n+      );\r\n+    } else {\r\n+      // Android simpler (Alert alternative)\r\n+      Alert.alert(\"Select Option\", \"\", [\r\n+        { text: \"Take a Photo\", onPress: async () => {\r\n+            const cameraResult = await ImagePicker.launchCameraAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!cameraResult.canceled && cameraResult.assets.length > 0) {\r\n+              setFunc(cameraResult.assets[0]);\r\n+            }\r\n+          } \r\n+        },\r\n+        { text: \"Choose from Gallery\", onPress: async () => {\r\n+            const galleryResult = await ImagePicker.launchImageLibraryAsync({\r\n+              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n+              allowsEditing: true,\r\n+              quality: 1,\r\n+            });\r\n+            if (!galleryResult.canceled && galleryResult.assets.length > 0) {\r\n+              setFunc(galleryResult.assets[0]);\r\n+            }\r\n+          } \r\n+        },\r\n+        { text: \"Cancel\", style: \"cancel\" }\r\n+      ]);\r\n+    }\r\n+  };\r\n+\r\n+  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n+    setShow(false);\r\n+    const formatted = date.toISOString().split(\"T\")[0];\r\n+    setFunc(formatted);\r\n+  };\r\n+\r\n+  const generateProfileID = () => {\r\n+    return Math.random().toString(36).substring(2, 9) + Date.now(); \r\n+  };\r\n+  const [profileID] = useState(generateProfileID());\r\n+  \r\n+\r\n+  const handleSubmit = async () => {\r\n+    console.log(\"submit clicked\")\r\n+    if (!votersIDImage) {\r\n+      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n+      return;\r\n+    }\r\n+    if (password !== confirmPassword) {\r\n+      Alert.alert(\"Error\", \"Passwords do not match\");\r\n+      return;\r\n+    }\r\n+\r\n+    const formData = new FormData();\r\n+\r\n+    formData.append(\"profileID\", profileID); \r\n+    formData.append(\"role\", role);\r\n+    formData.append(\"franchiseNumber\", franchiseNumber);\r\n+    formData.append(\"todaName\", todaName);\r\n+    formData.append(\"sector\", sector);\r\n+    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n+    formData.append(\"votingLocation\", votingLocation);\r\n+\r\n+    // Operator fields\r\n+    formData.append(\"operatorFirstName\", operatorFirstName);\r\n+    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n+    formData.append(\"operatorLastName\", operatorLastName);\r\n+    formData.append(\"operatorSuffix\", operatorSuffix);\r\n+    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n+    formData.append(\"operatorPhone\", operatorPhone);\r\n+\r\n+    // Driver fields\r\n+    formData.append(\"driverFirstName\", driverFirstName);\r\n+    formData.append(\"driverMiddleName\", driverMiddleName);\r\n+    formData.append(\"driverLastName\", driverLastName);\r\n+    formData.append(\"driverSuffix\", driverSuffix);\r\n+    formData.append(\"driverBirthdate\", driverBirthdate);\r\n+    formData.append(\"driverPhone\", driverPhone);\r\n+\r\n+    formData.append(\"experienceYears\", experienceYears);\r\n+\r\n+    // 📩 Email/password handling:\r\n+    if (role === \"Driver\") {\r\n+      formData.append(\"driverEmail\", email);\r\n+      formData.append(\"driverPassword\", password);\r\n+    }\r\n+\r\n+    if (role === \"Operator\") {\r\n+      formData.append(\"operatorEmail\", email);\r\n+      formData.append(\"operatorPassword\", password);\r\n+    }\r\n+\r\n+    if (role === \"Both\") {\r\n+      formData.append(\"driverEmail\", email);\r\n+      formData.append(\"driverPassword\", password);\r\n+      formData.append(\"operatorEmail\", email);\r\n+      formData.append(\"operatorPassword\", password);\r\n+    }\r\n+    formData.append(\"votersIDImage\", {\r\n+      uri: votersIDImage.uri,\r\n+      name: \"voter.jpg\",\r\n+      type: \"image/jpeg\",\r\n+    } as any);\r\n+    if (driversLicenseImage)\r\n+      formData.append(\"driversLicenseImage\", {\r\n+        uri: driversLicenseImage.uri,\r\n+        name: \"license.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (orcrImage)\r\n+      formData.append(\"orcrImage\", {\r\n+        uri: orcrImage.uri,\r\n+        name: \"orcr.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+    if (selfieImage)\r\n+      formData.append(\"selfie\", {\r\n+        uri: selfieImage.uri,\r\n+        name: \"selfie.jpg\",\r\n+        type: \"image/jpeg\",\r\n+      } as any);\r\n+\r\n+      try {\r\n+        const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n+          method: \"POST\",\r\n+          body: formData,\r\n+          headers: {\r\n+            \"Content-Type\": \"multipart/form-data\",\r\n+          },\r\n+        });\r\n+      \r\n+        const text = await res.text();\r\n+      \r\n+        let data;\r\n+        try {\r\n+          data = JSON.parse(text);\r\n+        } catch (e) {\r\n+          console.error(\"Not a JSON response:\", text);\r\n+          throw new Error(text); // handle non-JSON response cleanly\r\n+        }\r\n+      \r\n+        if (res.ok) {\r\n+          Alert.alert(\"Success\", data.message || \"Registration successful\", [\r\n+            {\r\n+              text: \"OK\",\r\n+              onPress: () => {\r\n+                router.push(\"/login_and_reg/dlogin\"); // 👉 navigate to dlogin.tsx\r\n+              },\r\n+            },\r\n+          ]);\r\n+        }\r\n+        else Alert.alert(\"Error\", data.error || text);\r\n+      \r\n+      } catch (e: any) {\r\n+        console.error(\"Driver registration failed:\", e);\r\n+        Alert.alert(\"Error\", e.message || \"Network error or server issue\");\r\n+      }      \r\n+  };\r\n+  const UploadItem = ({ label, onPress, uploaded }: { label: string; onPress: () => void; uploaded: boolean }) => (\r\n+    <View style={styles.uploadRow}>\r\n+      <Text style={styles.uploadLabel}>{label}</Text>\r\n+      <TouchableOpacity style={[styles.uploadButton, uploaded && styles.uploaded]} onPress={onPress}>\r\n+        <Text style={styles.uploadButtonText}>UPLOAD</Text>\r\n+      </TouchableOpacity>\r\n+    </View>\r\n+  );\r\n+  \r\n+\r\n+  return (\r\n+    <ScrollView>\r\n+      <View style={{paddingTop: 30}}>\r\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+      </View>\r\n+      <View style={styles.headerBar}>\r\n+        <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n+      </View>\r\n+      <View style={{padding: 20}}>\r\n+        <View style={styles.selfieContainer}>\r\n+          <TouchableOpacity onPress={() => pickSelfieImage(setSelfieImage)}>\r\n+            {selfieImage ? (\r\n+              <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n+            ) : (\r\n+              <View style={styles.placeholderCircle}>\r\n+                <MaterialIcons name=\"camera-alt\" size={20} color=\"#fff\" style={styles.icon} />\r\n+              </View>\r\n+            )}\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+        <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"role\");\r\n+            setModalVisible(true);\r\n+          }}        \r\n+        >\r\n+          <Text style={{ fontSize: 14, color: role ? \"#000\" : \"#888\" }}>\r\n+            {role || \"Pumili ng Role\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n+        </TouchableOpacity>\r\n+        {/* Operator Info */}\r\n+        {(role === \"Operator\" || role === \"Driver\") && (\r\n+          <Text style={styles.header}>Operator Information</Text>\r\n+        )}\r\n+        {(role === \"Both\") && (\r\n+          <Text style={styles.header}>Personal Information</Text>\r\n+        )}\r\n+        <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n+        <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n+        <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n+        <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n+        <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n+          <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"#888\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n+        </TouchableOpacity>\r\n+        {showOperatorDate && (\r\n+          <DateTimePicker\r\n+            value={new Date()}\r\n+            mode=\"date\"\r\n+            display=\"default\"\r\n+            onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n+          />\r\n+        )}\r\n+        {(role === \"Operator\" || role === \"Driver\") && (\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\" />\r\n+        )}\r\n+        {(role === \"Both\") && (\r\n+          <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n+        )}\r\n+        \r\n+\r\n+        {/* Driver Info */}\r\n+        {(role === \"Operator\" || role === \"Driver\") && (\r\n+          <>\r\n+            <Text style={styles.header}>Driver Information</Text>\r\n+            <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n+            <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n+            <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n+            <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n+            <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n+              <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n+            </TouchableOpacity>\r\n+            {showDriverDate && (\r\n+              <DateTimePicker\r\n+                value={new Date()}\r\n+                mode=\"date\"\r\n+                display=\"default\"\r\n+                onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n+              />\r\n+            )}\r\n+            <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n+          </>\r\n+        )}\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"experience\");\r\n+            setModalVisible(true);\r\n+          }}\r\n+        >\r\n+          <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n+            {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n+        </TouchableOpacity>\r\n+\r\n+        {/* Registration Info */}\r\n+        <Text style={styles.header}>Franchise & Voting Info</Text>\r\n+        <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} keyboardType=\"phone-pad\" />\r\n+        <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"sector\");\r\n+            setModalVisible(true);\r\n+          }}\r\n+        >\r\n+          <Text style={{ fontSize: 14, color: sector ? \"#000\" : \"#888\" }}>\r\n+            {sector || \"Pumili ng Sector\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity\r\n+          style={styles.customPicker}\r\n+          onPress={() => {\r\n+            setSelectedModalType(\"voter\");\r\n+            setModalVisible(true);\r\n+          }}\r\n+        >\r\n+          <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n+            {isLucenaVoter || \"Ikaw ba ay botante ng Lucena city?\"}\r\n+          </Text>\r\n+          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n+        </TouchableOpacity>\r\n+        <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n+\r\n+        {/* Account Info */}\r\n+        <Text style={styles.header}>Account</Text>\r\n+        <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n+        <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n+        <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n+\r\n+        {/* Uploads */}\r\n+        <Text style={styles.header}>Uploads</Text>\r\n+        {/* Other Documents Uploads */}\r\n+        <UploadItem label=\"I-upload ang picture ng iyong Voter's ID o Certificate\" onPress={() => pickImage(setVotersIDImage)} uploaded={!!votersIDImage} />\r\n+        <UploadItem label=\"I-upload ang picture ng iyong Driver's License\" onPress={() => pickImage(setDriversLicenseImage)} uploaded={!!driversLicenseImage} />\r\n+        <UploadItem label=\"I-upload ang picture ng OR at CR ng Tricycle\" onPress={() => pickImage(setOrcrImage)} uploaded={!!orcrImage} />\r\n+\r\n+        <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n+          <Text style={styles.buttonText}>Submit</Text>\r\n+        </TouchableOpacity>\r\n+        <Text style={styles.signupPrompt}>\r\n+          already have an account?{\" \"}\r\n+          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dlogin\")}>\r\n+            Log In\r\n+          </Text>\r\n+        </Text>\r\n+        <View style={styles.footerTextContainer}>\r\n+          <Text style={styles.agreementText}>\r\n+            By signing up, you agree to the \r\n+            <Text style={styles.linkText}> Terms of service </Text>\r\n+            and \r\n+            <Text style={styles.linkText}> Privacy policy.</Text>\r\n+          </Text>\r\n+\r\n+          <Text style={styles.helpTitle}>\r\n+            {\"\\n\"}Kaylangan ng tulong sa registration?\r\n+          </Text>\r\n+          <Text style={styles.helpSubtitle}>\r\n+            Pumunta sa TFRO - Lucena Office upang magpaturo\r\n+          </Text>\r\n+        </View>\r\n+\r\n+\r\n+        {/* models */}\r\n+        <Modal\r\n+          animationType=\"fade\"\r\n+          transparent={true}\r\n+          visible={modalVisible}\r\n+          onRequestClose={() => setModalVisible(false)}\r\n+        >\r\n+          <TouchableOpacity\r\n+            style={styles.modalOverlay}\r\n+            activeOpacity={1}\r\n+            onPressOut={() => setModalVisible(false)}\r\n+          >\r\n+            <View style={styles.modalContent}>\r\n+              {/* Modal Picker Content */}\r\n+              {(() => {\r\n+                let xdata: string[] = [];\r\n+\r\n+                if (selectedModalType === \"experience\") xdata = experienceOptions;\r\n+                else if (selectedModalType === \"role\") xdata = roles;\r\n+                else if (selectedModalType === \"sector\") xdata = sectors;\r\n+                else if (selectedModalType === \"voter\") xdata = voterOptions;\r\n+\r\n+                return (\r\n+                  <>\r\n+                    {xdata.map((option, index) => (\r\n+                      <TouchableOpacity\r\n+                        key={index}\r\n+                        style={styles.optionItem}\r\n+                        onPress={() => {\r\n+                          if (selectedModalType === \"experience\") setExperienceYears(option);\r\n+                          if (selectedModalType === \"role\") {\r\n+                            setRole(option);\r\n+                            if (option === \"Both\") {\r\n+                              setDriverFirstName(operatorFirstName);\r\n+                              setDriverMiddleName(operatorMiddleName);\r\n+                              setDriverLastName(operatorLastName);\r\n+                              setDriverSuffix(operatorSuffix);\r\n+                              setDriverBirthdate(operatorBirthdate);\r\n+                              setDriverPhone(operatorPhone);\r\n+                            }\r\n+                          }\r\n+                          if (selectedModalType === \"sector\") setSector(option);\r\n+                          if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n+                          setModalVisible(false);\r\n+                        }}\r\n+                      >\r\n+                        <Text style={styles.optionText}>{option}</Text>\r\n+                      </TouchableOpacity>\r\n+                    ))}\r\n+                  </>\r\n+                );\r\n+              })()}\r\n+            </View>\r\n+          </TouchableOpacity>\r\n+        </Modal>\r\n+\r\n+      </View>\r\n+      \r\n+\r\n+\r\n+    </ScrollView>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  headerBar: {\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n+    paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n+    paddingBottom: 15,\r\n+    backgroundColor: '#f2f2f2',\r\n+  },\r\n+  headerTitle: {\r\n+    fontSize: 18,\r\n+    fontWeight: 'bold',\r\n+    color: '#414141',\r\n+    width: width,\r\n+    textAlign: 'center'\r\n+  },\r\n+  \r\n+  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n+  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n+  input: {\r\n+    backgroundColor: \"#fff\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    padding: 12,\r\n+    marginBottom: 10,\r\n+    borderRadius: 10,\r\n+  },\r\n+  customPicker: {\r\n+    flexDirection: 'row',\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ccc\",\r\n+    borderRadius: 10,\r\n+    paddingVertical: 10,\r\n+    paddingHorizontal: 12,\r\n+    backgroundColor: \"#fff\",\r\n+    marginBottom: 10,\r\n+    justifyContent: \"space-between\", \r\n+    alignItems: \"center\"\r\n+  },\r\n+  \r\n+  modalOverlay: {\r\n+    flex: 1,\r\n+    justifyContent: \"center\",\r\n+    alignItems: \"center\",\r\n+    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n+  },\r\n+  \r\n+  modalContent: {\r\n+    backgroundColor: \"#fff\",\r\n+    width: \"80%\",\r\n+    borderRadius: 10,\r\n+    padding: 15,\r\n+    elevation: 5,\r\n+  },\r\n+  \r\n+  optionItem: {\r\n+    paddingVertical: 12,\r\n+    borderBottomWidth: 1,\r\n+    borderBottomColor: \"#eee\",\r\n+  },\r\n+  \r\n+  optionText: {\r\n+    fontSize: 16,\r\n+    color: \"#333\",\r\n+  }, \r\n+  button: {\r\n+    backgroundColor: \"#aaa\",\r\n+    padding: 12,\r\n+    borderRadius: 10,\r\n+    marginBottom: 10,\r\n+    alignItems: \"center\",\r\n+  },\r\n+  uploaded: {\r\n+    backgroundColor: \"#4caf50\",\r\n+  },\r\n+  buttonText: {\r\n+    color: \"#fff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  submitButton: {\r\n+    backgroundColor: \"#5089A3\",\r\n+    padding: 15,\r\n+    borderRadius: 10,\r\n+    alignItems: \"center\",\r\n+    marginTop: 20,\r\n+    marginBottom: 20,\r\n+  },\r\n+  signupPrompt: {\r\n+    textAlign: \"center\",\r\n+    fontSize: 14,\r\n+    color: \"#414141\",\r\n+  },\r\n+  signupLink: {\r\n+    color: \"#5089A3\",\r\n+    fontWeight: \"600\",\r\n+  },\r\n+  selfieContainer: {\r\n+    alignItems: 'center',\r\n+    marginBottom: 20,\r\n+  },\r\n+  placeholderCircle: {\r\n+    width: 100,\r\n+    height: 100,\r\n+    borderRadius: 60,\r\n+    backgroundColor: '#D0D0D0',\r\n+    alignItems: 'flex-end',\r\n+    justifyContent: 'flex-end',\r\n+  },\r\n+  icon: {\r\n+    borderRadius: 50,\r\n+    backgroundColor: \"#5089A3\",\r\n+    padding: 5,\r\n+  },\r\n+  selfieImage: {\r\n+    width: 120,\r\n+    height: 120,\r\n+    borderRadius: 60,\r\n+  },\r\n+  uploadRow: {\r\n+    flexDirection: 'row',\r\n+    justifyContent: 'space-between',\r\n+    alignItems: 'center',\r\n+    marginBottom: 15,\r\n+  },\r\n+  uploadLabel: {\r\n+    flex: 1,\r\n+    fontSize: 14,\r\n+    color: '#333',\r\n+  },\r\n+  uploadButton: {\r\n+    backgroundColor: '#5089A3',\r\n+    paddingVertical: 4,\r\n+    paddingHorizontal: 20,\r\n+    borderRadius: 15,\r\n+  },\r\n+  uploadButtonText: {\r\n+    color: '#fff',\r\n+  },  \r\n+  footerTextContainer: {\r\n+    marginTop: 20,\r\n+    alignItems: \"center\",\r\n+    paddingHorizontal: 20,\r\n+  },\r\n+  agreementText: {\r\n+    fontSize: 12,\r\n+    color: \"#999\",\r\n+    textAlign: \"center\",\r\n+  },\r\n+  linkText: {\r\n+    color: \"#1e90ff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  helpTitle: {\r\n+    fontSize: 16,\r\n+    fontWeight: \"bold\",\r\n+    color: \"#000\",\r\n+    textAlign: \"center\",\r\n+  },\r\n+  helpSubtitle: {\r\n+    fontSize: 11,\r\n+    color: \"#333\",\r\n+    textAlign: \"center\",\r\n+    marginTop: 2,\r\n+  },  \r\n+});\r\n"
                },
                {
                    "date": 1746361860967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import * as ImagePicker from \"expo-image-picker\";\r\n import { ImagePickerAsset } from \"expo-image-picker\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n-import API_BASE_URL from \"../../config\";\r\n+import {API_BASE_URL} from \"../../config\";\r\n import { useRouter } from \"expo-router\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n const { width } = Dimensions.get('window');\r\n \r\n@@ -229,8 +229,9 @@\n         type: \"image/jpeg\",\r\n       } as any);\r\n \r\n       try {\r\n+        console.log(\"API_BASE_URL is\", API_BASE_URL);\r\n         const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n           method: \"POST\",\r\n           body: formData,\r\n           headers: {\r\n@@ -669,676 +670,4 @@\n     textAlign: \"center\",\r\n     marginTop: 2,\r\n   },  \r\n });\r\n-import React, { useState } from \"react\";\r\n-import { View, Text, TextInput, Dimensions ,TouchableOpacity, ScrollView, StyleSheet, Alert, StatusBar, Platform, Image, Modal, FlatList, ActionSheetIOS } from \"react-native\";\r\n-import * as ImagePicker from \"expo-image-picker\";\r\n-import { ImagePickerAsset } from \"expo-image-picker\";\r\n-import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n-import { MaterialIcons } from \"@expo/vector-icons\";\r\n-import API_BASE_URL from \"../../config\";\r\n-import { useRouter } from \"expo-router\";\r\n-import { useNavigation } from \"@react-navigation/native\";\r\n-const { width } = Dimensions.get('window');\r\n-\r\n-\r\n-export default function DriverRegister() {\r\n-  const navigation = useNavigation();\r\n-  const router = useRouter();\r\n-  const [role, setRole] = useState(\"Driver\");\r\n-\r\n-  // Shared\r\n-  const [franchiseNumber, setFranchiseNumber] = useState(\"\");\r\n-  const [todaName, setTodaName] = useState(\"\");\r\n-  const [sector, setSector] = useState(\"\");\r\n-  const [isLucenaVoter, setIsLucenaVoter] = useState(\"\");\r\n-  const [votingLocation, setVotingLocation] = useState(\"\");\r\n-\r\n-  // Operator info\r\n-  const [operatorFirstName, setOperatorFirstName] = useState(\"\");\r\n-  const [operatorMiddleName, setOperatorMiddleName] = useState(\"\");\r\n-  const [operatorLastName, setOperatorLastName] = useState(\"\");\r\n-  const [operatorSuffix, setOperatorSuffix] = useState(\"\");\r\n-  const [operatorBirthdate, setOperatorBirthdate] = useState(\"\");\r\n-  const [showOperatorDate, setShowOperatorDate] = useState(false);\r\n-  const [operatorPhone, setOperatorPhone] = useState(\"\");\r\n-\r\n-  // Driver info\r\n-  const [driverFirstName, setDriverFirstName] = useState(\"\");\r\n-  const [driverMiddleName, setDriverMiddleName] = useState(\"\");\r\n-  const [driverLastName, setDriverLastName] = useState(\"\");\r\n-  const [driverSuffix, setDriverSuffix] = useState(\"\");\r\n-  const [driverBirthdate, setDriverBirthdate] = useState(\"\");\r\n-  const [showDriverDate, setShowDriverDate] = useState(false);\r\n-  const [driverPhone, setDriverPhone] = useState(\"\");\r\n-  const [experienceYears, setExperienceYears] = useState(\"\");\r\n-\r\n-  // Account\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-\r\n-  // Images\r\n-  const [votersIDImage, setVotersIDImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [driversLicenseImage, setDriversLicenseImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [orcrImage, setOrcrImage] = useState<ImagePickerAsset | null>(null);\r\n-  const [selfieImage, setSelfieImage] = useState<ImagePickerAsset | null>(null);\r\n-\r\n-\r\n-  // picker choices\r\n-  const [modalVisible, setModalVisible] = useState(false);\r\n-  const [selectedModalType, setSelectedModalType] = useState(\"\");\r\n-  const experienceOptions = [\r\n-    \"1-5 taon\",\r\n-    \"6-10 taon\",\r\n-    \"16-20 taon\",\r\n-    \"20 taon pataas\",\r\n-  ];\r\n-  const roles = [\"Driver\", \"Operator\", \"Both\"];\r\n-  const sectors = [\"East\", \"West\", \"North\", \"South\", \"Other\"];\r\n-  const voterOptions = [\"Oo\", \"Hindi\"];\r\n-\r\n-  const pickImage = async (setFunc: (img: ImagePickerAsset) => void) => {\r\n-    const result = await ImagePicker.launchImageLibraryAsync({\r\n-      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-      allowsEditing: true,\r\n-      quality: 1,\r\n-    });\r\n-    if (!result.canceled && result.assets?.length > 0) {\r\n-      setFunc(result.assets[0]);\r\n-    }\r\n-  };\r\n-  const pickSelfieImage = async (setFunc: (img: ImagePicker.ImagePickerAsset) => void) => {\r\n-    if (Platform.OS === \"ios\") {\r\n-      ActionSheetIOS.showActionSheetWithOptions(\r\n-        {\r\n-          options: [\"Take a Photo\", \"Choose from Gallery\", \"Cancel\"],\r\n-          cancelButtonIndex: 2,\r\n-        },\r\n-        async (buttonIndex) => {\r\n-          if (buttonIndex === 0) {\r\n-            // Take photo\r\n-            const cameraResult = await ImagePicker.launchCameraAsync({\r\n-              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-              allowsEditing: true,\r\n-              quality: 1,\r\n-            });\r\n-            if (!cameraResult.canceled && cameraResult.assets.length > 0) {\r\n-              setFunc(cameraResult.assets[0]);\r\n-            }\r\n-          } else if (buttonIndex === 1) {\r\n-            // Pick from gallery\r\n-            const galleryResult = await ImagePicker.launchImageLibraryAsync({\r\n-              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-              allowsEditing: true,\r\n-              quality: 1,\r\n-            });\r\n-            if (!galleryResult.canceled && galleryResult.assets.length > 0) {\r\n-              setFunc(galleryResult.assets[0]);\r\n-            }\r\n-          }\r\n-        }\r\n-      );\r\n-    } else {\r\n-      // Android simpler (Alert alternative)\r\n-      Alert.alert(\"Select Option\", \"\", [\r\n-        { text: \"Take a Photo\", onPress: async () => {\r\n-            const cameraResult = await ImagePicker.launchCameraAsync({\r\n-              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-              allowsEditing: true,\r\n-              quality: 1,\r\n-            });\r\n-            if (!cameraResult.canceled && cameraResult.assets.length > 0) {\r\n-              setFunc(cameraResult.assets[0]);\r\n-            }\r\n-          } \r\n-        },\r\n-        { text: \"Choose from Gallery\", onPress: async () => {\r\n-            const galleryResult = await ImagePicker.launchImageLibraryAsync({\r\n-              mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n-              allowsEditing: true,\r\n-              quality: 1,\r\n-            });\r\n-            if (!galleryResult.canceled && galleryResult.assets.length > 0) {\r\n-              setFunc(galleryResult.assets[0]);\r\n-            }\r\n-          } \r\n-        },\r\n-        { text: \"Cancel\", style: \"cancel\" }\r\n-      ]);\r\n-    }\r\n-  };\r\n-\r\n-  const handleDateChange = (date: Date, setFunc: (val: string) => void, setShow: (val: boolean) => void) => {\r\n-    setShow(false);\r\n-    const formatted = date.toISOString().split(\"T\")[0];\r\n-    setFunc(formatted);\r\n-  };\r\n-\r\n-  const generateProfileID = () => {\r\n-    return Math.random().toString(36).substring(2, 9) + Date.now(); \r\n-  };\r\n-  const [profileID] = useState(generateProfileID());\r\n-  \r\n-\r\n-  const handleSubmit = async () => {\r\n-    console.log(\"submit clicked\")\r\n-    if (!votersIDImage) {\r\n-      Alert.alert(\"Error\", \"Please upload Voter's ID image.\");\r\n-      return;\r\n-    }\r\n-    if (password !== confirmPassword) {\r\n-      Alert.alert(\"Error\", \"Passwords do not match\");\r\n-      return;\r\n-    }\r\n-\r\n-    const formData = new FormData();\r\n-\r\n-    formData.append(\"profileID\", profileID); \r\n-    formData.append(\"role\", role);\r\n-    formData.append(\"franchiseNumber\", franchiseNumber);\r\n-    formData.append(\"todaName\", todaName);\r\n-    formData.append(\"sector\", sector);\r\n-    formData.append(\"isLucenaVoter\", isLucenaVoter);\r\n-    formData.append(\"votingLocation\", votingLocation);\r\n-\r\n-    // Operator fields\r\n-    formData.append(\"operatorFirstName\", operatorFirstName);\r\n-    formData.append(\"operatorMiddleName\", operatorMiddleName);\r\n-    formData.append(\"operatorLastName\", operatorLastName);\r\n-    formData.append(\"operatorSuffix\", operatorSuffix);\r\n-    formData.append(\"operatorBirthdate\", operatorBirthdate);\r\n-    formData.append(\"operatorPhone\", operatorPhone);\r\n-\r\n-    // Driver fields\r\n-    formData.append(\"driverFirstName\", driverFirstName);\r\n-    formData.append(\"driverMiddleName\", driverMiddleName);\r\n-    formData.append(\"driverLastName\", driverLastName);\r\n-    formData.append(\"driverSuffix\", driverSuffix);\r\n-    formData.append(\"driverBirthdate\", driverBirthdate);\r\n-    formData.append(\"driverPhone\", driverPhone);\r\n-\r\n-    formData.append(\"experienceYears\", experienceYears);\r\n-\r\n-    // 📩 Email/password handling:\r\n-    if (role === \"Driver\") {\r\n-      formData.append(\"driverEmail\", email);\r\n-      formData.append(\"driverPassword\", password);\r\n-    }\r\n-\r\n-    if (role === \"Operator\") {\r\n-      formData.append(\"operatorEmail\", email);\r\n-      formData.append(\"operatorPassword\", password);\r\n-    }\r\n-\r\n-    if (role === \"Both\") {\r\n-      formData.append(\"driverEmail\", email);\r\n-      formData.append(\"driverPassword\", password);\r\n-      formData.append(\"operatorEmail\", email);\r\n-      formData.append(\"operatorPassword\", password);\r\n-    }\r\n-    formData.append(\"votersIDImage\", {\r\n-      uri: votersIDImage.uri,\r\n-      name: \"voter.jpg\",\r\n-      type: \"image/jpeg\",\r\n-    } as any);\r\n-    if (driversLicenseImage)\r\n-      formData.append(\"driversLicenseImage\", {\r\n-        uri: driversLicenseImage.uri,\r\n-        name: \"license.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (orcrImage)\r\n-      formData.append(\"orcrImage\", {\r\n-        uri: orcrImage.uri,\r\n-        name: \"orcr.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-    if (selfieImage)\r\n-      formData.append(\"selfie\", {\r\n-        uri: selfieImage.uri,\r\n-        name: \"selfie.jpg\",\r\n-        type: \"image/jpeg\",\r\n-      } as any);\r\n-\r\n-      try {\r\n-        const res = await fetch(`${API_BASE_URL}/api/auth/driver/register-driver`, {\r\n-          method: \"POST\",\r\n-          body: formData,\r\n-          headers: {\r\n-            \"Content-Type\": \"multipart/form-data\",\r\n-          },\r\n-        });\r\n-      \r\n-        const text = await res.text();\r\n-      \r\n-        let data;\r\n-        try {\r\n-          data = JSON.parse(text);\r\n-        } catch (e) {\r\n-          console.error(\"Not a JSON response:\", text);\r\n-          throw new Error(text); // handle non-JSON response cleanly\r\n-        }\r\n-      \r\n-        if (res.ok) {\r\n-          Alert.alert(\"Success\", data.message || \"Registration successful\", [\r\n-            {\r\n-              text: \"OK\",\r\n-              onPress: () => {\r\n-                router.push(\"/login_and_reg/dlogin\"); // 👉 navigate to dlogin.tsx\r\n-              },\r\n-            },\r\n-          ]);\r\n-        }\r\n-        else Alert.alert(\"Error\", data.error || text);\r\n-      \r\n-      } catch (e: any) {\r\n-        console.error(\"Driver registration failed:\", e);\r\n-        Alert.alert(\"Error\", e.message || \"Network error or server issue\");\r\n-      }      \r\n-  };\r\n-  const UploadItem = ({ label, onPress, uploaded }: { label: string; onPress: () => void; uploaded: boolean }) => (\r\n-    <View style={styles.uploadRow}>\r\n-      <Text style={styles.uploadLabel}>{label}</Text>\r\n-      <TouchableOpacity style={[styles.uploadButton, uploaded && styles.uploaded]} onPress={onPress}>\r\n-        <Text style={styles.uploadButtonText}>UPLOAD</Text>\r\n-      </TouchableOpacity>\r\n-    </View>\r\n-  );\r\n-  \r\n-\r\n-  return (\r\n-    <ScrollView>\r\n-      <View style={{paddingTop: 30}}>\r\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n-      </View>\r\n-      <View style={styles.headerBar}>\r\n-        <Text style={styles.headerTitle}>Driver’s Profile</Text>\r\n-      </View>\r\n-      <View style={{padding: 20}}>\r\n-        <View style={styles.selfieContainer}>\r\n-          <TouchableOpacity onPress={() => pickSelfieImage(setSelfieImage)}>\r\n-            {selfieImage ? (\r\n-              <Image source={{ uri: selfieImage.uri }} style={styles.selfieImage} />\r\n-            ) : (\r\n-              <View style={styles.placeholderCircle}>\r\n-                <MaterialIcons name=\"camera-alt\" size={20} color=\"#fff\" style={styles.icon} />\r\n-              </View>\r\n-            )}\r\n-          </TouchableOpacity>\r\n-        </View>\r\n-        <Text style={styles.title}>Ikaw ba ay Operator o Driver?</Text>\r\n-        <TouchableOpacity\r\n-          style={styles.customPicker}\r\n-          onPress={() => {\r\n-            setSelectedModalType(\"role\");\r\n-            setModalVisible(true);\r\n-          }}        \r\n-        >\r\n-          <Text style={{ fontSize: 14, color: role ? \"#000\" : \"#888\" }}>\r\n-            {role || \"Pumili ng Role\"}\r\n-          </Text>\r\n-          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-        </TouchableOpacity>\r\n-        {/* Operator Info */}\r\n-        {(role === \"Operator\" || role === \"Driver\") && (\r\n-          <Text style={styles.header}>Operator Information</Text>\r\n-        )}\r\n-        {(role === \"Both\") && (\r\n-          <Text style={styles.header}>Personal Information</Text>\r\n-        )}\r\n-        <TextInput style={styles.input} placeholder=\"First Name\" value={operatorFirstName} onChangeText={setOperatorFirstName} />\r\n-        <TextInput style={styles.input} placeholder=\"Middle Name\" value={operatorMiddleName} onChangeText={setOperatorMiddleName} />\r\n-        <TextInput style={styles.input} placeholder=\"Last Name\" value={operatorLastName} onChangeText={setOperatorLastName} />\r\n-        <TextInput style={styles.input} placeholder=\"Suffix\" value={operatorSuffix} onChangeText={setOperatorSuffix} />\r\n-        <TouchableOpacity onPress={() => setShowOperatorDate(true)} style={styles.input}>\r\n-          <Text style={{ fontSize: 14, color: operatorBirthdate ? \"#000\" : \"#888\" }}>{operatorBirthdate || \"Select Birthdate\"}</Text>\r\n-        </TouchableOpacity>\r\n-        {showOperatorDate && (\r\n-          <DateTimePicker\r\n-            value={new Date()}\r\n-            mode=\"date\"\r\n-            display=\"default\"\r\n-            onChange={(e, d) => d && handleDateChange(d, setOperatorBirthdate, setShowOperatorDate)}\r\n-          />\r\n-        )}\r\n-        {(role === \"Operator\" || role === \"Driver\") && (\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Operator\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\" />\r\n-        )}\r\n-        {(role === \"Both\") && (\r\n-          <TextInput style={styles.input} placeholder=\"Phone/Contact Number\" value={operatorPhone} onChangeText={setOperatorPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n-        )}\r\n-        \r\n-\r\n-        {/* Driver Info */}\r\n-        {(role === \"Operator\" || role === \"Driver\") && (\r\n-          <>\r\n-            <Text style={styles.header}>Driver Information</Text>\r\n-            <TextInput style={styles.input} placeholder=\"First Name\" value={driverFirstName} onChangeText={setDriverFirstName} />\r\n-            <TextInput style={styles.input} placeholder=\"Middle Name\" value={driverMiddleName} onChangeText={setDriverMiddleName} />\r\n-            <TextInput style={styles.input} placeholder=\"Last Name\" value={driverLastName} onChangeText={setDriverLastName} />\r\n-            <TextInput style={styles.input} placeholder=\"Suffix\" value={driverSuffix} onChangeText={setDriverSuffix} />\r\n-            <TouchableOpacity onPress={() => setShowDriverDate(true)} style={styles.input}>\r\n-              <Text style={{ fontSize: 14, color: driverBirthdate ? \"#000\" : \"#888\" }}>{driverBirthdate || \"Select Birthdate\"}</Text>\r\n-            </TouchableOpacity>\r\n-            {showDriverDate && (\r\n-              <DateTimePicker\r\n-                value={new Date()}\r\n-                mode=\"date\"\r\n-                display=\"default\"\r\n-                onChange={(e, d) => d && handleDateChange(d, setDriverBirthdate, setShowDriverDate)}\r\n-              />\r\n-            )}\r\n-            <TextInput style={styles.input} placeholder=\"Phone/Contact Number ng Driver\" value={driverPhone} onChangeText={setDriverPhone} keyboardType=\"phone-pad\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n-          </>\r\n-        )}\r\n-        <TouchableOpacity\r\n-          style={styles.customPicker}\r\n-          onPress={() => {\r\n-            setSelectedModalType(\"experience\");\r\n-            setModalVisible(true);\r\n-          }}\r\n-        >\r\n-          <Text style={{ fontSize: 14, color: experienceYears ? \"#000\" : \"#888\" }}>\r\n-            {experienceYears || \"Gaano katagal ng nagmamaneho?\"}\r\n-          </Text>\r\n-          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-        </TouchableOpacity>\r\n-\r\n-        {/* Registration Info */}\r\n-        <Text style={styles.header}>Franchise & Voting Info</Text>\r\n-        <TextInput style={styles.input} placeholder=\"Franchise Number\" value={franchiseNumber} onChangeText={setFranchiseNumber} keyboardType=\"phone-pad\" />\r\n-        <TextInput style={styles.input} placeholder=\"TODA Name\" value={todaName} onChangeText={setTodaName} />\r\n-        <TouchableOpacity\r\n-          style={styles.customPicker}\r\n-          onPress={() => {\r\n-            setSelectedModalType(\"sector\");\r\n-            setModalVisible(true);\r\n-          }}\r\n-        >\r\n-          <Text style={{ fontSize: 14, color: sector ? \"#000\" : \"#888\" }}>\r\n-            {sector || \"Pumili ng Sector\"}\r\n-          </Text>\r\n-          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity\r\n-          style={styles.customPicker}\r\n-          onPress={() => {\r\n-            setSelectedModalType(\"voter\");\r\n-            setModalVisible(true);\r\n-          }}\r\n-        >\r\n-          <Text style={{ fontSize: 14, color: isLucenaVoter ? \"#000\" : \"#888\" }}>\r\n-            {isLucenaVoter || \"Ikaw ba ay botante ng Lucena city?\"}\r\n-          </Text>\r\n-          <MaterialIcons name=\"keyboard-arrow-down\" size={20} color=\"#888\" />\r\n-        </TouchableOpacity>\r\n-        <TextInput style={styles.input} placeholder=\"Kung hindi saang  lugar ikaw bumoboto?\" value={votingLocation} onChangeText={setVotingLocation} />\r\n-\r\n-        {/* Account Info */}\r\n-        <Text style={styles.header}>Account</Text>\r\n-        <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" autoComplete=\"off\" importantForAutofill=\"no\"/>\r\n-        <TextInput style={styles.input} placeholder=\"Password\" value={password} onChangeText={setPassword} secureTextEntry />\r\n-        <TextInput style={styles.input} placeholder=\"Confirm Password\" value={confirmPassword} onChangeText={setConfirmPassword} secureTextEntry />\r\n-\r\n-        {/* Uploads */}\r\n-        <Text style={styles.header}>Uploads</Text>\r\n-        {/* Other Documents Uploads */}\r\n-        <UploadItem label=\"I-upload ang picture ng iyong Voter's ID o Certificate\" onPress={() => pickImage(setVotersIDImage)} uploaded={!!votersIDImage} />\r\n-        <UploadItem label=\"I-upload ang picture ng iyong Driver's License\" onPress={() => pickImage(setDriversLicenseImage)} uploaded={!!driversLicenseImage} />\r\n-        <UploadItem label=\"I-upload ang picture ng OR at CR ng Tricycle\" onPress={() => pickImage(setOrcrImage)} uploaded={!!orcrImage} />\r\n-\r\n-        <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n-          <Text style={styles.buttonText}>Submit</Text>\r\n-        </TouchableOpacity>\r\n-        <Text style={styles.signupPrompt}>\r\n-          already have an account?{\" \"}\r\n-          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dlogin\")}>\r\n-            Log In\r\n-          </Text>\r\n-        </Text>\r\n-        <View style={styles.footerTextContainer}>\r\n-          <Text style={styles.agreementText}>\r\n-            By signing up, you agree to the \r\n-            <Text style={styles.linkText}> Terms of service </Text>\r\n-            and \r\n-            <Text style={styles.linkText}> Privacy policy.</Text>\r\n-          </Text>\r\n-\r\n-          <Text style={styles.helpTitle}>\r\n-            {\"\\n\"}Kaylangan ng tulong sa registration?\r\n-          </Text>\r\n-          <Text style={styles.helpSubtitle}>\r\n-            Pumunta sa TFRO - Lucena Office upang magpaturo\r\n-          </Text>\r\n-        </View>\r\n-\r\n-\r\n-        {/* models */}\r\n-        <Modal\r\n-          animationType=\"fade\"\r\n-          transparent={true}\r\n-          visible={modalVisible}\r\n-          onRequestClose={() => setModalVisible(false)}\r\n-        >\r\n-          <TouchableOpacity\r\n-            style={styles.modalOverlay}\r\n-            activeOpacity={1}\r\n-            onPressOut={() => setModalVisible(false)}\r\n-          >\r\n-            <View style={styles.modalContent}>\r\n-              {/* Modal Picker Content */}\r\n-              {(() => {\r\n-                let xdata: string[] = [];\r\n-\r\n-                if (selectedModalType === \"experience\") xdata = experienceOptions;\r\n-                else if (selectedModalType === \"role\") xdata = roles;\r\n-                else if (selectedModalType === \"sector\") xdata = sectors;\r\n-                else if (selectedModalType === \"voter\") xdata = voterOptions;\r\n-\r\n-                return (\r\n-                  <>\r\n-                    {xdata.map((option, index) => (\r\n-                      <TouchableOpacity\r\n-                        key={index}\r\n-                        style={styles.optionItem}\r\n-                        onPress={() => {\r\n-                          if (selectedModalType === \"experience\") setExperienceYears(option);\r\n-                          if (selectedModalType === \"role\") {\r\n-                            setRole(option);\r\n-                            if (option === \"Both\") {\r\n-                              setDriverFirstName(operatorFirstName);\r\n-                              setDriverMiddleName(operatorMiddleName);\r\n-                              setDriverLastName(operatorLastName);\r\n-                              setDriverSuffix(operatorSuffix);\r\n-                              setDriverBirthdate(operatorBirthdate);\r\n-                              setDriverPhone(operatorPhone);\r\n-                            }\r\n-                          }\r\n-                          if (selectedModalType === \"sector\") setSector(option);\r\n-                          if (selectedModalType === \"voter\") setIsLucenaVoter(option);\r\n-                          setModalVisible(false);\r\n-                        }}\r\n-                      >\r\n-                        <Text style={styles.optionText}>{option}</Text>\r\n-                      </TouchableOpacity>\r\n-                    ))}\r\n-                  </>\r\n-                );\r\n-              })()}\r\n-            </View>\r\n-          </TouchableOpacity>\r\n-        </Modal>\r\n-\r\n-      </View>\r\n-      \r\n-\r\n-\r\n-    </ScrollView>\r\n-  );\r\n-}\r\n-\r\n-const styles = StyleSheet.create({\r\n-  headerBar: {\r\n-    flexDirection: 'row',\r\n-    alignItems: 'center',\r\n-    paddingTop: Platform.OS === 'ios' ? 60 : 30,\r\n-    paddingBottom: 15,\r\n-    backgroundColor: '#f2f2f2',\r\n-  },\r\n-  headerTitle: {\r\n-    fontSize: 18,\r\n-    fontWeight: 'bold',\r\n-    color: '#414141',\r\n-    width: width,\r\n-    textAlign: 'center'\r\n-  },\r\n-  \r\n-  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n-  header: { marginTop: 20, fontWeight: \"bold\", fontSize: 16 },\r\n-  input: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    padding: 12,\r\n-    marginBottom: 10,\r\n-    borderRadius: 10,\r\n-  },\r\n-  customPicker: {\r\n-    flexDirection: 'row',\r\n-    borderWidth: 1,\r\n-    borderColor: \"#ccc\",\r\n-    borderRadius: 10,\r\n-    paddingVertical: 10,\r\n-    paddingHorizontal: 12,\r\n-    backgroundColor: \"#fff\",\r\n-    marginBottom: 10,\r\n-    justifyContent: \"space-between\", \r\n-    alignItems: \"center\"\r\n-  },\r\n-  \r\n-  modalOverlay: {\r\n-    flex: 1,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n-    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n-  },\r\n-  \r\n-  modalContent: {\r\n-    backgroundColor: \"#fff\",\r\n-    width: \"80%\",\r\n-    borderRadius: 10,\r\n-    padding: 15,\r\n-    elevation: 5,\r\n-  },\r\n-  \r\n-  optionItem: {\r\n-    paddingVertical: 12,\r\n-    borderBottomWidth: 1,\r\n-    borderBottomColor: \"#eee\",\r\n-  },\r\n-  \r\n-  optionText: {\r\n-    fontSize: 16,\r\n-    color: \"#333\",\r\n-  }, \r\n-  button: {\r\n-    backgroundColor: \"#aaa\",\r\n-    padding: 12,\r\n-    borderRadius: 10,\r\n-    marginBottom: 10,\r\n-    alignItems: \"center\",\r\n-  },\r\n-  uploaded: {\r\n-    backgroundColor: \"#4caf50\",\r\n-  },\r\n-  buttonText: {\r\n-    color: \"#fff\",\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  submitButton: {\r\n-    backgroundColor: \"#5089A3\",\r\n-    padding: 15,\r\n-    borderRadius: 10,\r\n-    alignItems: \"center\",\r\n-    marginTop: 20,\r\n-    marginBottom: 20,\r\n-  },\r\n-  signupPrompt: {\r\n-    textAlign: \"center\",\r\n-    fontSize: 14,\r\n-    color: \"#414141\",\r\n-  },\r\n-  signupLink: {\r\n-    color: \"#5089A3\",\r\n-    fontWeight: \"600\",\r\n-  },\r\n-  selfieContainer: {\r\n-    alignItems: 'center',\r\n-    marginBottom: 20,\r\n-  },\r\n-  placeholderCircle: {\r\n-    width: 100,\r\n-    height: 100,\r\n-    borderRadius: 60,\r\n-    backgroundColor: '#D0D0D0',\r\n-    alignItems: 'flex-end',\r\n-    justifyContent: 'flex-end',\r\n-  },\r\n-  icon: {\r\n-    borderRadius: 50,\r\n-    backgroundColor: \"#5089A3\",\r\n-    padding: 5,\r\n-  },\r\n-  selfieImage: {\r\n-    width: 120,\r\n-    height: 120,\r\n-    borderRadius: 60,\r\n-  },\r\n-  uploadRow: {\r\n-    flexDirection: 'row',\r\n-    justifyContent: 'space-between',\r\n-    alignItems: 'center',\r\n-    marginBottom: 15,\r\n-  },\r\n-  uploadLabel: {\r\n-    flex: 1,\r\n-    fontSize: 14,\r\n-    color: '#333',\r\n-  },\r\n-  uploadButton: {\r\n-    backgroundColor: '#5089A3',\r\n-    paddingVertical: 4,\r\n-    paddingHorizontal: 20,\r\n-    borderRadius: 15,\r\n-  },\r\n-  uploadButtonText: {\r\n-    color: '#fff',\r\n-  },  \r\n-  footerTextContainer: {\r\n-    marginTop: 20,\r\n-    alignItems: \"center\",\r\n-    paddingHorizontal: 20,\r\n-  },\r\n-  agreementText: {\r\n-    fontSize: 12,\r\n-    color: \"#999\",\r\n-    textAlign: \"center\",\r\n-  },\r\n-  linkText: {\r\n-    color: \"#1e90ff\",\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  helpTitle: {\r\n-    fontSize: 16,\r\n-    fontWeight: \"bold\",\r\n-    color: \"#000\",\r\n-    textAlign: \"center\",\r\n-  },\r\n-  helpSubtitle: {\r\n-    fontSize: 11,\r\n-    color: \"#333\",\r\n-    textAlign: \"center\",\r\n-    marginTop: 2,\r\n-  },  \r\n-});\r\n"
                }
            ],
            "date": 1744704902866,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default function DriverRegister() {\r\n  const [photo, setPhoto] = useState(null);\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [barangay, setBarangay] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [registrationNumber, setRegistrationNumber] = useState(\"\");\r\n  const [todaName, setTodaName] = useState(\"\");\r\n\r\n  const pickImage = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.canceled) {\r\n      setPhoto(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <TouchableOpacity onPress={pickImage} style={styles.imageContainer}>\r\n        <Image\r\n          source={photo ? { uri: photo } : require(\"../assets/profile-placeholder.png\")}\r\n          style={styles.image}\r\n        />\r\n        <Text style={styles.cameraIcon}>📷</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TextInput style={styles.input} placeholder=\"Buong Pangalan\" value={fullName} onChangeText={setFullName} />\r\n      <TextInput style={styles.input} placeholder=\"Cellphone Number Driver\" value={phone} onChangeText={setPhone} keyboardType=\"phone-pad\" />\r\n      <TextInput style={styles.input} placeholder=\"Email\" value={email} onChangeText={setEmail} keyboardType=\"email-address\" />\r\n      <TextInput style={styles.input} placeholder=\"Street\" value={street} onChangeText={setStreet} />\r\n      <TextInput style={styles.input} placeholder=\"Barangay\" value={barangay} onChangeText={setBarangay} />\r\n      <TextInput style={styles.input} placeholder=\"City\" value={city} onChangeText={setCity} />\r\n      <TextInput style={styles.input} placeholder=\"Province\" value={province} onChangeText={setProvince} />\r\n      <TextInput style={styles.input} placeholder=\"Registration Number\" value={registrationNumber} onChangeText={setRegistrationNumber} />\r\n      <TextInput style={styles.input} placeholder=\"Pangalan ng TODA\" value={todaName} onChangeText={setTodaName} />\r\n\r\n      <TouchableOpacity style={styles.button}>\r\n        <Text style={styles.buttonText}>Register</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  imageContainer: {\r\n    marginBottom: 20,\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n  },\r\n  cameraIcon: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    fontSize: 18,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 10,\r\n    padding: 2,\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    padding: 12,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#1e90ff\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"
        }
    ]
}