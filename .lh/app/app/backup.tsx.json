{
    "sourceFile": "app/app/backup.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744677727672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744679616084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,5 +154,5 @@\n //         padding: 20,\r\n //         fontWeight: \"600\",\r\n //         fontFamily: \"Poppins-SemiBold\",\r\n //     },\r\n-// });\r\n+// }); \r\n"
                }
            ],
            "date": 1744677727672,
            "name": "Commit-0",
            "content": "// import React, { useEffect, useState } from \"react\";\r\n// import { \r\n//     View, Text, Image, ImageBackground, StyleSheet, \r\n//     Dimensions, TouchableOpacity, Alert, Linking\r\n// } from \"react-native\";\r\n// import * as Location from \"expo-location\";\r\n// import { useRouter } from \"expo-router\";\r\n\r\n// const { width, height } = Dimensions.get(\"window\");\r\n\r\n// export default function EL() {\r\n//     const router = useRouter();\r\n//     const [isLocationEnabled, setIsLocationEnabled] = useState(false);\r\n\r\n//     // Check and request location permission\r\n//     const checkLocationPermission = async () => {\r\n//         const { status, canAskAgain } = await Location.getForegroundPermissionsAsync();\r\n//         const isEnabled = await Location.hasServicesEnabledAsync();\r\n\r\n//         if (status === \"granted\" && isEnabled) {\r\n//             setIsLocationEnabled(true);\r\n//             Alert.alert(\"Location Already Enabled\", \"Proceeding to Login...\", [\r\n//                 { text: \"OK\", onPress: () => router.push(\"/location/welcome\") } \r\n//             ]);\r\n//         } else if (status !== \"granted\" && canAskAgain) {\r\n//             // If permission can be asked again, request it\r\n//             requestLocationPermission();\r\n//         } else {\r\n//             // If permission was permanently denied, prompt user to open settings\r\n//             Alert.alert(\r\n//                 \"Location Access Denied\",\r\n//                 \"You have permanently denied location access. Please enable it in settings.\",\r\n//                 [\r\n//                     { text: \"Open Settings\", onPress: () => Linking.openSettings() },\r\n//                     { text: \"Cancel\", style: \"cancel\" }\r\n//                 ]\r\n//             );\r\n//         }\r\n//     };\r\n\r\n//     // Request location permission\r\n//     const requestLocationPermission = async () => {\r\n//         const { status } = await Location.requestForegroundPermissionsAsync();\r\n        \r\n//         if (status !== \"granted\") {\r\n//             Alert.alert(\"Location Access Denied\", \"Please enable location services in your settings.\", [\r\n//                 { text: \"OK\" }\r\n//             ]);\r\n//             return;\r\n//         }\r\n\r\n//         // Get user's location\r\n//         const location = await Location.getCurrentPositionAsync({});\r\n//         console.log(\"User's location:\", location);\r\n\r\n//         // Show success alert and navigate\r\n//         Alert.alert(\"Location Enabled\", \"Your location has been accessed successfully.\", [\r\n//             { text: \"OK\", onPress: () => router.push(\"/location/welcome\") } \r\n//         ]);\r\n//     };\r\n\r\n//     // Check location permission on mount\r\n//     useEffect(() => {\r\n//         checkLocationPermission();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             <ImageBackground source={require(\"../assets/images/loc2.png\")} style={styles.background}>\r\n//                 <View style={styles.overlay} />\r\n//                 <View style={styles.content}>\r\n//                     <View>\r\n//                         <Image style={styles.loc} source={require(\"../assets/images/loc.png\")} />\r\n//                     </View>\r\n//                     <Text style={styles.title}>Enable your location</Text>\r\n//                     <Text style={styles.subtitle}>\r\n//                         Choose your location to start finding requests around you.\r\n//                     </Text>\r\n//                     <TouchableOpacity style={styles.button} onPress={requestLocationPermission}>\r\n//                         <Text style={styles.btntext}>Use my location</Text>\r\n//                     </TouchableOpacity>\r\n//                     <TouchableOpacity style={{ marginBottom: 40 }}>\r\n//                         <Text style={styles.btntext2}>Skip for now</Text>\r\n//                     </TouchableOpacity>\r\n//                 </View>\r\n//             </ImageBackground>\r\n//         </View>\r\n//     );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//         marginTop: 40,\r\n//     },\r\n//     background: {\r\n//         width: width,\r\n//         height: height,\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//     },\r\n//     overlay: {\r\n//         ...StyleSheet.absoluteFillObject,\r\n//         backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n//     },\r\n//     content: {\r\n//         width: width - 50,\r\n//         backgroundColor: \"white\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         borderRadius: 10,\r\n//         zIndex: 1,\r\n//     },\r\n//     loc: {\r\n//         margin: 50,\r\n//         height: 180,\r\n//         width: 180,\r\n//     },\r\n//     title: {\r\n//         fontSize: 27,\r\n//         fontWeight: \"800\",\r\n//         color: \"#414141\",\r\n//         textAlign: \"center\",\r\n//         fontFamily: \"Poppins-SemiBold\",\r\n//     },\r\n//     subtitle: {\r\n//         fontSize: 16,\r\n//         fontWeight: \"400\",\r\n//         color: \"#A0A0A0\",\r\n//         textAlign: \"center\",\r\n//         marginTop: 10,\r\n//         marginHorizontal: 30,\r\n//         fontFamily: \"Poppins-Regular\",\r\n//     },\r\n//     button: {\r\n//         width: \"90%\",\r\n//         margin: 30,\r\n//     },\r\n//     btntext: {\r\n//         textAlign: \"center\",\r\n//         color: \"#FFFFFF\",\r\n//         backgroundColor: \"#5089A3\",\r\n//         borderRadius: 10,\r\n//         fontSize: 20,\r\n//         padding: 20,\r\n//         fontWeight: \"600\",\r\n//         fontFamily: \"Poppins-SemiBold\",\r\n//     },\r\n//     btntext2: {\r\n//         textAlign: \"center\",\r\n//         color: \"#B8B8B8\",\r\n//         borderRadius: 10,\r\n//         fontSize: 20,\r\n//         padding: 20,\r\n//         fontWeight: \"600\",\r\n//         fontFamily: \"Poppins-SemiBold\",\r\n//     },\r\n// });\r\n"
        }
    ]
}