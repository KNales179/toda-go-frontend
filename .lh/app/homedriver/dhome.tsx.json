{
    "sourceFile": "app/homedriver/dhome.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 94,
            "patches": [
                {
                    "date": 1745800679436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745810764507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,91 @@\n-import React from \"react\";\r\n-import { View, Text, StyleSheet, TouchableOpacity, StatusBar } from \"react-native\";\r\n-import { useRouter } from \"expo-router\";\r\n+import React, { useEffect, useState } from 'react';\r\n+import { View, Text, Switch, StyleSheet, Dimensions } from 'react-native';\r\n+import MapView, { Marker } from 'react-native-maps';\r\n+import { useLocation } from '../location/GlobalLocation'; // Assuming you already made this hook\r\n \r\n+const { width, height } = Dimensions.get('window');\r\n+\r\n export default function DHome() {\r\n-  const router = useRouter();\r\n+  const { location } = useLocation(); // Getting location from your GlobalLocation\r\n+  const [isOnline, setIsOnline] = useState(false); // Driver availability\r\n \r\n+  const toggleSwitch = () => setIsOnline(previousState => !previousState);\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n-      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n+      {/* Map */}\r\n+      <MapView\r\n+        style={styles.map}\r\n+        region={{\r\n+          latitude: location?.latitude || 13.9322,  // Default to Lucena\r\n+          longitude: location?.longitude || 121.6143,\r\n+          latitudeDelta: 0.01,\r\n+          longitudeDelta: 0.01,\r\n+        }}\r\n+        showsUserLocation\r\n+      >\r\n+        {location && (\r\n+          <Marker coordinate={{ latitude: location.latitude, longitude: location.longitude }} />\r\n+        )}\r\n+      </MapView>\r\n \r\n-      <Text style={styles.title}>Welcome, Driver!</Text>\r\n+      {/* Status Bar */}\r\n+      <View style={styles.statusBar}>\r\n+        <Switch\r\n+          trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n+          thumbColor={isOnline ? '#000' : '#f4f3f4'}\r\n+          ios_backgroundColor=\"#3e3e3e\"\r\n+          onValueChange={toggleSwitch}\r\n+          value={isOnline}\r\n+        />\r\n+        <View style={{ marginLeft: 10 }}>\r\n+          <Text style={styles.statusText}>\r\n+            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n+          </Text>\r\n+        </View>\r\n+      </View>\r\n \r\n-      <TouchableOpacity style={styles.button} onPress={() => router.back()}>\r\n-        <Text style={styles.buttonText}>Log Out</Text>\r\n-      </TouchableOpacity>\r\n+      {/* Future Ride Request Card Placeholder */}\r\n+      {/* <View style={styles.rideRequestCard}></View> */}\r\n \r\n-      {/* You can later add more driver-specific features here */}\r\n     </View>\r\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: { \r\n-    flex: 1, \r\n-    justifyContent: \"center\", \r\n-    alignItems: \"center\", \r\n-    backgroundColor: \"#f5f5f5\" \r\n+  container: {\r\n+    flex: 1,\r\n   },\r\n-  title: { \r\n-    fontSize: 24, \r\n-    fontWeight: \"bold\", \r\n-    marginBottom: 30, \r\n-    color: \"#333\" \r\n+  map: {\r\n+    width: width,\r\n+    height: height,\r\n   },\r\n-  button: {\r\n-    backgroundColor: \"#5089A3\",\r\n-    paddingVertical: 12,\r\n-    paddingHorizontal: 25,\r\n-    borderRadius: 8,\r\n+  statusBar: {\r\n+    position: 'absolute',\r\n+    bottom: 80,\r\n+    backgroundColor: '#81b0ff',\r\n+    width: width,\r\n+    padding: 10,\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n   },\r\n-  buttonText: { \r\n-    color: \"#fff\", \r\n-    fontSize: 16, \r\n-    fontWeight: \"bold\" \r\n+  statusText: {\r\n+    color: 'black',\r\n+    fontSize: 16,\r\n+    fontWeight: '500',\r\n   },\r\n+  rideRequestCard: {\r\n+    position: 'absolute',\r\n+    top: 100, // We'll position this properly later\r\n+    alignSelf: 'center',\r\n+    backgroundColor: 'white',\r\n+    padding: 20,\r\n+    borderRadius: 10,\r\n+    width: width * 0.9,\r\n+    shadowColor: '#000',\r\n+    shadowOffset: { width: 0, height: 2 },\r\n+    shadowOpacity: 0.25,\r\n+    shadowRadius: 3.84,\r\n+    elevation: 5,\r\n+  }\r\n });\r\n"
                },
                {
                    "date": 1745811157258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n import React, { useEffect, useState } from 'react';\r\n-import { View, Text, Switch, StyleSheet, Dimensions } from 'react-native';\r\n+import { View, Text, Switch, StyleSheet, Dimensions, TouchableOpacity, Image } from 'react-native';\r\n import MapView, { Marker } from 'react-native-maps';\r\n-import { useLocation } from '../location/GlobalLocation'; // Assuming you already made this hook\r\n+import { useLocation  } from '../location/GlobalLocation'; // Your Global Location\r\n \r\n const { width, height } = Dimensions.get('window');\r\n \r\n export default function DHome() {\r\n-  const { location } = useLocation(); // Getting location from your GlobalLocation\r\n-  const [isOnline, setIsOnline] = useState(false); // Driver availability\r\n+  const { location } = useLocation ();\r\n+  const [isOnline, setIsOnline] = useState(false);\r\n \r\n   const toggleSwitch = () => setIsOnline(previousState => !previousState);\r\n \r\n   return (\r\n@@ -16,9 +16,9 @@\n       {/* Map */}\r\n       <MapView\r\n         style={styles.map}\r\n         region={{\r\n-          latitude: location?.latitude || 13.9322,  // Default to Lucena\r\n+          latitude: location?.latitude || 13.9322,\r\n           longitude: location?.longitude || 121.6143,\r\n           latitudeDelta: 0.01,\r\n           longitudeDelta: 0.01,\r\n         }}\r\n@@ -44,10 +44,27 @@\n           </Text>\r\n         </View>\r\n       </View>\r\n \r\n-      {/* Future Ride Request Card Placeholder */}\r\n-      {/* <View style={styles.rideRequestCard}></View> */}\r\n+      {/* Driver Bottom Navigation */}\r\n+      <View style={styles.bottomNavbar}>\r\n+        <TouchableOpacity style={styles.navButton}>\r\n+          <Image source={require('../../assets/home.png')} style={styles.icon} />\r\n+          <Text style={styles.navText}>Home</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity style={styles.navButton}>\r\n+          <Image source={require('../../assets/history.png')} style={styles.icon} />\r\n+          <Text style={styles.navText}>History</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity style={styles.navButton}>\r\n+          <Image source={require('../../assets/chat.png')} style={styles.icon} />\r\n+          <Text style={styles.navText}>Chats</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity style={styles.navButton}>\r\n+          <Image source={require('../../assets/profile.png')} style={styles.icon} />\r\n+          <Text style={styles.navText}>Profile</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n \r\n     </View>\r\n   );\r\n }\r\n@@ -61,9 +78,9 @@\n     height: height,\r\n   },\r\n   statusBar: {\r\n     position: 'absolute',\r\n-    bottom: 80,\r\n+    bottom: 130,\r\n     backgroundColor: '#81b0ff',\r\n     width: width,\r\n     padding: 10,\r\n     flexDirection: 'row',\r\n@@ -73,19 +90,35 @@\n     color: 'black',\r\n     fontSize: 16,\r\n     fontWeight: '500',\r\n   },\r\n-  rideRequestCard: {\r\n+  bottomNavbar: {\r\n     position: 'absolute',\r\n-    top: 100, // We'll position this properly later\r\n-    alignSelf: 'center',\r\n+    bottom: 0,\r\n     backgroundColor: 'white',\r\n-    padding: 20,\r\n-    borderRadius: 10,\r\n-    width: width * 0.9,\r\n+    width: width,\r\n+    height: 80,\r\n+    borderTopLeftRadius: 20,\r\n+    borderTopRightRadius: 20,\r\n+    flexDirection: 'row',\r\n+    justifyContent: 'space-around',\r\n+    alignItems: 'center',\r\n+    elevation: 10,\r\n     shadowColor: '#000',\r\n-    shadowOffset: { width: 0, height: 2 },\r\n-    shadowOpacity: 0.25,\r\n-    shadowRadius: 3.84,\r\n-    elevation: 5,\r\n+    shadowOffset: { width: 0, height: -2 },\r\n+    shadowOpacity: 0.1,\r\n+    shadowRadius: 5,\r\n+  },\r\n+  navButton: {\r\n+    alignItems: 'center',\r\n+    justifyContent: 'center',\r\n+  },\r\n+  navText: {\r\n+    fontSize: 12,\r\n+    marginTop: 4,\r\n+    color: 'black',\r\n+  },\r\n+  icon: {\r\n+    width: 24,\r\n+    height: 24,\r\n   }\r\n });\r\n"
                },
                {
                    "date": 1745811350201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import { View, Text, Switch, StyleSheet, Dimensions, TouchableOpacity, Image } from 'react-native';\r\n import MapView, { Marker } from 'react-native-maps';\r\n+import { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\n import { useLocation  } from '../location/GlobalLocation'; // Your Global Location\r\n \r\n const { width, height } = Dimensions.get('window');\r\n \r\n@@ -45,27 +46,28 @@\n         </View>\r\n       </View>\r\n \r\n       {/* Driver Bottom Navigation */}\r\n-      <View style={styles.bottomNavbar}>\r\n-        <TouchableOpacity style={styles.navButton}>\r\n-          <Image source={require('../../assets/home.png')} style={styles.icon} />\r\n-          <Text style={styles.navText}>Home</Text>\r\n+    <View style={styles.bottomNav}>\r\n+        <TouchableOpacity>\r\n+            <Ionicons name=\"home\" size={30} color=\"black\" />\r\n+            <Text>Home</Text>\r\n         </TouchableOpacity>\r\n-        <TouchableOpacity style={styles.navButton}>\r\n-          <Image source={require('../../assets/history.png')} style={styles.icon} />\r\n-          <Text style={styles.navText}>History</Text>\r\n+        <TouchableOpacity>\r\n+            <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n+            <Text>History</Text>\r\n         </TouchableOpacity>\r\n-        <TouchableOpacity style={styles.navButton}>\r\n-          <Image source={require('../../assets/chat.png')} style={styles.icon} />\r\n-          <Text style={styles.navText}>Chats</Text>\r\n+        <TouchableOpacity>\r\n+            <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n+            <Text>Chats</Text>\r\n         </TouchableOpacity>\r\n-        <TouchableOpacity style={styles.navButton}>\r\n-          <Image source={require('../../assets/profile.png')} style={styles.icon} />\r\n-          <Text style={styles.navText}>Profile</Text>\r\n+        <TouchableOpacity>\r\n+            <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n+            <Text>Profile</Text>\r\n         </TouchableOpacity>\r\n-      </View>\r\n+    </View>\r\n \r\n+\r\n     </View>\r\n   );\r\n }\r\n \r\n@@ -120,5 +122,20 @@\n   icon: {\r\n     width: 24,\r\n     height: 24,\r\n   }\r\n+  bottomNav: {\r\n+    position: \"absolute\",\r\n+    bottom: 0,\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-around\",\r\n+    width: width,\r\n+    height: 70,\r\n+    backgroundColor: \"white\",\r\n+    borderTopLeftRadius: 30,\r\n+    borderTopRightRadius: 30,\r\n+    alignItems: \"center\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"black\",\r\n+  }\r\n+  \r\n });\r\n"
                },
                {
                    "date": 1745811361092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n   },\r\n   icon: {\r\n     width: 24,\r\n     height: 24,\r\n-  }\r\n+  },\r\n   bottomNav: {\r\n     position: \"absolute\",\r\n     bottom: 0,\r\n     flexDirection: \"row\",\r\n"
                },
                {
                    "date": 1745811416782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,25 +92,8 @@\n     color: 'black',\r\n     fontSize: 16,\r\n     fontWeight: '500',\r\n   },\r\n-  bottomNavbar: {\r\n-    position: 'absolute',\r\n-    bottom: 0,\r\n-    backgroundColor: 'white',\r\n-    width: width,\r\n-    height: 80,\r\n-    borderTopLeftRadius: 20,\r\n-    borderTopRightRadius: 20,\r\n-    flexDirection: 'row',\r\n-    justifyContent: 'space-around',\r\n-    alignItems: 'center',\r\n-    elevation: 10,\r\n-    shadowColor: '#000',\r\n-    shadowOffset: { width: 0, height: -2 },\r\n-    shadowOpacity: 0.1,\r\n-    shadowRadius: 5,\r\n-  },\r\n   navButton: {\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n   },\r\n"
                },
                {
                    "date": 1745811436528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     height: height,\r\n   },\r\n   statusBar: {\r\n     position: 'absolute',\r\n-    bottom: 130,\r\n+    bottom: 80,\r\n     backgroundColor: '#81b0ff',\r\n     width: width,\r\n     padding: 10,\r\n     flexDirection: 'row',\r\n"
                },
                {
                    "date": 1745811452316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     height: height,\r\n   },\r\n   statusBar: {\r\n     position: 'absolute',\r\n-    bottom: 80,\r\n+    bottom: 75,\r\n     backgroundColor: '#81b0ff',\r\n     width: width,\r\n     padding: 10,\r\n     flexDirection: 'row',\r\n"
                },
                {
                    "date": 1745811462449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n   },\r\n   statusBar: {\r\n     position: 'absolute',\r\n     bottom: 75,\r\n-    backgroundColor: '#81b0ff',\r\n+    backgroundColor: '#80C3E1',\r\n     width: width,\r\n     padding: 10,\r\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n"
                },
                {
                    "date": 1745811487949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     alignItems: 'center',\r\n   },\r\n   statusText: {\r\n     color: 'black',\r\n-    fontSize: 16,\r\n+    fontSize: 14,\r\n     fontWeight: '500',\r\n   },\r\n   navButton: {\r\n     alignItems: 'center',\r\n"
                },
                {
                    "date": 1745811498596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n     position: 'absolute',\r\n     bottom: 75,\r\n     backgroundColor: '#80C3E1',\r\n     width: width,\r\n-    padding: 10,\r\n+    padding: 5,\r\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n   },\r\n   statusText: {\r\n"
                },
                {
                    "date": 1745811504082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n     position: 'absolute',\r\n     bottom: 75,\r\n     backgroundColor: '#80C3E1',\r\n     width: width,\r\n-    padding: 5,\r\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n   },\r\n   statusText: {\r\n"
                },
                {
                    "date": 1745811509632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n     position: 'absolute',\r\n     bottom: 75,\r\n     backgroundColor: '#80C3E1',\r\n     width: width,\r\n+    padding: 5,\r\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n   },\r\n   statusText: {\r\n"
                },
                {
                    "date": 1745811700206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,13 +32,14 @@\n \r\n       {/* Status Bar */}\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n-          trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n-          thumbColor={isOnline ? '#000' : '#f4f3f4'}\r\n-          ios_backgroundColor=\"#3e3e3e\"\r\n-          onValueChange={toggleSwitch}\r\n-          value={isOnline}\r\n+            style={styles.switch}\r\n+            trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n+            thumbColor={isOnline ? '#000' : '#f4f3f4'}\r\n+            ios_backgroundColor=\"#3e3e3e\"\r\n+            onValueChange={toggleSwitch}\r\n+            value={isOnline}\r\n         />\r\n         <View style={{ marginLeft: 10 }}>\r\n           <Text style={styles.statusText}>\r\n             {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n@@ -92,8 +93,11 @@\n     color: 'black',\r\n     fontSize: 14,\r\n     fontWeight: '500',\r\n   },\r\n+  switch: {\r\n+    height: 30,\r\n+  },\r\n   navButton: {\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n   },\r\n"
                },
                {
                    "date": 1745811772610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       <View style={styles.statusBar}>\r\n         <Switch\r\n             style={styles.switch}\r\n             trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n-            thumbColor={isOnline ? '#000' : '#f4f3f4'}\r\n+            thumbColor={isOnline ? '#000' : '#80C3E1'}\r\n             ios_backgroundColor=\"#3e3e3e\"\r\n             onValueChange={toggleSwitch}\r\n             value={isOnline}\r\n         />\r\n"
                },
                {
                    "date": 1745811781122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       <View style={styles.statusBar}>\r\n         <Switch\r\n             style={styles.switch}\r\n             trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n-            thumbColor={isOnline ? '#000' : '#80C3E1'}\r\n+            thumbColor={isOnline ? '#80C3E1' : '#f4f3f4'}\r\n             ios_backgroundColor=\"#3e3e3e\"\r\n             onValueChange={toggleSwitch}\r\n             value={isOnline}\r\n         />\r\n"
                },
                {
                    "date": 1745811805406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       {/* Status Bar */}\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n             style={styles.switch}\r\n-            trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n+            trackColor={{ false: '#f4f3f4', true: '#80C3E1' }}\r\n             thumbColor={isOnline ? '#80C3E1' : '#f4f3f4'}\r\n             ios_backgroundColor=\"#3e3e3e\"\r\n             onValueChange={toggleSwitch}\r\n             value={isOnline}\r\n"
                },
                {
                    "date": 1745811814214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       {/* Status Bar */}\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n             style={styles.switch}\r\n-            trackColor={{ false: '#f4f3f4', true: '#80C3E1' }}\r\n+            trackColor={{ false: '#80C3E1', true: '#f4f3f4' }}\r\n             thumbColor={isOnline ? '#80C3E1' : '#f4f3f4'}\r\n             ios_backgroundColor=\"#3e3e3e\"\r\n             onValueChange={toggleSwitch}\r\n             value={isOnline}\r\n"
                },
                {
                    "date": 1745811832873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,10 @@\n       {/* Status Bar */}\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n             style={styles.switch}\r\n-            trackColor={{ false: '#80C3E1', true: '#f4f3f4' }}\r\n-            thumbColor={isOnline ? '#80C3E1' : '#f4f3f4'}\r\n+            trackColor={{ false: '#ccc', true: '#f4f3f4' }}\r\n+            thumbColor={isOnline ? '#ccc' : '#f4f3f4'}\r\n             ios_backgroundColor=\"#3e3e3e\"\r\n             onValueChange={toggleSwitch}\r\n             value={isOnline}\r\n         />\r\n"
                },
                {
                    "date": 1745811840284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       {/* Status Bar */}\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n             style={styles.switch}\r\n-            trackColor={{ false: '#ccc', true: '#f4f3f4' }}\r\n+            trackColor={{ false: '#black', true: '#f4f3f4' }}\r\n             thumbColor={isOnline ? '#ccc' : '#f4f3f4'}\r\n             ios_backgroundColor=\"#3e3e3e\"\r\n             onValueChange={toggleSwitch}\r\n             value={isOnline}\r\n"
                },
                {
                    "date": 1745811847431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,10 @@\n       {/* Status Bar */}\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n             style={styles.switch}\r\n-            trackColor={{ false: '#black', true: '#f4f3f4' }}\r\n-            thumbColor={isOnline ? '#ccc' : '#f4f3f4'}\r\n+            trackColor={{ false: 'black', true: '#f4f3f4' }}\r\n+            thumbColor={isOnline ? 'black' : '#f4f3f4'}\r\n             ios_backgroundColor=\"#3e3e3e\"\r\n             onValueChange={toggleSwitch}\r\n             value={isOnline}\r\n         />\r\n"
                },
                {
                    "date": 1745811874717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n     fontSize: 14,\r\n     fontWeight: '500',\r\n   },\r\n   switch: {\r\n-    height: 30,\r\n+    height: 50,\r\n   },\r\n   navButton: {\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n"
                },
                {
                    "date": 1745812068360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,60 +13,61 @@\n   const toggleSwitch = () => setIsOnline(previousState => !previousState);\r\n \r\n   return (\r\n     <View style={styles.container}>\r\n-      {/* Map */}\r\n-      <MapView\r\n-        style={styles.map}\r\n-        region={{\r\n-          latitude: location?.latitude || 13.9322,\r\n-          longitude: location?.longitude || 121.6143,\r\n-          latitudeDelta: 0.01,\r\n-          longitudeDelta: 0.01,\r\n-        }}\r\n-        showsUserLocation\r\n-      >\r\n-        {location && (\r\n-          <Marker coordinate={{ latitude: location.latitude, longitude: location.longitude }} />\r\n-        )}\r\n-      </MapView>\r\n+        {/* Map */}\r\n+        <MapView\r\n+            style={styles.map}\r\n+            region={{\r\n+            latitude: location?.latitude || 13.9322,\r\n+            longitude: location?.longitude || 121.6143,\r\n+            latitudeDelta: 0.01,\r\n+            longitudeDelta: 0.01,\r\n+            }}\r\n+            showsUserLocation\r\n+        >\r\n+            {location && (\r\n+                <Marker coordinate={{ latitude: location.latitude, longitude: location.longitude }} />\r\n+            )}\r\n+        </MapView>\r\n \r\n-      {/* Status Bar */}\r\n-      <View style={styles.statusBar}>\r\n-        <Switch\r\n-            style={styles.switch}\r\n-            trackColor={{ false: 'black', true: '#f4f3f4' }}\r\n-            thumbColor={isOnline ? 'black' : '#f4f3f4'}\r\n-            ios_backgroundColor=\"#3e3e3e\"\r\n-            onValueChange={toggleSwitch}\r\n-            value={isOnline}\r\n-        />\r\n-        <View style={{ marginLeft: 10 }}>\r\n-          <Text style={styles.statusText}>\r\n-            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n-          </Text>\r\n+        {/* Status Bar */}\r\n+        <View style={styles.statusBar}>\r\n+            <Switch\r\n+                style={styles.switch}\r\n+                trackColor={{ false: \"#000000\", true: \"#000000\" }}  // make track black always\r\n+                thumbColor={isOnline ? \"#ffffff\" : \"#ffffff\"}       // make thumb white always\r\n+                ios_backgroundColor=\"#000000\"                       // black background for iOS\r\n+                onValueChange={toggleSwitch}\r\n+                value={isOnline}\r\n+            />\r\n+\r\n+            <View style={{ marginLeft: 10 }}>\r\n+                <Text style={styles.statusText}>\r\n+                    {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n+                </Text>\r\n+            </View>\r\n         </View>\r\n-      </View>\r\n \r\n-      {/* Driver Bottom Navigation */}\r\n-    <View style={styles.bottomNav}>\r\n-        <TouchableOpacity>\r\n-            <Ionicons name=\"home\" size={30} color=\"black\" />\r\n-            <Text>Home</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity>\r\n-            <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n-            <Text>History</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity>\r\n-            <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n-            <Text>Chats</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity>\r\n-            <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n-            <Text>Profile</Text>\r\n-        </TouchableOpacity>\r\n-    </View>\r\n+        {/* Driver Bottom Navigation */}\r\n+        <View style={styles.bottomNav}>\r\n+            <TouchableOpacity>\r\n+                <Ionicons name=\"home\" size={30} color=\"black\" />\r\n+                <Text>Home</Text>\r\n+            </TouchableOpacity>\r\n+            <TouchableOpacity>\r\n+                <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n+                <Text>History</Text>\r\n+            </TouchableOpacity>\r\n+            <TouchableOpacity>\r\n+                <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n+                <Text>Chats</Text>\r\n+            </TouchableOpacity>\r\n+            <TouchableOpacity>\r\n+                <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n+                <Text>Profile</Text>\r\n+            </TouchableOpacity>\r\n+        </View>\r\n \r\n \r\n     </View>\r\n   );\r\n@@ -94,10 +95,11 @@\n     fontSize: 14,\r\n     fontWeight: '500',\r\n   },\r\n   switch: {\r\n-    height: 50,\r\n-  },\r\n+    transform: [{ scaleX: 1.5 }, { scaleY: 1.5 }], // make the switch bigger like in your PNG\r\n+    marginRight: 10,\r\n+  },  \r\n   navButton: {\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n   },\r\n"
                },
                {
                    "date": 1745812177030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,16 +32,17 @@\n \r\n         {/* Status Bar */}\r\n         <View style={styles.statusBar}>\r\n             <Switch\r\n-                style={styles.switch}\r\n-                trackColor={{ false: \"#000000\", true: \"#000000\" }}  // make track black always\r\n-                thumbColor={isOnline ? \"#ffffff\" : \"#ffffff\"}       // make thumb white always\r\n-                ios_backgroundColor=\"#000000\"                       // black background for iOS\r\n+                style={{ marginRight: 10 }}\r\n+                trackColor={{ false: 'black', true: 'black' }}\r\n+                thumbColor=\"white\"\r\n+                ios_backgroundColor=\"black\"\r\n                 onValueChange={toggleSwitch}\r\n                 value={isOnline}\r\n             />\r\n \r\n+\r\n             <View style={{ marginLeft: 10 }}>\r\n                 <Text style={styles.statusText}>\r\n                     {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n                 </Text>\r\n"
                },
                {
                    "date": 1745812276550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         {/* Status Bar */}\r\n         <View style={styles.statusBar}>\r\n             <Switch\r\n                 style={{ marginRight: 10 }}\r\n-                trackColor={{ false: 'black', true: 'black' }}\r\n+                trackColor={{ false: '#ccc', true: 'black' }}\r\n                 thumbColor=\"white\"\r\n                 ios_backgroundColor=\"black\"\r\n                 onValueChange={toggleSwitch}\r\n                 value={isOnline}\r\n"
                },
                {
                    "date": 1745812423178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         {/* Status Bar */}\r\n         <View style={styles.statusBar}>\r\n             <Switch\r\n                 style={{ marginRight: 10 }}\r\n-                trackColor={{ false: '#ccc', true: 'black' }}\r\n+                trackColor={{ false: '#ccc', true: '#46cc33' }}\r\n                 thumbColor=\"white\"\r\n                 ios_backgroundColor=\"black\"\r\n                 onValueChange={toggleSwitch}\r\n                 value={isOnline}\r\n"
                },
                {
                    "date": 1745812438871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         {/* Status Bar */}\r\n         <View style={styles.statusBar}>\r\n             <Switch\r\n                 style={{ marginRight: 10 }}\r\n-                trackColor={{ false: '#ccc', true: '#46cc33' }}\r\n+                trackColor={{ false: '#ccc', true: '#37982a' }}\r\n                 thumbColor=\"white\"\r\n                 ios_backgroundColor=\"black\"\r\n                 onValueChange={toggleSwitch}\r\n                 value={isOnline}\r\n"
                },
                {
                    "date": 1745812487281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect, useState } from 'react';\r\n-import { View, Text, Switch, StyleSheet, Dimensions, TouchableOpacity, Image } from 'react-native';\r\n+import { View, Text, Switch, StyleSheet, Dimensions, TouchableOpacity, StatusBar } from 'react-native';\r\n import MapView, { Marker } from 'react-native-maps';\r\n import { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\n import { useLocation  } from '../location/GlobalLocation'; // Your Global Location\r\n \r\n@@ -13,8 +13,11 @@\n   const toggleSwitch = () => setIsOnline(previousState => !previousState);\r\n \r\n   return (\r\n     <View style={styles.container}>\r\n+        <View style={{paddingTop: 30}}>\r\n+            <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+        </View>\r\n         {/* Map */}\r\n         <MapView\r\n             style={styles.map}\r\n             region={{\r\n"
                },
                {
                    "date": 1747237699526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,79 +1,111 @@\n-import React, { useEffect, useState } from 'react';\r\n-import { View, Text, Switch, StyleSheet, Dimensions, TouchableOpacity, StatusBar } from 'react-native';\r\n-import MapView, { Marker } from 'react-native-maps';\r\n-import { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\n-import { useLocation  } from '../location/GlobalLocation'; // Your Global Location\r\n+import React, { useEffect, useState, useRef } from 'react';\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  Switch,\r\n+  StyleSheet,\r\n+  Dimensions,\r\n+  TouchableOpacity,\r\n+  StatusBar,\r\n+} from 'react-native';\r\n+import { Ionicons } from \"@expo/vector-icons\";\r\n+import { WebView } from \"react-native-webview\";\r\n+import type { WebView as WebViewType } from \"react-native-webview\";\r\n+import { useLocation } from '../location/GlobalLocation';\r\n \r\n const { width, height } = Dimensions.get('window');\r\n \r\n export default function DHome() {\r\n-  const { location } = useLocation ();\r\n+  const { location } = useLocation();\r\n   const [isOnline, setIsOnline] = useState(false);\r\n+  const [mapHtml, setMapHtml] = useState(\"\");\r\n+  const mapRef = useRef<WebViewType | null>(null);\r\n \r\n-  const toggleSwitch = () => setIsOnline(previousState => !previousState);\r\n+  const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n+  useEffect(() => {\r\n+    if (!location) return;\r\n+\r\n+    const html = `\r\n+      <!DOCTYPE html>\r\n+      <html>\r\n+        <head>\r\n+          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+          <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\" />\r\n+          <style> html, body, #map { height: 100%; margin: 0; padding: 0; } </style>\r\n+        </head>\r\n+        <body>\r\n+          <div id=\"map\"></div>\r\n+          <script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"></script>\r\n+          <script>\r\n+            const map = L.map('map').setView([${location.latitude}, ${location.longitude}], 15);\r\n+            L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n+              maxZoom: 19,\r\n+              attribution: '© OpenStreetMap contributors'\r\n+            }).addTo(map);\r\n+\r\n+            L.marker([${location.latitude}, ${location.longitude}]).addTo(map);\r\n+          </script>\r\n+        </body>\r\n+      </html>\r\n+    `;\r\n+\r\n+    setMapHtml(html);\r\n+  }, [location]);\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n-        <View style={{paddingTop: 30}}>\r\n-            <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n-        </View>\r\n-        {/* Map */}\r\n-        <MapView\r\n-            style={styles.map}\r\n-            region={{\r\n-            latitude: location?.latitude || 13.9322,\r\n-            longitude: location?.longitude || 121.6143,\r\n-            latitudeDelta: 0.01,\r\n-            longitudeDelta: 0.01,\r\n-            }}\r\n-            showsUserLocation\r\n-        >\r\n-            {location && (\r\n-                <Marker coordinate={{ latitude: location.latitude, longitude: location.longitude }} />\r\n-            )}\r\n-        </MapView>\r\n+      <View style={{ paddingTop: 30 }}>\r\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+      </View>\r\n \r\n-        {/* Status Bar */}\r\n-        <View style={styles.statusBar}>\r\n-            <Switch\r\n-                style={{ marginRight: 10 }}\r\n-                trackColor={{ false: '#ccc', true: '#37982a' }}\r\n-                thumbColor=\"white\"\r\n-                ios_backgroundColor=\"black\"\r\n-                onValueChange={toggleSwitch}\r\n-                value={isOnline}\r\n-            />\r\n+      {mapHtml && (\r\n+        <WebView\r\n+          ref={(ref) => {\r\n+            if (ref && !mapRef.current) mapRef.current = ref;\r\n+          }}\r\n+          originWhitelist={[\"*\"]}\r\n+          source={{ html: mapHtml }}\r\n+          javaScriptEnabled\r\n+          style={styles.map}\r\n+        />\r\n+      )}\r\n \r\n-\r\n-            <View style={{ marginLeft: 10 }}>\r\n-                <Text style={styles.statusText}>\r\n-                    {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n-                </Text>\r\n-            </View>\r\n+      <View style={styles.statusBar}>\r\n+        <Switch\r\n+          style={{ marginRight: 10 }}\r\n+          trackColor={{ false: '#ccc', true: '#37982a' }}\r\n+          thumbColor=\"white\"\r\n+          ios_backgroundColor=\"black\"\r\n+          onValueChange={toggleSwitch}\r\n+          value={isOnline}\r\n+        />\r\n+        <View style={{ marginLeft: 10 }}>\r\n+          <Text style={styles.statusText}>\r\n+            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n+          </Text>\r\n         </View>\r\n+      </View>\r\n \r\n-        {/* Driver Bottom Navigation */}\r\n-        <View style={styles.bottomNav}>\r\n-            <TouchableOpacity>\r\n-                <Ionicons name=\"home\" size={30} color=\"black\" />\r\n-                <Text>Home</Text>\r\n-            </TouchableOpacity>\r\n-            <TouchableOpacity>\r\n-                <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n-                <Text>History</Text>\r\n-            </TouchableOpacity>\r\n-            <TouchableOpacity>\r\n-                <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n-                <Text>Chats</Text>\r\n-            </TouchableOpacity>\r\n-            <TouchableOpacity>\r\n-                <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n-                <Text>Profile</Text>\r\n-            </TouchableOpacity>\r\n-        </View>\r\n-\r\n-\r\n+      <View style={styles.bottomNav}>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"home\" size={30} color=\"black\" />\r\n+          <Text>Home</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n+          <Text>History</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n+          <Text>Chats</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n+          <Text>Profile</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n     </View>\r\n   );\r\n }\r\n \r\n@@ -83,8 +115,13 @@\n   },\r\n   map: {\r\n     width: width,\r\n     height: height,\r\n+    position: \"absolute\",\r\n+    top: 0,\r\n+    left: 0,\r\n+    right: 0,\r\n+    bottom: 0,\r\n   },\r\n   statusBar: {\r\n     position: 'absolute',\r\n     bottom: 75,\r\n@@ -98,25 +135,8 @@\n     color: 'black',\r\n     fontSize: 14,\r\n     fontWeight: '500',\r\n   },\r\n-  switch: {\r\n-    transform: [{ scaleX: 1.5 }, { scaleY: 1.5 }], // make the switch bigger like in your PNG\r\n-    marginRight: 10,\r\n-  },  \r\n-  navButton: {\r\n-    alignItems: 'center',\r\n-    justifyContent: 'center',\r\n-  },\r\n-  navText: {\r\n-    fontSize: 12,\r\n-    marginTop: 4,\r\n-    color: 'black',\r\n-  },\r\n-  icon: {\r\n-    width: 24,\r\n-    height: 24,\r\n-  },\r\n   bottomNav: {\r\n     position: \"absolute\",\r\n     bottom: 0,\r\n     flexDirection: \"row\",\r\n@@ -128,7 +148,6 @@\n     borderTopRightRadius: 30,\r\n     alignItems: \"center\",\r\n     borderWidth: 1,\r\n     borderColor: \"black\",\r\n-  }\r\n-  \r\n+  },\r\n });\r\n"
                },
                {
                    "date": 1747239875931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,11 @@\n import { Ionicons } from \"@expo/vector-icons\";\r\n import { WebView } from \"react-native-webview\";\r\n import type { WebView as WebViewType } from \"react-native-webview\";\r\n import { useLocation } from '../location/GlobalLocation';\r\n+import { API_BASE_URL } from \"../../config\";\r\n \r\n+\r\n const { width, height } = Dimensions.get('window');\r\n \r\n export default function DHome() {\r\n   const { location } = useLocation();\r\n"
                },
                {
                    "date": 1747240410542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n import { WebView } from \"react-native-webview\";\r\n import type { WebView as WebViewType } from \"react-native-webview\";\r\n import { useLocation } from '../location/GlobalLocation';\r\n import { API_BASE_URL } from \"../../config\";\r\n+import AsyncStorage from '@react-native-async-storage/async-storage';\r\n \r\n \r\n const { width, height } = Dimensions.get('window');\r\n \r\n@@ -54,8 +55,34 @@\n \r\n     setMapHtml(html);\r\n   }, [location]);\r\n \r\n+  const updateDriverStatus = async (newStatus: boolean) => {\r\n+    if (!location) return;\r\n+\r\n+    try {\r\n+      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({\r\n+          driverId,\r\n+          isOnline: newStatus,\r\n+          location: {\r\n+            latitude: location.latitude,\r\n+            longitude: location.longitude,\r\n+          },\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+      console.log(\"✅ Driver status sent:\", data);\r\n+    } catch (error) {\r\n+      console.error(\"❌ Failed to update driver status:\", error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n       <View style={{ paddingTop: 30 }}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n"
                },
                {
                    "date": 1747240431369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n     if (!location) return;\r\n \r\n     try {\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      console.log(driverId)\r\n       const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({\r\n"
                },
                {
                    "date": 1747240483506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n \r\n     try {\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n       console.log(driverId)\r\n+      if (!driverId) return;\r\n       const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({\r\n"
                },
                {
                    "date": 1747240878869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,18 +107,25 @@\n           style={{ marginRight: 10 }}\r\n           trackColor={{ false: '#ccc', true: '#37982a' }}\r\n           thumbColor=\"white\"\r\n           ios_backgroundColor=\"black\"\r\n-          onValueChange={toggleSwitch}\r\n+          onValueChange={() => {\r\n+            const newStatus = !isOnline;\r\n+            setIsOnline(newStatus);\r\n+            updateDriverStatus(newStatus); // ✅ Send to backend\r\n+          }}\r\n           value={isOnline}\r\n         />\r\n         <View style={{ marginLeft: 10 }}>\r\n           <Text style={styles.statusText}>\r\n-            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n+            {isOnline\r\n+              ? \"You're online.\\nLooking for bookings.....\"\r\n+              : \"You're offline.\"}\r\n           </Text>\r\n         </View>\r\n       </View>\r\n \r\n+\r\n       <View style={styles.bottomNav}>\r\n         <TouchableOpacity>\r\n           <Ionicons name=\"home\" size={30} color=\"black\" />\r\n           <Text>Home</Text>\r\n"
                },
                {
                    "date": 1747240939722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n           ios_backgroundColor=\"black\"\r\n           onValueChange={() => {\r\n             const newStatus = !isOnline;\r\n             setIsOnline(newStatus);\r\n-            updateDriverStatus(newStatus); // ✅ Send to backend\r\n+            updateDriverStatus(newStatus); \r\n           }}\r\n           value={isOnline}\r\n         />\r\n         <View style={{ marginLeft: 10 }}>\r\n"
                },
                {
                    "date": 1747245278312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   const { location } = useLocation();\r\n   const [isOnline, setIsOnline] = useState(false);\r\n   const [mapHtml, setMapHtml] = useState(\"\");\r\n   const mapRef = useRef<WebViewType | null>(null);\r\n+  const [incomingBooking, setIncomingBooking] = useState(null);\r\n \r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1747245371967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,36 @@\n     } catch (error) {\r\n       console.error(\"❌ Failed to update driver status:\", error);\r\n     }\r\n   };\r\n+  useEffect(() => {\r\n+    let interval: any;\r\n \r\n+    const fetchRequests = async () => {\r\n+      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      if (!driverId) return;\r\n \r\n+      try {\r\n+        const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n+        const data = await res.json();\r\n+        if (data.length > 0) {\r\n+          setIncomingBooking(data[0]); // take the first one only\r\n+        }\r\n+      } catch (err) {\r\n+        console.error(\"❌ Failed to fetch booking:\", err);\r\n+      }\r\n+    };\r\n+\r\n+    if (isOnline) {\r\n+      fetchRequests(); // initial check\r\n+      interval = setInterval(fetchRequests, 5000); // poll every 5s\r\n+    }\r\n+\r\n+    return () => clearInterval(interval);\r\n+  }, [isOnline]);\r\n+\r\n+\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n       <View style={{ paddingTop: 30 }}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n"
                },
                {
                    "date": 1747245402396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,10 +108,26 @@\n \r\n     return () => clearInterval(interval);\r\n   }, [isOnline]);\r\n \r\n+  const acceptBooking = async () => {\r\n+    try {\r\n+      const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ bookingId: incomingBooking.id }),\r\n+      });\r\n \r\n+      const result = await res.json();\r\n+      console.log(\"✅ Booking accepted:\", result);\r\n+      setIncomingBooking(null);\r\n+    } catch (error) {\r\n+      console.error(\"❌ Error accepting booking:\", error);\r\n+    }\r\n+  };\r\n \r\n+\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n       <View style={{ paddingTop: 30 }}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n"
                },
                {
                    "date": 1747245703271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,17 +14,16 @@\n import { useLocation } from '../location/GlobalLocation';\r\n import { API_BASE_URL } from \"../../config\";\r\n import AsyncStorage from '@react-native-async-storage/async-storage';\r\n \r\n-\r\n const { width, height } = Dimensions.get('window');\r\n \r\n export default function DHome() {\r\n   const { location } = useLocation();\r\n   const [isOnline, setIsOnline] = useState(false);\r\n   const [mapHtml, setMapHtml] = useState(\"\");\r\n   const mapRef = useRef<WebViewType | null>(null);\r\n-  const [incomingBooking, setIncomingBooking] = useState(null);\r\n+  const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n \r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n   useEffect(() => {\r\n@@ -61,9 +60,8 @@\n     if (!location) return;\r\n \r\n     try {\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n-      console.log(driverId)\r\n       if (!driverId) return;\r\n       const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n@@ -82,8 +80,9 @@\n     } catch (error) {\r\n       console.error(\"❌ Failed to update driver status:\", error);\r\n     }\r\n   };\r\n+\r\n   useEffect(() => {\r\n     let interval: any;\r\n \r\n     const fetchRequests = async () => {\r\n@@ -93,18 +92,18 @@\n       try {\r\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n         const data = await res.json();\r\n         if (data.length > 0) {\r\n-          setIncomingBooking(data[0]); // take the first one only\r\n+          setIncomingBooking(data[0]);\r\n         }\r\n       } catch (err) {\r\n         console.error(\"❌ Failed to fetch booking:\", err);\r\n       }\r\n     };\r\n \r\n     if (isOnline) {\r\n-      fetchRequests(); // initial check\r\n-      interval = setInterval(fetchRequests, 5000); // poll every 5s\r\n+      fetchRequests();\r\n+      interval = setInterval(fetchRequests, 5000);\r\n     }\r\n \r\n     return () => clearInterval(interval);\r\n   }, [isOnline]);\r\n@@ -124,10 +123,8 @@\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n \r\n-\r\n-\r\n   return (\r\n     <View style={styles.container}>\r\n       <View style={{ paddingTop: 30 }}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n@@ -144,8 +141,24 @@\n           style={styles.map}\r\n         />\r\n       )}\r\n \r\n+      {incomingBooking && (\r\n+        <View style={styles.popup}>\r\n+          <Text style={styles.popupTitle}>🚕 Incoming Booking</Text>\r\n+          <Text>From: {incomingBooking.pickupLat.toFixed(4)}, {incomingBooking.pickupLng.toFixed(4)}</Text>\r\n+          <Text>To: {incomingBooking.destinationLat.toFixed(4)}, {incomingBooking.destinationLng.toFixed(4)}</Text>\r\n+          <Text>Fare: ₱{incomingBooking.fare}</Text>\r\n+          <Text>Payment: {incomingBooking.paymentMethod}</Text>\r\n+          <Text>Notes: {incomingBooking.notes}</Text>\r\n+          <Text>Passenger: {incomingBooking.passengerName}</Text>\r\n+\r\n+          <TouchableOpacity style={styles.acceptButton} onPress={acceptBooking}>\r\n+            <Text style={{ color: 'white', textAlign: 'center' }}>ACCEPT</Text>\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+      )}\r\n+\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n           style={{ marginRight: 10 }}\r\n           trackColor={{ false: '#ccc', true: '#37982a' }}\r\n@@ -153,22 +166,19 @@\n           ios_backgroundColor=\"black\"\r\n           onValueChange={() => {\r\n             const newStatus = !isOnline;\r\n             setIsOnline(newStatus);\r\n-            updateDriverStatus(newStatus); \r\n+            updateDriverStatus(newStatus);\r\n           }}\r\n           value={isOnline}\r\n         />\r\n         <View style={{ marginLeft: 10 }}>\r\n           <Text style={styles.statusText}>\r\n-            {isOnline\r\n-              ? \"You're online.\\nLooking for bookings.....\"\r\n-              : \"You're offline.\"}\r\n+            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n           </Text>\r\n         </View>\r\n       </View>\r\n \r\n-\r\n       <View style={styles.bottomNav}>\r\n         <TouchableOpacity>\r\n           <Ionicons name=\"home\" size={30} color=\"black\" />\r\n           <Text>Home</Text>\r\n@@ -230,5 +240,27 @@\n     alignItems: \"center\",\r\n     borderWidth: 1,\r\n     borderColor: \"black\",\r\n   },\r\n+  popup: {\r\n+    position: 'absolute',\r\n+    top: 80,\r\n+    left: 20,\r\n+    right: 20,\r\n+    padding: 15,\r\n+    backgroundColor: '#fff',\r\n+    borderRadius: 10,\r\n+    elevation: 5,\r\n+    zIndex: 99,\r\n+  },\r\n+  popupTitle: {\r\n+    fontWeight: 'bold',\r\n+    fontSize: 16,\r\n+    marginBottom: 5,\r\n+  },\r\n+  acceptButton: {\r\n+    backgroundColor: '#4caf50',\r\n+    padding: 10,\r\n+    borderRadius: 5,\r\n+    marginTop: 10,\r\n+  },\r\n });\r\n"
                },
                {
                    "date": 1747249837763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   const [isOnline, setIsOnline] = useState(false);\r\n   const [mapHtml, setMapHtml] = useState(\"\");\r\n   const mapRef = useRef<WebViewType | null>(null);\r\n   const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n+  const [confirmed, setConfirmed] = useState(false);\r\n \r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n   useEffect(() => {\r\n@@ -45,9 +46,8 @@\n             L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n               maxZoom: 19,\r\n               attribution: '© OpenStreetMap contributors'\r\n             }).addTo(map);\r\n-\r\n             L.marker([${location.latitude}, ${location.longitude}]).addTo(map);\r\n           </script>\r\n         </body>\r\n       </html>\r\n@@ -73,9 +73,8 @@\n             longitude: location.longitude,\r\n           },\r\n         }),\r\n       });\r\n-\r\n       const data = await response.json();\r\n       console.log(\"✅ Driver status sent:\", data);\r\n     } catch (error) {\r\n       console.error(\"❌ Failed to update driver status:\", error);\r\n@@ -99,27 +98,50 @@\n         console.error(\"❌ Failed to fetch booking:\", err);\r\n       }\r\n     };\r\n \r\n-    if (isOnline) {\r\n+    if (isOnline && !confirmed) {\r\n       fetchRequests();\r\n       interval = setInterval(fetchRequests, 5000);\r\n     }\r\n \r\n     return () => clearInterval(interval);\r\n-  }, [isOnline]);\r\n+  }, [isOnline, confirmed]);\r\n \r\n+  useEffect(() => {\r\n+    let interval: any;\r\n+\r\n+    const checkPassengerConfirmation = async () => {\r\n+      if (!incomingBooking) return;\r\n+      try {\r\n+        const res = await fetch(`${API_BASE_URL}/api/bookings`);\r\n+        const all = await res.json();\r\n+        const found = all.find((b: any) => b.id === incomingBooking.id);\r\n+        if (found && found.passengerConfirmed) {\r\n+          setConfirmed(true);\r\n+        }\r\n+      } catch (err) {\r\n+        console.error(\"Polling error:\", err);\r\n+      }\r\n+    };\r\n+\r\n+    if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n+      interval = setInterval(checkPassengerConfirmation, 5000);\r\n+    }\r\n+\r\n+    return () => clearInterval(interval);\r\n+  }, [incomingBooking]);\r\n+\r\n   const acceptBooking = async () => {\r\n     try {\r\n       const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ bookingId: incomingBooking.id }),\r\n       });\r\n-\r\n       const result = await res.json();\r\n       console.log(\"✅ Booking accepted:\", result);\r\n-      setIncomingBooking(null);\r\n+      setIncomingBooking(result.booking);\r\n     } catch (error) {\r\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n@@ -141,9 +163,9 @@\n           style={styles.map}\r\n         />\r\n       )}\r\n \r\n-      {incomingBooking && (\r\n+      {incomingBooking && !confirmed && (\r\n         <View style={styles.popup}>\r\n           <Text style={styles.popupTitle}>🚕 Incoming Booking</Text>\r\n           <Text>From: {incomingBooking.pickupLat.toFixed(4)}, {incomingBooking.pickupLng.toFixed(4)}</Text>\r\n           <Text>To: {incomingBooking.destinationLat.toFixed(4)}, {incomingBooking.destinationLng.toFixed(4)}</Text>\r\n@@ -157,8 +179,15 @@\n           </TouchableOpacity>\r\n         </View>\r\n       )}\r\n \r\n+      {confirmed && (\r\n+        <View style={styles.popup}>\r\n+          <Text style={{ fontWeight: 'bold', color: '#4caf50' }}>✅ Booking Confirmed!</Text>\r\n+          <Text>🕒 Waiting for pickup...</Text>\r\n+        </View>\r\n+      )}\r\n+\r\n       <View style={styles.statusBar}>\r\n         <Switch\r\n           style={{ marginRight: 10 }}\r\n           trackColor={{ false: '#ccc', true: '#37982a' }}\r\n@@ -200,11 +229,9 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: {\r\n-    flex: 1,\r\n-  },\r\n+  container: { flex: 1 },\r\n   map: {\r\n     width: width,\r\n     height: height,\r\n     position: \"absolute\",\r\n"
                },
                {
                    "date": 1747250145608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n     if (!location) return;\r\n \r\n     try {\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      console.log(driverId)\r\n       if (!driverId) return;\r\n       const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n"
                },
                {
                    "date": 1747252327405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n import AsyncStorage from '@react-native-async-storage/async-storage';\r\n \r\n const { width, height } = Dimensions.get('window');\r\n \r\n+\r\n export default function DHome() {\r\n   const { location } = useLocation();\r\n   const [isOnline, setIsOnline] = useState(false);\r\n   const [mapHtml, setMapHtml] = useState(\"\");\r\n@@ -60,15 +61,17 @@\n     if (!location) return;\r\n \r\n     try {\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      const driverName = await AsyncStorage.getItem(\"driverName\")\r\n       console.log(driverId)\r\n       if (!driverId) return;\r\n       const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({\r\n           driverId,\r\n+          driverName,\r\n           isOnline: newStatus,\r\n           location: {\r\n             latitude: location.latitude,\r\n             longitude: location.longitude,\r\n"
                },
                {
                    "date": 1747252549266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,16 +55,15 @@\n     `;\r\n \r\n     setMapHtml(html);\r\n   }, [location]);\r\n-\r\n   const updateDriverStatus = async (newStatus: boolean) => {\r\n     if (!location) return;\r\n \r\n     try {\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n       const driverName = await AsyncStorage.getItem(\"driverName\")\r\n-      console.log(driverId)\r\n+      console.log(driverName)\r\n       if (!driverId) return;\r\n       const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n"
                },
                {
                    "date": 1747252563906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     if (!location) return;\r\n \r\n     try {\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n-      const driverName = await AsyncStorage.getItem(\"driverName\")\r\n+      const driverName = await AsyncStorage.getItem(\"driverName\");\r\n       console.log(driverName)\r\n       if (!driverId) return;\r\n       const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n         method: \"POST\",\r\n"
                },
                {
                    "date": 1747583370208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   const [mapHtml, setMapHtml] = useState(\"\");\r\n   const mapRef = useRef<WebViewType | null>(null);\r\n   const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n   const [confirmed, setConfirmed] = useState(false);\r\n-\r\n+  const [bookingDetails, setBookingDetails] = useState<any>(null);\r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n   useEffect(() => {\r\n     if (!location) return;\r\n"
                },
                {
                    "date": 1747583381662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n   const [mapHtml, setMapHtml] = useState(\"\");\r\n   const mapRef = useRef<WebViewType | null>(null);\r\n   const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n   const [confirmed, setConfirmed] = useState(false);\r\n-  const [bookingDetails, setBookingDetails] = useState<any>(null);\r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n   useEffect(() => {\r\n     if (!location) return;\r\n"
                },
                {
                    "date": 1747653979502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,8 +147,25 @@\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n \r\n+  useEffect(() => {\r\n+    if (!mapRef.current || !incomingBooking) return;\r\n+\r\n+    mapRef.current.postMessage(JSON.stringify({\r\n+      type: \"setPassengerMarkers\",\r\n+      pickup: {\r\n+        latitude: incomingBooking.pickupLat,\r\n+        longitude: incomingBooking.pickupLng\r\n+      },\r\n+      destination: {\r\n+        latitude: incomingBooking.destinationLat,\r\n+        longitude: incomingBooking.destinationLng\r\n+      }\r\n+    }));\r\n+  }, [incomingBooking]);\r\n+\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n       <View style={{ paddingTop: 30 }}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n"
                },
                {
                    "date": 1747654052917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,33 @@\n               maxZoom: 19,\r\n               attribution: '© OpenStreetMap contributors'\r\n             }).addTo(map);\r\n             L.marker([${location.latitude}, ${location.longitude}]).addTo(map);\r\n+            document.addEventListener('message', function(event) {\r\n+              const msg = JSON.parse(event.data);\r\n+              if (msg.type === 'setPassengerMarkers') {\r\n+                if (pickupMarker) map.removeLayer(pickupMarker);\r\n+                if (destinationMarker) map.removeLayer(destinationMarker);\r\n+\r\n+                if (msg.pickup) {\r\n+                  pickupMarker = L.marker([msg.pickup.latitude, msg.pickup.longitude], {\r\n+                    icon: L.icon({\r\n+                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png',\r\n+                      iconSize: [30, 30],\r\n+                    })\r\n+                  }).addTo(map).bindTooltip(\"📍 Passenger\", { permanent: true, direction: \"top\" });\r\n+                }\r\n+\r\n+                if (msg.destination) {\r\n+                  destinationMarker = L.marker([msg.destination.latitude, msg.destination.longitude], {\r\n+                    icon: L.icon({\r\n+                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/green-dot.png',\r\n+                      iconSize: [30, 30],\r\n+                    })\r\n+                  }).addTo(map).bindTooltip(\"🎯 Destination\", { permanent: true, direction: \"top\" });\r\n+                }\r\n+              }\r\n+            });\r\n           </script>\r\n         </body>\r\n       </html>\r\n     `;\r\n"
                },
                {
                    "date": 1747654337348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,10 @@\n import type { WebView as WebViewType } from \"react-native-webview\";\r\n import { useLocation } from '../location/GlobalLocation';\r\n import { API_BASE_URL } from \"../../config\";\r\n import AsyncStorage from '@react-native-async-storage/async-storage';\r\n+import { useFocusEffect } from \"@react-navigation/native\";\r\n+import { BackHandler } from \"react-native\";\r\n \r\n const { width, height } = Dimensions.get('window');\r\n \r\n \r\n"
                },
                {
                    "date": 1747654353425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,23 @@\n   const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n   const [confirmed, setConfirmed] = useState(false);\r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n+  useFocusEffect(\r\n+    React.useCallback(() => {\r\n+      const onBackPress = async () => {\r\n+        if (isOnline) {\r\n+          setIsOnline(false);\r\n+          updateDriverStatus(false);  // set to offline before going back\r\n+        }\r\n+        return false; // allow default back behavior\r\n+      };\r\n+\r\n+      BackHandler.addEventListener('hardwareBackPress', onBackPress);\r\n+      return () => BackHandler.removeEventListener('hardwareBackPress', onBackPress);\r\n+    }, [isOnline])\r\n+  );\r\n+\r\n   useEffect(() => {\r\n     if (!location) return;\r\n \r\n     const html = `\r\n"
                },
                {
                    "date": 1747654378420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,23 +28,8 @@\n   const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n   const [confirmed, setConfirmed] = useState(false);\r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n-  useFocusEffect(\r\n-    React.useCallback(() => {\r\n-      const onBackPress = async () => {\r\n-        if (isOnline) {\r\n-          setIsOnline(false);\r\n-          updateDriverStatus(false);  // set to offline before going back\r\n-        }\r\n-        return false; // allow default back behavior\r\n-      };\r\n-\r\n-      BackHandler.addEventListener('hardwareBackPress', onBackPress);\r\n-      return () => BackHandler.removeEventListener('hardwareBackPress', onBackPress);\r\n-    }, [isOnline])\r\n-  );\r\n-\r\n   useEffect(() => {\r\n     if (!location) return;\r\n \r\n     const html = `\r\n@@ -189,8 +174,23 @@\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n \r\n+  useFocusEffect(\r\n+    React.useCallback(() => {\r\n+      const onBackPress = async () => {\r\n+        if (isOnline) {\r\n+          setIsOnline(false);\r\n+          updateDriverStatus(false);  // set to offline before going back\r\n+        }\r\n+        return false; // allow default back behavior\r\n+      };\r\n+\r\n+      BackHandler.addEventListener('hardwareBackPress', onBackPress);\r\n+      return () => BackHandler.removeEventListener('hardwareBackPress', onBackPress);\r\n+    }, [isOnline])\r\n+  );\r\n+\r\n   useEffect(() => {\r\n     if (!mapRef.current || !incomingBooking) return;\r\n \r\n     mapRef.current.postMessage(JSON.stringify({\r\n"
                },
                {
                    "date": 1747654781675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n         }\r\n         return false; // allow default back behavior\r\n       };\r\n \r\n-      BackHandler.addEventListener('hardwareBackPress', onBackPress);\r\n+      BackHandler.addEventListener('hardwareBackPress', onBackPress as any);\r\n       return () => BackHandler.removeEventListener('hardwareBackPress', onBackPress);\r\n     }, [isOnline])\r\n   );\r\n \r\n"
                },
                {
                    "date": 1747654826174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,18 +179,20 @@\n     React.useCallback(() => {\r\n       const onBackPress = async () => {\r\n         if (isOnline) {\r\n           setIsOnline(false);\r\n-          updateDriverStatus(false);  // set to offline before going back\r\n+          updateDriverStatus(false); // turn off before leaving\r\n         }\r\n         return false; // allow default back behavior\r\n       };\r\n \r\n-      BackHandler.addEventListener('hardwareBackPress', onBackPress as any);\r\n-      return () => BackHandler.removeEventListener('hardwareBackPress', onBackPress);\r\n+      const subscription = BackHandler.addEventListener('hardwareBackPress', onBackPress as any);\r\n+\r\n+      return () => subscription.remove();\r\n     }, [isOnline])\r\n   );\r\n \r\n+\r\n   useEffect(() => {\r\n     if (!mapRef.current || !incomingBooking) return;\r\n \r\n     mapRef.current.postMessage(JSON.stringify({\r\n"
                },
                {
                    "date": 1747654980293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,23 +176,40 @@\n   };\r\n \r\n   useFocusEffect(\r\n     React.useCallback(() => {\r\n-      const onBackPress = async () => {\r\n-        if (isOnline) {\r\n-          setIsOnline(false);\r\n-          updateDriverStatus(false); // turn off before leaving\r\n-        }\r\n-        return false; // allow default back behavior\r\n+      const onBackPress = () => {\r\n+        Alert.alert(\r\n+          \"Logout\",\r\n+          \"Are you sure you want to log out?\",\r\n+          [\r\n+            {\r\n+              text: \"Cancel\",\r\n+              style: \"cancel\",\r\n+              onPress: () => {},\r\n+            },\r\n+            {\r\n+              text: \"Yes\",\r\n+              onPress: async () => {\r\n+                setIsOnline(false);\r\n+                updateDriverStatus(false);\r\n+                await AsyncStorage.clear();\r\n+                navigation.reset({\r\n+                  index: 0,\r\n+                  routes: [{ name: \"DriverLogin\" }],\r\n+                });\r\n+              },\r\n+            },\r\n+          ]\r\n+        );\r\n+        return true; // prevent default back action\r\n       };\r\n \r\n-      const subscription = BackHandler.addEventListener('hardwareBackPress', onBackPress as any);\r\n-\r\n+      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n       return () => subscription.remove();\r\n     }, [isOnline])\r\n   );\r\n \r\n-\r\n   useEffect(() => {\r\n     if (!mapRef.current || !incomingBooking) return;\r\n \r\n     mapRef.current.postMessage(JSON.stringify({\r\n"
                },
                {
                    "date": 1747655050846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import { useLocation } from '../location/GlobalLocation';\r\n import { API_BASE_URL } from \"../../config\";\r\n import AsyncStorage from '@react-native-async-storage/async-storage';\r\n import { useFocusEffect } from \"@react-navigation/native\";\r\n-import { BackHandler } from \"react-native\";\r\n+import { Alert, BackHandler } from \"react-native\";\r\n \r\n const { width, height } = Dimensions.get('window');\r\n \r\n \r\n"
                },
                {
                    "date": 1747655126815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,12 @@\n import { API_BASE_URL } from \"../../config\";\r\n import AsyncStorage from '@react-native-async-storage/async-storage';\r\n import { useFocusEffect } from \"@react-navigation/native\";\r\n import { Alert, BackHandler } from \"react-native\";\r\n-\r\n+import { useNavigation } from '@react-navigation/native';\r\n const { width, height } = Dimensions.get('window');\r\n+const navigation = useNavigation();\r\n \r\n-\r\n export default function DHome() {\r\n   const { location } = useLocation();\r\n   const [isOnline, setIsOnline] = useState(false);\r\n   const [mapHtml, setMapHtml] = useState(\"\");\r\n"
                },
                {
                    "date": 1747655530823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n import AsyncStorage from '@react-native-async-storage/async-storage';\r\n import { useFocusEffect } from \"@react-navigation/native\";\r\n import { Alert, BackHandler } from \"react-native\";\r\n import { useNavigation } from '@react-navigation/native';\r\n+import { router } from \"expo-router\";\r\n const { width, height } = Dimensions.get('window');\r\n const navigation = useNavigation();\r\n \r\n export default function DHome() {\r\n@@ -192,12 +193,9 @@\n               onPress: async () => {\r\n                 setIsOnline(false);\r\n                 updateDriverStatus(false);\r\n                 await AsyncStorage.clear();\r\n-                navigation.reset({\r\n-                  index: 0,\r\n-                  routes: [{ name: \"DriverLogin\" }],\r\n-                });\r\n+                router.replace(\"/login_and_reg/dlogin\");\r\n               },\r\n             },\r\n           ]\r\n         );\r\n"
                },
                {
                    "date": 1747655545018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n               onPress: async () => {\r\n                 setIsOnline(false);\r\n                 updateDriverStatus(false);\r\n                 await AsyncStorage.clear();\r\n-                router.replace(\"/login_and_reg/dlogin\");\r\n+                router.push(\"/login_and_reg/dlogin\");\r\n               },\r\n             },\r\n           ]\r\n         );\r\n"
                },
                {
                    "date": 1747655566608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,33 +175,33 @@\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n \r\n-  useFocusEffect(\r\n-    React.useCallback(() => {\r\n-      const onBackPress = () => {\r\n-        Alert.alert(\r\n-          \"Logout\",\r\n-          \"Are you sure you want to log out?\",\r\n-          [\r\n-            {\r\n-              text: \"Cancel\",\r\n-              style: \"cancel\",\r\n-              onPress: () => {},\r\n-            },\r\n-            {\r\n-              text: \"Yes\",\r\n-              onPress: async () => {\r\n-                setIsOnline(false);\r\n-                updateDriverStatus(false);\r\n-                await AsyncStorage.clear();\r\n-                router.push(\"/login_and_reg/dlogin\");\r\n-              },\r\n-            },\r\n-          ]\r\n-        );\r\n-        return true; // prevent default back action\r\n-      };\r\n+  // useFocusEffect(\r\n+  //   React.useCallback(() => {\r\n+  //     const onBackPress = () => {\r\n+  //       Alert.alert(\r\n+  //         \"Logout\",\r\n+  //         \"Are you sure you want to log out?\",\r\n+  //         [\r\n+  //           {\r\n+  //             text: \"Cancel\",\r\n+  //             style: \"cancel\",\r\n+  //             onPress: () => {},\r\n+  //           },\r\n+  //           {\r\n+  //             text: \"Yes\",\r\n+  //             onPress: async () => {\r\n+  //               setIsOnline(false);\r\n+  //               updateDriverStatus(false);\r\n+  //               await AsyncStorage.clear();\r\n+  //               router.push(\"/login_and_reg/dlogin\");\r\n+  //             },\r\n+  //           },\r\n+  //         ]\r\n+  //       );\r\n+  //       return true; // prevent default back action\r\n+  //     };\r\n \r\n       const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n       return () => subscription.remove();\r\n     }, [isOnline])\r\n"
                },
                {
                    "date": 1747655579382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,12 +201,12 @@\n   //       );\r\n   //       return true; // prevent default back action\r\n   //     };\r\n \r\n-      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      return () => subscription.remove();\r\n-    }, [isOnline])\r\n-  );\r\n+  //     const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+  //     return () => subscription.remove();\r\n+  //   }, [isOnline])\r\n+  // );\r\n \r\n   useEffect(() => {\r\n     if (!mapRef.current || !incomingBooking) return;\r\n \r\n"
                },
                {
                    "date": 1747655589349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,38 +175,38 @@\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n \r\n-  // useFocusEffect(\r\n-  //   React.useCallback(() => {\r\n-  //     const onBackPress = () => {\r\n-  //       Alert.alert(\r\n-  //         \"Logout\",\r\n-  //         \"Are you sure you want to log out?\",\r\n-  //         [\r\n-  //           {\r\n-  //             text: \"Cancel\",\r\n-  //             style: \"cancel\",\r\n-  //             onPress: () => {},\r\n-  //           },\r\n-  //           {\r\n-  //             text: \"Yes\",\r\n-  //             onPress: async () => {\r\n-  //               setIsOnline(false);\r\n-  //               updateDriverStatus(false);\r\n-  //               await AsyncStorage.clear();\r\n-  //               router.push(\"/login_and_reg/dlogin\");\r\n-  //             },\r\n-  //           },\r\n-  //         ]\r\n-  //       );\r\n-  //       return true; // prevent default back action\r\n-  //     };\r\n+  useFocusEffect(\r\n+    React.useCallback(() => {\r\n+      const onBackPress = () => {\r\n+        Alert.alert(\r\n+          \"Logout\",\r\n+          \"Are you sure you want to log out?\",\r\n+          [\r\n+            {\r\n+              text: \"Cancel\",\r\n+              style: \"cancel\",\r\n+              onPress: () => {},\r\n+            },\r\n+            {\r\n+              text: \"Yes\",\r\n+              onPress: async () => {\r\n+                setIsOnline(false);\r\n+                updateDriverStatus(false);\r\n+                await AsyncStorage.clear();\r\n+                router.push(\"/login_and_reg/dlogin\");\r\n+              },\r\n+            },\r\n+          ]\r\n+        );\r\n+        return true; // prevent default back action\r\n+      };\r\n \r\n-  //     const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-  //     return () => subscription.remove();\r\n-  //   }, [isOnline])\r\n-  // );\r\n+      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      return () => subscription.remove();\r\n+    }, [isOnline])\r\n+  );\r\n \r\n   useEffect(() => {\r\n     if (!mapRef.current || !incomingBooking) return;\r\n \r\n"
                },
                {
                    "date": 1747655747367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,10 @@\n import { API_BASE_URL } from \"../../config\";\r\n import AsyncStorage from '@react-native-async-storage/async-storage';\r\n import { useFocusEffect } from \"@react-navigation/native\";\r\n import { Alert, BackHandler } from \"react-native\";\r\n-import { useNavigation } from '@react-navigation/native';\r\n import { router } from \"expo-router\";\r\n const { width, height } = Dimensions.get('window');\r\n-const navigation = useNavigation();\r\n \r\n export default function DHome() {\r\n   const { location } = useLocation();\r\n   const [isOnline, setIsOnline] = useState(false);\r\n"
                },
                {
                    "date": 1747655945447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,8 @@\n             },\r\n             {\r\n               text: \"Yes\",\r\n               onPress: async () => {\r\n-                setIsOnline(false);\r\n                 updateDriverStatus(false);\r\n                 await AsyncStorage.clear();\r\n                 router.push(\"/login_and_reg/dlogin\");\r\n               },\r\n"
                },
                {
                    "date": 1747656058225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,8 +188,9 @@\n             },\r\n             {\r\n               text: \"Yes\",\r\n               onPress: async () => {\r\n+                setIsOnline(false);\r\n                 updateDriverStatus(false);\r\n                 await AsyncStorage.clear();\r\n                 router.push(\"/login_and_reg/dlogin\");\r\n               },\r\n@@ -198,10 +199,10 @@\n         );\r\n         return true; // prevent default back action\r\n       };\r\n \r\n-      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      return () => subscription.remove();\r\n+      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      // return () => subscription.remove();\r\n     }, [isOnline])\r\n   );\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1747663564194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,382 @@\n+import React, { useEffect, useState, useRef } from 'react';\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  Switch,\r\n+  StyleSheet,\r\n+  Dimensions,\r\n+  TouchableOpacity,\r\n+  StatusBar,\r\n+} from 'react-native';\r\n+import { Ionicons } from \"@expo/vector-icons\";\r\n+import { WebView } from \"react-native-webview\";\r\n+import type { WebView as WebViewType } from \"react-native-webview\";\r\n+import { useLocation } from '../location/GlobalLocation';\r\n+import { API_BASE_URL } from \"../../config\";\r\n+import AsyncStorage from '@react-native-async-storage/async-storage';\r\n+import { useFocusEffect } from \"@react-navigation/native\";\r\n+import { Alert, BackHandler } from \"react-native\";\r\n+import { router } from \"expo-router\";\r\n+const { width, height } = Dimensions.get('window');\r\n+\r\n+export default function DHome() {\r\n+  const { location } = useLocation();\r\n+  const [isOnline, setIsOnline] = useState(false);\r\n+  const [mapHtml, setMapHtml] = useState(\"\");\r\n+  const mapRef = useRef<WebViewType | null>(null);\r\n+  const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n+  const [confirmed, setConfirmed] = useState(false);\r\n+  const toggleSwitch = () => setIsOnline(prev => !prev);\r\n+\r\n+  useEffect(() => {\r\n+    if (!location) return;\r\n+\r\n+    const html = `\r\n+      <!DOCTYPE html>\r\n+      <html>\r\n+        <head>\r\n+          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+          <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\" />\r\n+          <style> html, body, #map { height: 100%; margin: 0; padding: 0; } </style>\r\n+        </head>\r\n+        <body>\r\n+          <div id=\"map\"></div>\r\n+          <script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"></script>\r\n+          <script>\r\n+            const map = L.map('map').setView([${location.latitude}, ${location.longitude}], 15);\r\n+            L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n+              maxZoom: 19,\r\n+              attribution: '© OpenStreetMap contributors'\r\n+            }).addTo(map);\r\n+            L.marker([${location.latitude}, ${location.longitude}]).addTo(map);\r\n+            document.addEventListener('message', function(event) {\r\n+              const msg = JSON.parse(event.data);\r\n+              if (msg.type === 'setPassengerMarkers') {\r\n+                if (pickupMarker) map.removeLayer(pickupMarker);\r\n+                if (destinationMarker) map.removeLayer(destinationMarker);\r\n+\r\n+                if (msg.pickup) {\r\n+                  pickupMarker = L.marker([msg.pickup.latitude, msg.pickup.longitude], {\r\n+                    icon: L.icon({\r\n+                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png',\r\n+                      iconSize: [30, 30],\r\n+                    })\r\n+                  }).addTo(map).bindTooltip(\"📍 Passenger\", { permanent: true, direction: \"top\" });\r\n+                }\r\n+\r\n+                if (msg.destination) {\r\n+                  destinationMarker = L.marker([msg.destination.latitude, msg.destination.longitude], {\r\n+                    icon: L.icon({\r\n+                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/green-dot.png',\r\n+                      iconSize: [30, 30],\r\n+                    })\r\n+                  }).addTo(map).bindTooltip(\"🎯 Destination\", { permanent: true, direction: \"top\" });\r\n+                }\r\n+              }\r\n+            });\r\n+          </script>\r\n+        </body>\r\n+      </html>\r\n+    `;\r\n+\r\n+    setMapHtml(html);\r\n+  }, [location]);\r\n+  const updateDriverStatus = async (newStatus: boolean) => {\r\n+    if (!location) return;\r\n+\r\n+    try {\r\n+      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      const driverName = await AsyncStorage.getItem(\"driverName\");\r\n+      console.log(driverName)\r\n+      if (!driverId) return;\r\n+      const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({\r\n+          driverId,\r\n+          driverName,\r\n+          isOnline: newStatus,\r\n+          location: {\r\n+            latitude: location.latitude,\r\n+            longitude: location.longitude,\r\n+          },\r\n+        }),\r\n+      });\r\n+      const data = await response.json();\r\n+      console.log(\"✅ Driver status sent:\", data);\r\n+    } catch (error) {\r\n+      console.error(\"❌ Failed to update driver status:\", error);\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    let interval: any;\r\n+\r\n+    const fetchRequests = async () => {\r\n+      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      if (!driverId) return;\r\n+\r\n+      try {\r\n+        const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n+        const data = await res.json();\r\n+        if (data.length > 0) {\r\n+          setIncomingBooking(data[0]);\r\n+        }\r\n+      } catch (err) {\r\n+        console.error(\"❌ Failed to fetch booking:\", err);\r\n+      }\r\n+    };\r\n+\r\n+    if (isOnline && !confirmed) {\r\n+      fetchRequests();\r\n+      interval = setInterval(fetchRequests, 5000);\r\n+    }\r\n+\r\n+    return () => clearInterval(interval);\r\n+  }, [isOnline, confirmed]);\r\n+\r\n+  useEffect(() => {\r\n+    let interval: any;\r\n+\r\n+    const checkPassengerConfirmation = async () => {\r\n+      if (!incomingBooking) return;\r\n+      try {\r\n+        const res = await fetch(`${API_BASE_URL}/api/bookings`);\r\n+        const all = await res.json();\r\n+        const found = all.find((b: any) => b.id === incomingBooking.id);\r\n+        if (found && found.passengerConfirmed) {\r\n+          setConfirmed(true);\r\n+        }\r\n+      } catch (err) {\r\n+        console.error(\"Polling error:\", err);\r\n+      }\r\n+    };\r\n+\r\n+    if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n+      interval = setInterval(checkPassengerConfirmation, 5000);\r\n+    }\r\n+\r\n+    return () => clearInterval(interval);\r\n+  }, [incomingBooking]);\r\n+\r\n+  const acceptBooking = async () => {\r\n+    try {\r\n+      const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ bookingId: incomingBooking.id }),\r\n+      });\r\n+\r\n+      const result = await res.json();\r\n+      console.log(\"✅ Booking accepted:\", result);\r\n+\r\n+      // 👇 Fetch passenger name after accepting\r\n+      const passengerId = result.booking.passengerId;\r\n+      if (passengerId) {\r\n+        const infoRes = await fetch(`${API_BASE_URL}/api/passenger/${passengerId}`);\r\n+        const infoData = await infoRes.json();\r\n+        if (infoData.passenger) {\r\n+          result.booking.passengerName = `${infoData.passenger.firstName} ${infoData.passenger.middleName} ${infoData.passenger.lastName}`;\r\n+        }\r\n+      }\r\n+\r\n+      setIncomingBooking(result.booking);\r\n+    } catch (error) {\r\n+      console.error(\"❌ Error accepting booking:\", error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  useFocusEffect(\r\n+    React.useCallback(() => {\r\n+      const onBackPress = () => {\r\n+        Alert.alert(\r\n+          \"Logout\",\r\n+          \"Are you sure you want to log out?\",\r\n+          [\r\n+            {\r\n+              text: \"Cancel\",\r\n+              style: \"cancel\",\r\n+              onPress: () => {},\r\n+            },\r\n+            {\r\n+              text: \"Yes\",\r\n+              onPress: async () => {\r\n+                setIsOnline(false);\r\n+                updateDriverStatus(false);\r\n+                await AsyncStorage.clear();\r\n+                router.push(\"/login_and_reg/dlogin\");\r\n+              },\r\n+            },\r\n+          ]\r\n+        );\r\n+        return true; // prevent default back action\r\n+      };\r\n+\r\n+      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      // return () => subscription.remove();\r\n+    }, [isOnline])\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (!mapRef.current || !incomingBooking) return;\r\n+\r\n+    mapRef.current.postMessage(JSON.stringify({\r\n+      type: \"setPassengerMarkers\",\r\n+      pickup: {\r\n+        latitude: incomingBooking.pickupLat,\r\n+        longitude: incomingBooking.pickupLng\r\n+      },\r\n+      destination: {\r\n+        latitude: incomingBooking.destinationLat,\r\n+        longitude: incomingBooking.destinationLng\r\n+      }\r\n+    }));\r\n+  }, [incomingBooking]);\r\n+\r\n+\r\n+  return (\r\n+    <View style={styles.container}>\r\n+      <View style={{ paddingTop: 30 }}>\r\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+      </View>\r\n+\r\n+      {mapHtml && (\r\n+        <WebView\r\n+          ref={(ref) => {\r\n+            if (ref && !mapRef.current) mapRef.current = ref;\r\n+          }}\r\n+          originWhitelist={[\"*\"]}\r\n+          source={{ html: mapHtml }}\r\n+          javaScriptEnabled\r\n+          style={styles.map}\r\n+        />\r\n+      )}\r\n+\r\n+      {incomingBooking && !confirmed && (\r\n+        <View style={styles.popup}>\r\n+          <Text style={styles.popupTitle}>🚕 Incoming Booking</Text>\r\n+          <Text>From: {incomingBooking.pickupLat.toFixed(4)}, {incomingBooking.pickupLng.toFixed(4)}</Text>\r\n+          <Text>To: {incomingBooking.destinationLat.toFixed(4)}, {incomingBooking.destinationLng.toFixed(4)}</Text>\r\n+          <Text>Fare: ₱{incomingBooking.fare}</Text>\r\n+          <Text>Payment: {incomingBooking.paymentMethod}</Text>\r\n+          <Text>Notes: {incomingBooking.notes}</Text>\r\n+          <Text>Passenger: {incomingBooking.passengerName}</Text>\r\n+\r\n+          <TouchableOpacity style={styles.acceptButton} onPress={acceptBooking}>\r\n+            <Text style={{ color: 'white', textAlign: 'center' }}>ACCEPT</Text>\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+      )}\r\n+\r\n+      {confirmed && (\r\n+        <View style={styles.popup}>\r\n+          <Text style={{ fontWeight: 'bold', color: '#4caf50' }}>✅ Booking Confirmed!</Text>\r\n+          <Text>🕒 Waiting for pickup...</Text>\r\n+        </View>\r\n+      )}\r\n+\r\n+      <View style={styles.statusBar}>\r\n+        <Switch\r\n+          style={{ marginRight: 10 }}\r\n+          trackColor={{ false: '#ccc', true: '#37982a' }}\r\n+          thumbColor=\"white\"\r\n+          ios_backgroundColor=\"black\"\r\n+          onValueChange={() => {\r\n+            const newStatus = !isOnline;\r\n+            setIsOnline(newStatus);\r\n+            updateDriverStatus(newStatus);\r\n+          }}\r\n+          value={isOnline}\r\n+        />\r\n+        <View style={{ marginLeft: 10 }}>\r\n+          <Text style={styles.statusText}>\r\n+            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n+          </Text>\r\n+        </View>\r\n+      </View>\r\n+\r\n+      <View style={styles.bottomNav}>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"home\" size={30} color=\"black\" />\r\n+          <Text>Home</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n+          <Text>History</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n+          <Text>Chats</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n+          <Text>Profile</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+    </View>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { flex: 1 },\r\n+  map: {\r\n+    width: width,\r\n+    height: height,\r\n+    position: \"absolute\",\r\n+    top: 0,\r\n+    left: 0,\r\n+    right: 0,\r\n+    bottom: 0,\r\n+  },\r\n+  statusBar: {\r\n+    position: 'absolute',\r\n+    bottom: 75,\r\n+    backgroundColor: '#80C3E1',\r\n+    width: width,\r\n+    padding: 5,\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n+  },\r\n+  statusText: {\r\n+    color: 'black',\r\n+    fontSize: 14,\r\n+    fontWeight: '500',\r\n+  },\r\n+  bottomNav: {\r\n+    position: \"absolute\",\r\n+    bottom: 0,\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-around\",\r\n+    width: width,\r\n+    height: 70,\r\n+    backgroundColor: \"white\",\r\n+    borderTopLeftRadius: 30,\r\n+    borderTopRightRadius: 30,\r\n+    alignItems: \"center\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"black\",\r\n+  },\r\n+  popup: {\r\n+    position: 'absolute',\r\n+    top: 80,\r\n+    left: 20,\r\n+    right: 20,\r\n+    padding: 15,\r\n+    backgroundColor: '#fff',\r\n+    borderRadius: 10,\r\n+    elevation: 5,\r\n+    zIndex: 99,\r\n+  },\r\n+  popupTitle: {\r\n+    fontWeight: 'bold',\r\n+    fontSize: 16,\r\n+    marginBottom: 5,\r\n+  },\r\n+  acceptButton: {\r\n+    backgroundColor: '#4caf50',\r\n+    padding: 10,\r\n+    borderRadius: 5,\r\n+    marginTop: 10,\r\n+  },\r\n+});\r\n"
                },
                {
                    "date": 1747665856325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,373 +379,4 @@\n     borderRadius: 5,\r\n     marginTop: 10,\r\n   },\r\n });\r\n-import React, { useEffect, useState, useRef } from 'react';\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  Switch,\r\n-  StyleSheet,\r\n-  Dimensions,\r\n-  TouchableOpacity,\r\n-  StatusBar,\r\n-} from 'react-native';\r\n-import { Ionicons } from \"@expo/vector-icons\";\r\n-import { WebView } from \"react-native-webview\";\r\n-import type { WebView as WebViewType } from \"react-native-webview\";\r\n-import { useLocation } from '../location/GlobalLocation';\r\n-import { API_BASE_URL } from \"../../config\";\r\n-import AsyncStorage from '@react-native-async-storage/async-storage';\r\n-import { useFocusEffect } from \"@react-navigation/native\";\r\n-import { Alert, BackHandler } from \"react-native\";\r\n-import { router } from \"expo-router\";\r\n-const { width, height } = Dimensions.get('window');\r\n-\r\n-export default function DHome() {\r\n-  const { location } = useLocation();\r\n-  const [isOnline, setIsOnline] = useState(false);\r\n-  const [mapHtml, setMapHtml] = useState(\"\");\r\n-  const mapRef = useRef<WebViewType | null>(null);\r\n-  const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n-  const [confirmed, setConfirmed] = useState(false);\r\n-  const toggleSwitch = () => setIsOnline(prev => !prev);\r\n-\r\n-  useEffect(() => {\r\n-    if (!location) return;\r\n-\r\n-    const html = `\r\n-      <!DOCTYPE html>\r\n-      <html>\r\n-        <head>\r\n-          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-          <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\" />\r\n-          <style> html, body, #map { height: 100%; margin: 0; padding: 0; } </style>\r\n-        </head>\r\n-        <body>\r\n-          <div id=\"map\"></div>\r\n-          <script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"></script>\r\n-          <script>\r\n-            const map = L.map('map').setView([${location.latitude}, ${location.longitude}], 15);\r\n-            L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n-              maxZoom: 19,\r\n-              attribution: '© OpenStreetMap contributors'\r\n-            }).addTo(map);\r\n-            L.marker([${location.latitude}, ${location.longitude}]).addTo(map);\r\n-            document.addEventListener('message', function(event) {\r\n-              const msg = JSON.parse(event.data);\r\n-              if (msg.type === 'setPassengerMarkers') {\r\n-                if (pickupMarker) map.removeLayer(pickupMarker);\r\n-                if (destinationMarker) map.removeLayer(destinationMarker);\r\n-\r\n-                if (msg.pickup) {\r\n-                  pickupMarker = L.marker([msg.pickup.latitude, msg.pickup.longitude], {\r\n-                    icon: L.icon({\r\n-                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png',\r\n-                      iconSize: [30, 30],\r\n-                    })\r\n-                  }).addTo(map).bindTooltip(\"📍 Passenger\", { permanent: true, direction: \"top\" });\r\n-                }\r\n-\r\n-                if (msg.destination) {\r\n-                  destinationMarker = L.marker([msg.destination.latitude, msg.destination.longitude], {\r\n-                    icon: L.icon({\r\n-                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/green-dot.png',\r\n-                      iconSize: [30, 30],\r\n-                    })\r\n-                  }).addTo(map).bindTooltip(\"🎯 Destination\", { permanent: true, direction: \"top\" });\r\n-                }\r\n-              }\r\n-            });\r\n-          </script>\r\n-        </body>\r\n-      </html>\r\n-    `;\r\n-\r\n-    setMapHtml(html);\r\n-  }, [location]);\r\n-  const updateDriverStatus = async (newStatus: boolean) => {\r\n-    if (!location) return;\r\n-\r\n-    try {\r\n-      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n-      const driverName = await AsyncStorage.getItem(\"driverName\");\r\n-      console.log(driverName)\r\n-      if (!driverId) return;\r\n-      const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({\r\n-          driverId,\r\n-          driverName,\r\n-          isOnline: newStatus,\r\n-          location: {\r\n-            latitude: location.latitude,\r\n-            longitude: location.longitude,\r\n-          },\r\n-        }),\r\n-      });\r\n-      const data = await response.json();\r\n-      console.log(\"✅ Driver status sent:\", data);\r\n-    } catch (error) {\r\n-      console.error(\"❌ Failed to update driver status:\", error);\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    let interval: any;\r\n-\r\n-    const fetchRequests = async () => {\r\n-      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n-      if (!driverId) return;\r\n-\r\n-      try {\r\n-        const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n-        const data = await res.json();\r\n-        if (data.length > 0) {\r\n-          setIncomingBooking(data[0]);\r\n-        }\r\n-      } catch (err) {\r\n-        console.error(\"❌ Failed to fetch booking:\", err);\r\n-      }\r\n-    };\r\n-\r\n-    if (isOnline && !confirmed) {\r\n-      fetchRequests();\r\n-      interval = setInterval(fetchRequests, 5000);\r\n-    }\r\n-\r\n-    return () => clearInterval(interval);\r\n-  }, [isOnline, confirmed]);\r\n-\r\n-  useEffect(() => {\r\n-    let interval: any;\r\n-\r\n-    const checkPassengerConfirmation = async () => {\r\n-      if (!incomingBooking) return;\r\n-      try {\r\n-        const res = await fetch(`${API_BASE_URL}/api/bookings`);\r\n-        const all = await res.json();\r\n-        const found = all.find((b: any) => b.id === incomingBooking.id);\r\n-        if (found && found.passengerConfirmed) {\r\n-          setConfirmed(true);\r\n-        }\r\n-      } catch (err) {\r\n-        console.error(\"Polling error:\", err);\r\n-      }\r\n-    };\r\n-\r\n-    if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n-      interval = setInterval(checkPassengerConfirmation, 5000);\r\n-    }\r\n-\r\n-    return () => clearInterval(interval);\r\n-  }, [incomingBooking]);\r\n-\r\n-  const acceptBooking = async () => {\r\n-    try {\r\n-      const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ bookingId: incomingBooking.id }),\r\n-      });\r\n-      const result = await res.json();\r\n-      console.log(\"✅ Booking accepted:\", result);\r\n-      setIncomingBooking(result.booking);\r\n-    } catch (error) {\r\n-      console.error(\"❌ Error accepting booking:\", error);\r\n-    }\r\n-  };\r\n-\r\n-  useFocusEffect(\r\n-    React.useCallback(() => {\r\n-      const onBackPress = () => {\r\n-        Alert.alert(\r\n-          \"Logout\",\r\n-          \"Are you sure you want to log out?\",\r\n-          [\r\n-            {\r\n-              text: \"Cancel\",\r\n-              style: \"cancel\",\r\n-              onPress: () => {},\r\n-            },\r\n-            {\r\n-              text: \"Yes\",\r\n-              onPress: async () => {\r\n-                setIsOnline(false);\r\n-                updateDriverStatus(false);\r\n-                await AsyncStorage.clear();\r\n-                router.push(\"/login_and_reg/dlogin\");\r\n-              },\r\n-            },\r\n-          ]\r\n-        );\r\n-        return true; // prevent default back action\r\n-      };\r\n-\r\n-      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      // return () => subscription.remove();\r\n-    }, [isOnline])\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (!mapRef.current || !incomingBooking) return;\r\n-\r\n-    mapRef.current.postMessage(JSON.stringify({\r\n-      type: \"setPassengerMarkers\",\r\n-      pickup: {\r\n-        latitude: incomingBooking.pickupLat,\r\n-        longitude: incomingBooking.pickupLng\r\n-      },\r\n-      destination: {\r\n-        latitude: incomingBooking.destinationLat,\r\n-        longitude: incomingBooking.destinationLng\r\n-      }\r\n-    }));\r\n-  }, [incomingBooking]);\r\n-\r\n-\r\n-  return (\r\n-    <View style={styles.container}>\r\n-      <View style={{ paddingTop: 30 }}>\r\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n-      </View>\r\n-\r\n-      {mapHtml && (\r\n-        <WebView\r\n-          ref={(ref) => {\r\n-            if (ref && !mapRef.current) mapRef.current = ref;\r\n-          }}\r\n-          originWhitelist={[\"*\"]}\r\n-          source={{ html: mapHtml }}\r\n-          javaScriptEnabled\r\n-          style={styles.map}\r\n-        />\r\n-      )}\r\n-\r\n-      {incomingBooking && !confirmed && (\r\n-        <View style={styles.popup}>\r\n-          <Text style={styles.popupTitle}>🚕 Incoming Booking</Text>\r\n-          <Text>From: {incomingBooking.pickupLat.toFixed(4)}, {incomingBooking.pickupLng.toFixed(4)}</Text>\r\n-          <Text>To: {incomingBooking.destinationLat.toFixed(4)}, {incomingBooking.destinationLng.toFixed(4)}</Text>\r\n-          <Text>Fare: ₱{incomingBooking.fare}</Text>\r\n-          <Text>Payment: {incomingBooking.paymentMethod}</Text>\r\n-          <Text>Notes: {incomingBooking.notes}</Text>\r\n-          <Text>Passenger: {incomingBooking.passengerName}</Text>\r\n-\r\n-          <TouchableOpacity style={styles.acceptButton} onPress={acceptBooking}>\r\n-            <Text style={{ color: 'white', textAlign: 'center' }}>ACCEPT</Text>\r\n-          </TouchableOpacity>\r\n-        </View>\r\n-      )}\r\n-\r\n-      {confirmed && (\r\n-        <View style={styles.popup}>\r\n-          <Text style={{ fontWeight: 'bold', color: '#4caf50' }}>✅ Booking Confirmed!</Text>\r\n-          <Text>🕒 Waiting for pickup...</Text>\r\n-        </View>\r\n-      )}\r\n-\r\n-      <View style={styles.statusBar}>\r\n-        <Switch\r\n-          style={{ marginRight: 10 }}\r\n-          trackColor={{ false: '#ccc', true: '#37982a' }}\r\n-          thumbColor=\"white\"\r\n-          ios_backgroundColor=\"black\"\r\n-          onValueChange={() => {\r\n-            const newStatus = !isOnline;\r\n-            setIsOnline(newStatus);\r\n-            updateDriverStatus(newStatus);\r\n-          }}\r\n-          value={isOnline}\r\n-        />\r\n-        <View style={{ marginLeft: 10 }}>\r\n-          <Text style={styles.statusText}>\r\n-            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n-          </Text>\r\n-        </View>\r\n-      </View>\r\n-\r\n-      <View style={styles.bottomNav}>\r\n-        <TouchableOpacity>\r\n-          <Ionicons name=\"home\" size={30} color=\"black\" />\r\n-          <Text>Home</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity>\r\n-          <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n-          <Text>History</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity>\r\n-          <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n-          <Text>Chats</Text>\r\n-        </TouchableOpacity>\r\n-        <TouchableOpacity>\r\n-          <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n-          <Text>Profile</Text>\r\n-        </TouchableOpacity>\r\n-      </View>\r\n-    </View>\r\n-  );\r\n-}\r\n-\r\n-const styles = StyleSheet.create({\r\n-  container: { flex: 1 },\r\n-  map: {\r\n-    width: width,\r\n-    height: height,\r\n-    position: \"absolute\",\r\n-    top: 0,\r\n-    left: 0,\r\n-    right: 0,\r\n-    bottom: 0,\r\n-  },\r\n-  statusBar: {\r\n-    position: 'absolute',\r\n-    bottom: 75,\r\n-    backgroundColor: '#80C3E1',\r\n-    width: width,\r\n-    padding: 5,\r\n-    flexDirection: 'row',\r\n-    alignItems: 'center',\r\n-  },\r\n-  statusText: {\r\n-    color: 'black',\r\n-    fontSize: 14,\r\n-    fontWeight: '500',\r\n-  },\r\n-  bottomNav: {\r\n-    position: \"absolute\",\r\n-    bottom: 0,\r\n-    flexDirection: \"row\",\r\n-    justifyContent: \"space-around\",\r\n-    width: width,\r\n-    height: 70,\r\n-    backgroundColor: \"white\",\r\n-    borderTopLeftRadius: 30,\r\n-    borderTopRightRadius: 30,\r\n-    alignItems: \"center\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"black\",\r\n-  },\r\n-  popup: {\r\n-    position: 'absolute',\r\n-    top: 80,\r\n-    left: 20,\r\n-    right: 20,\r\n-    padding: 15,\r\n-    backgroundColor: '#fff',\r\n-    borderRadius: 10,\r\n-    elevation: 5,\r\n-    zIndex: 99,\r\n-  },\r\n-  popupTitle: {\r\n-    fontWeight: 'bold',\r\n-    fontSize: 16,\r\n-    marginBottom: 5,\r\n-  },\r\n-  acceptButton: {\r\n-    backgroundColor: '#4caf50',\r\n-    padding: 10,\r\n-    borderRadius: 5,\r\n-    marginTop: 10,\r\n-  },\r\n-});\r\n"
                },
                {
                    "date": 1747665999666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,11 +169,11 @@\n \r\n       const result = await res.json();\r\n       console.log(\"✅ Booking accepted:\", result);\r\n \r\n-      // 👇 Fetch passenger name after accepting\r\n       const passengerId = result.booking.passengerId;\r\n       if (passengerId) {\r\n+        console.log(passengerId)\r\n         const infoRes = await fetch(`${API_BASE_URL}/api/passenger/${passengerId}`);\r\n         const infoData = await infoRes.json();\r\n         if (infoData.passenger) {\r\n           result.booking.passengerName = `${infoData.passenger.firstName} ${infoData.passenger.middleName} ${infoData.passenger.lastName}`;\r\n"
                },
                {
                    "date": 1747668108471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,11 +152,12 @@\n       }\r\n     };\r\n \r\n     if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n-      interval = setInterval(checkPassengerConfirmation, 5000);\r\n+      setConfirmed(true);\r\n     }\r\n \r\n+\r\n     return () => clearInterval(interval);\r\n   }, [incomingBooking]);\r\n \r\n   const acceptBooking = async () => {\r\n"
                },
                {
                    "date": 1747668622750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,23 +136,8 @@\n   }, [isOnline, confirmed]);\r\n \r\n   useEffect(() => {\r\n     let interval: any;\r\n-\r\n-    const checkPassengerConfirmation = async () => {\r\n-      if (!incomingBooking) return;\r\n-      try {\r\n-        const res = await fetch(`${API_BASE_URL}/api/bookings`);\r\n-        const all = await res.json();\r\n-        const found = all.find((b: any) => b.id === incomingBooking.id);\r\n-        if (found && found.passengerConfirmed) {\r\n-          setConfirmed(true);\r\n-        }\r\n-      } catch (err) {\r\n-        console.error(\"Polling error:\", err);\r\n-      }\r\n-    };\r\n-\r\n     if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n       setConfirmed(true);\r\n     }\r\n \r\n"
                },
                {
                    "date": 1747670431439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,13 +140,13 @@\n     if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n       setConfirmed(true);\r\n     }\r\n \r\n-\r\n     return () => clearInterval(interval);\r\n   }, [incomingBooking]);\r\n \r\n   const acceptBooking = async () => {\r\n+    console.log(\"acceptBooking function trigger\" )\r\n     try {\r\n       const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n"
                },
                {
                    "date": 1747670641173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,8 +120,9 @@\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n         const data = await res.json();\r\n         if (data.length > 0) {\r\n           setIncomingBooking(data[0]);\r\n+          console.log(\"✅ Incoming booking:\", data[0]);\r\n         }\r\n       } catch (err) {\r\n         console.error(\"❌ Failed to fetch booking:\", err);\r\n       }\r\n"
                },
                {
                    "date": 1747670812502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,15 @@\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n         const data = await res.json();\r\n         if (data.length > 0) {\r\n           setIncomingBooking(data[0]);\r\n-          console.log(\"✅ Incoming booking:\", data[0]);\r\n+          if (data.length > 0) {\r\n+            console.log(\"✅ Incoming booking received:\", data[0]);\r\n+            setIncomingBooking(data[0]);\r\n+          } else {\r\n+            console.log(\"📭 No pending bookings for this driver yet.\");\r\n+          }\r\n+\r\n         }\r\n       } catch (err) {\r\n         console.error(\"❌ Failed to fetch booking:\", err);\r\n       }\r\n"
                },
                {
                    "date": 1747670864570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,9 @@\n   useEffect(() => {\r\n     let interval: any;\r\n \r\n     const fetchRequests = async () => {\r\n+      console.log(\"fetchRequests trigger\")\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n       if (!driverId) return;\r\n \r\n       try {\r\n"
                },
                {
                    "date": 1747670900053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,8 +114,9 @@\n \r\n     const fetchRequests = async () => {\r\n       console.log(\"fetchRequests trigger\")\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      console.log(driverId)\r\n       if (!driverId) return;\r\n \r\n       try {\r\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n"
                },
                {
                    "date": 1747671042455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,8 @@\n \r\n     const fetchRequests = async () => {\r\n       console.log(\"fetchRequests trigger\")\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n-      console.log(driverId)\r\n       if (!driverId) return;\r\n \r\n       try {\r\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n"
                },
                {
                    "date": 1747671084471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,8 @@\n   useEffect(() => {\r\n     let interval: any;\r\n \r\n     const fetchRequests = async () => {\r\n-      console.log(\"fetchRequests trigger\")\r\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n       if (!driverId) return;\r\n \r\n       try {\r\n"
                },
                {
                    "date": 1747671520802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,8 +118,9 @@\n \r\n       try {\r\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n         const data = await res.json();\r\n+        console.log(\"📬 Response from /driver-requests:\", data);\r\n         if (data.length > 0) {\r\n           setIncomingBooking(data[0]);\r\n           if (data.length > 0) {\r\n             console.log(\"✅ Incoming booking received:\", data[0]);\r\n"
                },
                {
                    "date": 1747731904027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,9 @@\n       const driverId = await AsyncStorage.getItem(\"driverId\");\r\n       if (!driverId) return;\r\n \r\n       try {\r\n+        console.log(\"🔁 Fetching requests for driver...\");\r\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n         const data = await res.json();\r\n         console.log(\"📬 Response from /driver-requests:\", data);\r\n         if (data.length > 0) {\r\n@@ -152,9 +153,9 @@\n     return () => clearInterval(interval);\r\n   }, [incomingBooking]);\r\n \r\n   const acceptBooking = async () => {\r\n-    console.log(\"acceptBooking function trigger\" )\r\n+    console.log(\"🔁 Fetching requests for driver...\");\r\n     try {\r\n       const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n"
                },
                {
                    "date": 1747732044544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,13 @@\n           value={isOnline}\r\n         />\r\n         <View style={{ marginLeft: 10 }}>\r\n           <Text style={styles.statusText}>\r\n-            {isOnline ? \"You're online.\\nLooking for bookings.....\" : \"You're offline.\"}\r\n+            {isOnline\r\n+              ? incomingBooking\r\n+                ? `📦 Incoming Booking ID: ${incomingBooking.id}`\r\n+                : \"You're online.\\nLooking for bookings.....\"\r\n+              : \"You're offline.\"}\r\n           </Text>\r\n         </View>\r\n       </View>\r\n \r\n"
                },
                {
                    "date": 1747732341016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,19 +153,18 @@\n     return () => clearInterval(interval);\r\n   }, [incomingBooking]);\r\n \r\n   const acceptBooking = async () => {\r\n-    console.log(\"🔁 Fetching requests for driver...\");\r\n     try {\r\n       const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ bookingId: incomingBooking.id }),\r\n       });\r\n \r\n       const result = await res.json();\r\n-      console.log(\"✅ Booking accepted:\", result);\r\n-\r\n+      console.log(\"✅ Booking accepted result:\", result);\r\n+      console.log(\"🧾 Booking status after accepting:\", result.booking.status);\r\n       const passengerId = result.booking.passengerId;\r\n       if (passengerId) {\r\n         console.log(passengerId)\r\n         const infoRes = await fetch(`${API_BASE_URL}/api/passenger/${passengerId}`);\r\n"
                },
                {
                    "date": 1747732366220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,8 @@\n     let interval: any;\r\n     if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n       setConfirmed(true);\r\n     }\r\n-\r\n     return () => clearInterval(interval);\r\n   }, [incomingBooking]);\r\n \r\n   const acceptBooking = async () => {\r\n"
                },
                {
                    "date": 1747732376914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,8 +146,9 @@\n \r\n   useEffect(() => {\r\n     let interval: any;\r\n     if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n+      console.log(\"🧠 Booking state changed:\", incomingBooking);\r\n       setConfirmed(true);\r\n     }\r\n     return () => clearInterval(interval);\r\n   }, [incomingBooking]);\r\n"
                },
                {
                    "date": 1747733563905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,8 @@\n           },\r\n         }),\r\n       });\r\n       const data = await response.json();\r\n-      console.log(\"✅ Driver status sent:\", data);\r\n     } catch (error) {\r\n       console.error(\"❌ Failed to update driver status:\", error);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1747735310476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,9 @@\n           },\r\n         }),\r\n       });\r\n       const data = await response.json();\r\n+      console.log(\"✅ Driver status sent:\", data);\r\n     } catch (error) {\r\n       console.error(\"❌ Failed to update driver status:\", error);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1747737821890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,10 +206,10 @@\n         );\r\n         return true; // prevent default back action\r\n       };\r\n \r\n-      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      // return () => subscription.remove();\r\n+      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      return () => subscription.remove();\r\n     }, [isOnline])\r\n   );\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1747737864875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,10 +206,10 @@\n         );\r\n         return true; // prevent default back action\r\n       };\r\n \r\n-      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      return () => subscription.remove();\r\n+      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      // return () => subscription.remove();\r\n     }, [isOnline])\r\n   );\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1747748929801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,39 @@\n   const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n   const [confirmed, setConfirmed] = useState(false);\r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n+  useFocusEffect(\r\n+    React.useCallback(() => {\r\n+      const onBackPress = () => {\r\n+        Alert.alert(\r\n+          \"Logout\",\r\n+          \"Are you sure you want to log out?\",\r\n+          [\r\n+            {\r\n+              text: \"Cancel\",\r\n+              style: \"cancel\",\r\n+              onPress: () => {},\r\n+            },\r\n+            {\r\n+              text: \"Yes\",\r\n+              onPress: async () => {\r\n+                setIsOnline(false);\r\n+                updateDriverStatus(false);\r\n+                await AsyncStorage.clear();\r\n+                router.push(\"/login_and_reg/dlogin\");\r\n+              },\r\n+            },\r\n+          ]\r\n+        );\r\n+        return true; // prevent default back action\r\n+      };\r\n+\r\n+      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      // return () => subscription.remove();\r\n+    }, [isOnline])\r\n+  );\r\n+\r\n   useEffect(() => {\r\n     if (!location) return;\r\n \r\n     const html = `\r\n@@ -179,40 +210,8 @@\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n \r\n-\r\n-  useFocusEffect(\r\n-    React.useCallback(() => {\r\n-      const onBackPress = () => {\r\n-        Alert.alert(\r\n-          \"Logout\",\r\n-          \"Are you sure you want to log out?\",\r\n-          [\r\n-            {\r\n-              text: \"Cancel\",\r\n-              style: \"cancel\",\r\n-              onPress: () => {},\r\n-            },\r\n-            {\r\n-              text: \"Yes\",\r\n-              onPress: async () => {\r\n-                setIsOnline(false);\r\n-                updateDriverStatus(false);\r\n-                await AsyncStorage.clear();\r\n-                router.push(\"/login_and_reg/dlogin\");\r\n-              },\r\n-            },\r\n-          ]\r\n-        );\r\n-        return true; // prevent default back action\r\n-      };\r\n-\r\n-      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      // return () => subscription.remove();\r\n-    }, [isOnline])\r\n-  );\r\n-\r\n   useEffect(() => {\r\n     if (!mapRef.current || !incomingBooking) return;\r\n \r\n     mapRef.current.postMessage(JSON.stringify({\r\n"
                },
                {
                    "date": 1747749085254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,39 +27,8 @@\n   const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n   const [confirmed, setConfirmed] = useState(false);\r\n   const toggleSwitch = () => setIsOnline(prev => !prev);\r\n \r\n-  useFocusEffect(\r\n-    React.useCallback(() => {\r\n-      const onBackPress = () => {\r\n-        Alert.alert(\r\n-          \"Logout\",\r\n-          \"Are you sure you want to log out?\",\r\n-          [\r\n-            {\r\n-              text: \"Cancel\",\r\n-              style: \"cancel\",\r\n-              onPress: () => {},\r\n-            },\r\n-            {\r\n-              text: \"Yes\",\r\n-              onPress: async () => {\r\n-                setIsOnline(false);\r\n-                updateDriverStatus(false);\r\n-                await AsyncStorage.clear();\r\n-                router.push(\"/login_and_reg/dlogin\");\r\n-              },\r\n-            },\r\n-          ]\r\n-        );\r\n-        return true; // prevent default back action\r\n-      };\r\n-\r\n-      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      // return () => subscription.remove();\r\n-    }, [isOnline])\r\n-  );\r\n-\r\n   useEffect(() => {\r\n     if (!location) return;\r\n \r\n     const html = `\r\n@@ -210,8 +179,40 @@\n       console.error(\"❌ Error accepting booking:\", error);\r\n     }\r\n   };\r\n \r\n+\r\n+  useFocusEffect(\r\n+    React.useCallback(() => {\r\n+      const onBackPress = () => {\r\n+        Alert.alert(\r\n+          \"Logout\",\r\n+          \"Are you sure you want to log out?\",\r\n+          [\r\n+            {\r\n+              text: \"Cancel\",\r\n+              style: \"cancel\",\r\n+              onPress: () => {},\r\n+            },\r\n+            {\r\n+              text: \"Yes\",\r\n+              onPress: async () => {\r\n+                setIsOnline(false);\r\n+                updateDriverStatus(false);\r\n+                await AsyncStorage.clear();\r\n+                router.push(\"/login_and_reg/dlogin\");\r\n+              },\r\n+            },\r\n+          ]\r\n+        );\r\n+        return true; // prevent default back action\r\n+      };\r\n+\r\n+      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      return () => subscription.remove();\r\n+    }, [isOnline])\r\n+  );\r\n+\r\n   useEffect(() => {\r\n     if (!mapRef.current || !incomingBooking) return;\r\n \r\n     mapRef.current.postMessage(JSON.stringify({\r\n"
                },
                {
                    "date": 1747749125292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,10 +206,10 @@\n         );\r\n         return true; // prevent default back action\r\n       };\r\n \r\n-      const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n-      return () => subscription.remove();\r\n+      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      // return () => subscription.remove();\r\n     }, [isOnline])\r\n   );\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1748013714980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,14 +42,19 @@\n         <body>\r\n           <div id=\"map\"></div>\r\n           <script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"></script>\r\n           <script>\r\n+            let pickupMarker = null;\r\n+            let destinationMarker = null;\r\n+\r\n             const map = L.map('map').setView([${location.latitude}, ${location.longitude}], 15);\r\n             L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n               maxZoom: 19,\r\n               attribution: '© OpenStreetMap contributors'\r\n             }).addTo(map);\r\n-            L.marker([${location.latitude}, ${location.longitude}]).addTo(map);\r\n+\r\n+            L.marker([${location.latitude}, ${location.longitude}]).addTo(map).bindTooltip(\"You\", { permanent: true, direction: \"top\" });\r\n+\r\n             document.addEventListener('message', function(event) {\r\n               const msg = JSON.parse(event.data);\r\n               if (msg.type === 'setPassengerMarkers') {\r\n                 if (pickupMarker) map.removeLayer(pickupMarker);\r\n@@ -74,8 +79,9 @@\n                 }\r\n               }\r\n             });\r\n           </script>\r\n+\r\n         </body>\r\n       </html>\r\n     `;\r\n \r\n"
                },
                {
                    "date": 1748017429276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,18 +126,27 @@\n         console.log(\"🔁 Fetching requests for driver...\");\r\n         const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n         const data = await res.json();\r\n         console.log(\"📬 Response from /driver-requests:\", data);\r\n+\r\n         if (data.length > 0) {\r\n-          setIncomingBooking(data[0]);\r\n-          if (data.length > 0) {\r\n-            console.log(\"✅ Incoming booking received:\", data[0]);\r\n-            setIncomingBooking(data[0]);\r\n-          } else {\r\n-            console.log(\"📭 No pending bookings for this driver yet.\");\r\n+          const booking = data[0];\r\n+\r\n+          // ✅ Handle cancellation\r\n+          if (booking.status === \"cancelled\") {\r\n+            console.log(\"❌ Booking cancelled by passenger\");\r\n+            setIncomingBooking(null);\r\n+            setConfirmed(false);\r\n+            return; // exit early\r\n           }\r\n \r\n+          // ✅ Otherwise, update the booking\r\n+          setIncomingBooking(booking);\r\n+          console.log(\"✅ Incoming booking received:\", booking);\r\n+        } else {\r\n+          console.log(\"📭 No pending bookings for this driver yet.\");\r\n         }\r\n+\r\n       } catch (err) {\r\n         console.error(\"❌ Failed to fetch booking:\", err);\r\n       }\r\n     };\r\n@@ -149,8 +158,9 @@\n \r\n     return () => clearInterval(interval);\r\n   }, [isOnline, confirmed]);\r\n \r\n+\r\n   useEffect(() => {\r\n     let interval: any;\r\n     if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n       console.log(\"🧠 Booking state changed:\", incomingBooking);\r\n"
                },
                {
                    "date": 1748018861370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,17 +130,23 @@\n \r\n         if (data.length > 0) {\r\n           const booking = data[0];\r\n \r\n-          // ✅ Handle cancellation\r\n           if (booking.status === \"cancelled\") {\r\n             console.log(\"❌ Booking cancelled by passenger\");\r\n+\r\n             setIncomingBooking(null);\r\n             setConfirmed(false);\r\n-            return; // exit early\r\n+\r\n+            mapRef.current?.postMessage(JSON.stringify({\r\n+              type: \"setPassengerMarkers\",\r\n+              pickup: null,\r\n+              destination: null\r\n+            }));\r\n+\r\n+            return;\r\n           }\r\n \r\n-          // ✅ Otherwise, update the booking\r\n           setIncomingBooking(booking);\r\n           console.log(\"✅ Incoming booking received:\", booking);\r\n         } else {\r\n           console.log(\"📭 No pending bookings for this driver yet.\");\r\n"
                },
                {
                    "date": 1748019261889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n         <View style={{ marginLeft: 10 }}>\r\n           <Text style={styles.statusText}>\r\n             {isOnline\r\n               ? incomingBooking\r\n-                ? `📦 Incoming Booking ID: ${incomingBooking.id}`\r\n+                ? `📦 Incoming Booking`\r\n                 : \"You're online.\\nLooking for bookings.....\"\r\n               : \"You're offline.\"}\r\n           </Text>\r\n         </View>\r\n"
                },
                {
                    "date": 1748019490621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,46 +118,50 @@\n   useEffect(() => {\r\n     let interval: any;\r\n \r\n     const fetchRequests = async () => {\r\n-      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n-      if (!driverId) return;\r\n+    const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+    if (!driverId) return;\r\n \r\n-      try {\r\n-        console.log(\"🔁 Fetching requests for driver...\");\r\n-        const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n-        const data = await res.json();\r\n-        console.log(\"📬 Response from /driver-requests:\", data);\r\n+    try {\r\n+      console.log(\"🔁 Fetching requests for driver...\");\r\n+      const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n+      const data = await res.json();\r\n+      console.log(\"📬 Response from /driver-requests:\", data);\r\n \r\n-        if (data.length > 0) {\r\n-          const booking = data[0];\r\n+      if (data.length > 0) {\r\n+        const booking = data[0];\r\n \r\n-          if (booking.status === \"cancelled\") {\r\n-            console.log(\"❌ Booking cancelled by passenger\");\r\n+        if (booking.status === \"cancelled\") {\r\n+          console.log(\"❌ Booking cancelled by passenger\");\r\n \r\n-            setIncomingBooking(null);\r\n-            setConfirmed(false);\r\n+          // 🧹 Reset UI and map\r\n+          setIncomingBooking(null);\r\n+          setConfirmed(false);\r\n \r\n-            mapRef.current?.postMessage(JSON.stringify({\r\n-              type: \"setPassengerMarkers\",\r\n-              pickup: null,\r\n-              destination: null\r\n-            }));\r\n+          mapRef.current?.postMessage(JSON.stringify({\r\n+            type: \"setPassengerMarkers\",\r\n+            pickup: null,\r\n+            destination: null\r\n+          }));\r\n \r\n-            return;\r\n-          }\r\n-\r\n-          setIncomingBooking(booking);\r\n-          console.log(\"✅ Incoming booking received:\", booking);\r\n-        } else {\r\n-          console.log(\"📭 No pending bookings for this driver yet.\");\r\n+          return; // ✅ early exit\r\n         }\r\n \r\n-      } catch (err) {\r\n-        console.error(\"❌ Failed to fetch booking:\", err);\r\n+        // ✅ If booking is valid (not cancelled)\r\n+        setIncomingBooking(booking);\r\n+        console.log(\"✅ Incoming booking received:\", booking);\r\n+      } else {\r\n+        console.log(\"📭 No pending bookings for this driver yet.\");\r\n+        setIncomingBooking(null); // just in case\r\n       }\r\n-    };\r\n \r\n+    } catch (err) {\r\n+      console.error(\"❌ Failed to fetch booking:\", err);\r\n+    }\r\n+  };\r\n+\r\n+\r\n     if (isOnline && !confirmed) {\r\n       fetchRequests();\r\n       interval = setInterval(fetchRequests, 5000);\r\n     }\r\n"
                },
                {
                    "date": 1748041685373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,404 @@\n+import React, { useEffect, useState, useRef } from 'react';\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  Switch,\r\n+  StyleSheet,\r\n+  Dimensions,\r\n+  TouchableOpacity,\r\n+  StatusBar,\r\n+} from 'react-native';\r\n+import { Ionicons } from \"@expo/vector-icons\";\r\n+import { WebView } from \"react-native-webview\";\r\n+import type { WebView as WebViewType } from \"react-native-webview\";\r\n+import { useLocation } from '../location/GlobalLocation';\r\n+import { API_BASE_URL } from \"../../config\";\r\n+import AsyncStorage from '@react-native-async-storage/async-storage';\r\n+import { useFocusEffect } from \"@react-navigation/native\";\r\n+import { Alert, BackHandler } from \"react-native\";\r\n+import { router } from \"expo-router\";\r\n+const { width, height } = Dimensions.get('window');\r\n+\r\n+export default function DHome() {\r\n+  const { location } = useLocation();\r\n+  const [isOnline, setIsOnline] = useState(false);\r\n+  const [mapHtml, setMapHtml] = useState(\"\");\r\n+  const mapRef = useRef<WebViewType | null>(null);\r\n+  const [incomingBooking, setIncomingBooking] = useState<any>(null);\r\n+  const [confirmed, setConfirmed] = useState(false);\r\n+  const toggleSwitch = () => setIsOnline(prev => !prev);\r\n+\r\n+  useEffect(() => {\r\n+    if (!location) return;\r\n+\r\n+    const html = `\r\n+      <!DOCTYPE html>\r\n+      <html>\r\n+        <head>\r\n+          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+          <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\" />\r\n+          <style> html, body, #map { height: 100%; margin: 0; padding: 0; } </style>\r\n+        </head>\r\n+        <body>\r\n+          <div id=\"map\"></div>\r\n+          <script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"></script>\r\n+          <script>\r\n+            let pickupMarker = null;\r\n+            let destinationMarker = null;\r\n+\r\n+            const map = L.map('map').setView([${location.latitude}, ${location.longitude}], 15);\r\n+            L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n+              maxZoom: 19,\r\n+              attribution: '© OpenStreetMap contributors'\r\n+            }).addTo(map);\r\n+\r\n+            L.marker([${location.latitude}, ${location.longitude}]).addTo(map).bindTooltip(\"You\", { permanent: true, direction: \"top\" });\r\n+\r\n+            document.addEventListener('message', function(event) {\r\n+              const msg = JSON.parse(event.data);\r\n+              if (msg.type === 'setPassengerMarkers') {\r\n+                if (pickupMarker) map.removeLayer(pickupMarker);\r\n+                if (destinationMarker) map.removeLayer(destinationMarker);\r\n+\r\n+                if (msg.pickup) {\r\n+                  pickupMarker = L.marker([msg.pickup.latitude, msg.pickup.longitude], {\r\n+                    icon: L.icon({\r\n+                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png',\r\n+                      iconSize: [30, 30],\r\n+                    })\r\n+                  }).addTo(map).bindTooltip(\"📍 Passenger\", { permanent: true, direction: \"top\" });\r\n+                }\r\n+\r\n+                if (msg.destination) {\r\n+                  destinationMarker = L.marker([msg.destination.latitude, msg.destination.longitude], {\r\n+                    icon: L.icon({\r\n+                      iconUrl: 'https://maps.gstatic.com/mapfiles/ms2/micons/green-dot.png',\r\n+                      iconSize: [30, 30],\r\n+                    })\r\n+                  }).addTo(map).bindTooltip(\"🎯 Destination\", { permanent: true, direction: \"top\" });\r\n+                }\r\n+              }\r\n+            });\r\n+          </script>\r\n+\r\n+        </body>\r\n+      </html>\r\n+    `;\r\n+\r\n+    setMapHtml(html);\r\n+  }, [location]);\r\n+  const updateDriverStatus = async (newStatus: boolean) => {\r\n+    if (!location) return;\r\n+\r\n+    try {\r\n+      const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+      const driverName = await AsyncStorage.getItem(\"driverName\");\r\n+      console.log(driverName)\r\n+      if (!driverId) return;\r\n+      const response = await fetch(`${API_BASE_URL}/api/driver-status`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({\r\n+          driverId,\r\n+          driverName,\r\n+          isOnline: newStatus,\r\n+          location: {\r\n+            latitude: location.latitude,\r\n+            longitude: location.longitude,\r\n+          },\r\n+        }),\r\n+      });\r\n+      const data = await response.json();\r\n+      console.log(\"✅ Driver status sent:\", data);\r\n+    } catch (error) {\r\n+      console.error(\"❌ Failed to update driver status:\", error);\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    let interval: any;\r\n+\r\n+    const fetchRequests = async () => {\r\n+    const driverId = await AsyncStorage.getItem(\"driverId\");\r\n+    if (!driverId) return;\r\n+\r\n+    try {\r\n+      console.log(\"🔁 Fetching requests for driver...\");\r\n+      const res = await fetch(`${API_BASE_URL}/api/driver-requests/${driverId}`);\r\n+      const data = await res.json();\r\n+\r\n+      if (data.length > 0) {\r\n+        const booking = data[0];\r\n+\r\n+        if (booking.status === \"cancelled\") {\r\n+          console.log(\"❌ Booking cancelled by passenger\");\r\n+\r\n+          // 🧹 Reset UI and map\r\n+          setIncomingBooking(null);\r\n+          setConfirmed(false);\r\n+\r\n+          mapRef.current?.postMessage(JSON.stringify({\r\n+            type: \"setPassengerMarkers\",\r\n+            pickup: null,\r\n+            destination: null\r\n+          }));\r\n+\r\n+          return; // ✅ early exit\r\n+        }\r\n+\r\n+        // ✅ If booking is valid (not cancelled)\r\n+        setIncomingBooking(booking);\r\n+      } else {\r\n+        console.log(\"📭 No pending bookings for this driver yet.\");\r\n+        setIncomingBooking(null); // just in case\r\n+      }\r\n+\r\n+    } catch (err) {\r\n+      console.error(\"❌ Failed to fetch booking:\", err);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+    if (isOnline && !confirmed) {\r\n+      fetchRequests();\r\n+      interval = setInterval(fetchRequests, 5000);\r\n+    }\r\n+\r\n+    return () => clearInterval(interval);\r\n+  }, [isOnline, confirmed]);\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    let interval: any;\r\n+    if (incomingBooking && incomingBooking.status === \"accepted\") {\r\n+      console.log(\"🧠 Booking state changed:\", incomingBooking);\r\n+      setConfirmed(true);\r\n+    }\r\n+    return () => clearInterval(interval);\r\n+  }, [incomingBooking]);\r\n+\r\n+  const acceptBooking = async () => {\r\n+    try {\r\n+      const res = await fetch(`${API_BASE_URL}/api/accept-booking`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ bookingId: incomingBooking.id }),\r\n+      });\r\n+\r\n+      const result = await res.json();\r\n+      console.log(\"✅ Booking accepted result:\", result);\r\n+      console.log(\"🧾 Booking status after accepting:\", result.booking.status);\r\n+      const passengerId = result.booking.passengerId;\r\n+      if (passengerId) {\r\n+        console.log(passengerId)\r\n+        const infoRes = await fetch(`${API_BASE_URL}/api/passenger/${passengerId}`);\r\n+        const infoData = await infoRes.json();\r\n+        if (infoData.passenger) {\r\n+          result.booking.passengerName = `${infoData.passenger.firstName} ${infoData.passenger.middleName} ${infoData.passenger.lastName}`;\r\n+        }\r\n+      }\r\n+\r\n+      setIncomingBooking(result.booking);\r\n+    } catch (error) {\r\n+      console.error(\"❌ Error accepting booking:\", error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  useFocusEffect(\r\n+    React.useCallback(() => {\r\n+      const onBackPress = () => {\r\n+        Alert.alert(\r\n+          \"Logout\",\r\n+          \"Are you sure you want to log out?\",\r\n+          [\r\n+            {\r\n+              text: \"Cancel\",\r\n+              style: \"cancel\",\r\n+              onPress: () => {},\r\n+            },\r\n+            {\r\n+              text: \"Yes\",\r\n+              onPress: async () => {\r\n+                setIsOnline(false);\r\n+                updateDriverStatus(false);\r\n+                await AsyncStorage.clear();\r\n+                router.push(\"/login_and_reg/dlogin\");\r\n+              },\r\n+            },\r\n+          ]\r\n+        );\r\n+        return true; // prevent default back action\r\n+      };\r\n+\r\n+      // const subscription = BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n+      // return () => subscription.remove();\r\n+    }, [isOnline])\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (!mapRef.current || !incomingBooking) return;\r\n+\r\n+    mapRef.current.postMessage(JSON.stringify({\r\n+      type: \"setPassengerMarkers\",\r\n+      pickup: {\r\n+        latitude: incomingBooking.pickupLat,\r\n+        longitude: incomingBooking.pickupLng\r\n+      },\r\n+      destination: {\r\n+        latitude: incomingBooking.destinationLat,\r\n+        longitude: incomingBooking.destinationLng\r\n+      }\r\n+    }));\r\n+  }, [incomingBooking]);\r\n+\r\n+\r\n+  return (\r\n+    <View style={styles.container}>\r\n+      <View style={{ paddingTop: 30 }}>\r\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n+      </View>\r\n+\r\n+      {mapHtml && (\r\n+        <WebView\r\n+          ref={(ref) => {\r\n+            if (ref && !mapRef.current) mapRef.current = ref;\r\n+          }}\r\n+          originWhitelist={[\"*\"]}\r\n+          source={{ html: mapHtml }}\r\n+          javaScriptEnabled\r\n+          style={styles.map}\r\n+        />\r\n+      )}\r\n+\r\n+      {incomingBooking && !confirmed && (\r\n+        <View style={styles.popup}>\r\n+          <Text style={styles.popupTitle}>🚕 Incoming Booking</Text>\r\n+          <Text>From: {incomingBooking.pickupLat.toFixed(4)}, {incomingBooking.pickupLng.toFixed(4)}</Text>\r\n+          <Text>To: {incomingBooking.destinationLat.toFixed(4)}, {incomingBooking.destinationLng.toFixed(4)}</Text>\r\n+          <Text>Fare: ₱{incomingBooking.fare}</Text>\r\n+          <Text>Payment: {incomingBooking.paymentMethod}</Text>\r\n+          <Text>Notes: {incomingBooking.notes}</Text>\r\n+          <Text>Passenger: {incomingBooking.passengerName}</Text>\r\n+\r\n+          <TouchableOpacity style={styles.acceptButton} onPress={acceptBooking}>\r\n+            <Text style={{ color: 'white', textAlign: 'center' }}>ACCEPT</Text>\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+      )}\r\n+\r\n+      {confirmed && (\r\n+        <View style={styles.popup}>\r\n+          <Text style={{ fontWeight: 'bold', color: '#4caf50' }}>✅ Booking Confirmed!</Text>\r\n+          <Text>🕒 Waiting for pickup...</Text>\r\n+        </View>\r\n+      )}\r\n+\r\n+      <View style={styles.statusBar}>\r\n+        <Switch\r\n+          style={{ marginRight: 10 }}\r\n+          trackColor={{ false: '#ccc', true: '#37982a' }}\r\n+          thumbColor=\"white\"\r\n+          ios_backgroundColor=\"black\"\r\n+          onValueChange={() => {\r\n+            const newStatus = !isOnline;\r\n+            setIsOnline(newStatus);\r\n+            updateDriverStatus(newStatus);\r\n+          }}\r\n+          value={isOnline}\r\n+        />\r\n+        <View style={{ marginLeft: 10 }}>\r\n+          <Text style={styles.statusText}>\r\n+            {isOnline\r\n+              ? incomingBooking\r\n+                ? `📦 Incoming Booking`\r\n+                : \"You're online.\\nLooking for bookings.....\"\r\n+              : \"You're offline.\"}\r\n+          </Text>\r\n+        </View>\r\n+      </View>\r\n+\r\n+      <View style={styles.bottomNav}>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"home\" size={30} color=\"black\" />\r\n+          <Text>Home</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"document-text-outline\" size={30} color=\"black\" />\r\n+          <Text>History</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"chatbubbles-outline\" size={30} color=\"black\" />\r\n+          <Text>Chats</Text>\r\n+        </TouchableOpacity>\r\n+        <TouchableOpacity>\r\n+          <Ionicons name=\"person-outline\" size={30} color=\"black\" />\r\n+          <Text>Profile</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+    </View>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { flex: 1 },\r\n+  map: {\r\n+    width: width,\r\n+    height: height,\r\n+    position: \"absolute\",\r\n+    top: 0,\r\n+    left: 0,\r\n+    right: 0,\r\n+    bottom: 0,\r\n+  },\r\n+  statusBar: {\r\n+    position: 'absolute',\r\n+    bottom: 75,\r\n+    backgroundColor: '#80C3E1',\r\n+    width: width,\r\n+    padding: 5,\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n+  },\r\n+  statusText: {\r\n+    color: 'black',\r\n+    fontSize: 14,\r\n+    fontWeight: '500',\r\n+  },\r\n+  bottomNav: {\r\n+    position: \"absolute\",\r\n+    bottom: 0,\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-around\",\r\n+    width: width,\r\n+    height: 70,\r\n+    backgroundColor: \"white\",\r\n+    borderTopLeftRadius: 30,\r\n+    borderTopRightRadius: 30,\r\n+    alignItems: \"center\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"black\",\r\n+  },\r\n+  popup: {\r\n+    position: 'absolute',\r\n+    top: 80,\r\n+    left: 20,\r\n+    right: 20,\r\n+    padding: 15,\r\n+    backgroundColor: '#fff',\r\n+    borderRadius: 10,\r\n+    elevation: 5,\r\n+    zIndex: 99,\r\n+  },\r\n+  popupTitle: {\r\n+    fontWeight: 'bold',\r\n+    fontSize: 16,\r\n+    marginBottom: 5,\r\n+  },\r\n+  acceptButton: {\r\n+    backgroundColor: '#4caf50',\r\n+    padding: 10,\r\n+    borderRadius: 5,\r\n+    marginTop: 10,\r\n+  },\r\n+});\r\n"
                }
            ],
            "date": 1745800679436,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, StatusBar } from \"react-native\";\r\nimport { useRouter } from \"expo-router\";\r\n\r\nexport default function DHome() {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n\r\n      <Text style={styles.title}>Welcome, Driver!</Text>\r\n\r\n      <TouchableOpacity style={styles.button} onPress={() => router.back()}>\r\n        <Text style={styles.buttonText}>Log Out</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* You can later add more driver-specific features here */}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { \r\n    flex: 1, \r\n    justifyContent: \"center\", \r\n    alignItems: \"center\", \r\n    backgroundColor: \"#f5f5f5\" \r\n  },\r\n  title: { \r\n    fontSize: 24, \r\n    fontWeight: \"bold\", \r\n    marginBottom: 30, \r\n    color: \"#333\" \r\n  },\r\n  button: {\r\n    backgroundColor: \"#5089A3\",\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 25,\r\n    borderRadius: 8,\r\n  },\r\n  buttonText: { \r\n    color: \"#fff\", \r\n    fontSize: 16, \r\n    fontWeight: \"bold\" \r\n  },\r\n});\r\n"
        }
    ]
}