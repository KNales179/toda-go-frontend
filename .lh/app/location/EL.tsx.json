{
    "sourceFile": "app/location/EL.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1743946372276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743947968401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import React, { useEffect, useState } from \"react\";\r\n-import { View, Text, Image, ImageBackground, StyleSheet, Dimensions, TouchableOpacity, Alert } from \"react-native\";\r\n+import { View, Text, Image, useColorScheme, ImageBackground, StyleSheet, Dimensions, TouchableOpacity, Alert } from \"react-native\";\r\n import * as Location from \"expo-location\";\r\n import { useRouter } from \"expo-router\";\r\n \r\n+\r\n const { width, height } = Dimensions.get(\"window\");\r\n \r\n export default function EL() {\r\n     const router = useRouter();\r\n"
                },
                {
                    "date": 1743947985229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,10 @@\n     // Check location status on mount\r\n     useEffect(() => {\r\n         checkLocationPermission();\r\n     }, []);\r\n+    const colorScheme = useColorScheme();\r\n+    const isDarkMode = colorScheme === 'dark';\r\n \r\n     return (\r\n         <View style={styles.container}>\r\n             <ImageBackground source={require(\"../../assets/images/loc2.png\")} style={styles.background}>\r\n"
                },
                {
                    "date": 1743948038147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     const colorScheme = useColorScheme();\r\n     const isDarkMode = colorScheme === 'dark';\r\n \r\n     return (\r\n-        <View style={styles.container}>\r\n+        <View style={[styles.container, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n             <ImageBackground source={require(\"../../assets/images/loc2.png\")} style={styles.background}>\r\n                 {/* Dark overlay */}\r\n                 <View style={styles.overlay} />\r\n                 {/* Centered Container */}\r\n"
                },
                {
                    "date": 1743948102073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,14 +55,14 @@\n     const colorScheme = useColorScheme();\r\n     const isDarkMode = colorScheme === 'dark';\r\n \r\n     return (\r\n-        <View style={[styles.container, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n+        <View style={styles.container}>\r\n             <ImageBackground source={require(\"../../assets/images/loc2.png\")} style={styles.background}>\r\n                 {/* Dark overlay */}\r\n                 <View style={styles.overlay} />\r\n                 {/* Centered Container */}\r\n-                <View style={styles.content}>\r\n+                <View style={[styles.content, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n                     <View>\r\n                         <Image style={styles.loc} source={require(\"../../assets/images/loc.png\")} />\r\n                     </View>\r\n                     <Text style={styles.title}>Enable your location</Text>\r\n"
                },
                {
                    "date": 1743948168514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,10 +64,10 @@\n                 <View style={[styles.content, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n                     <View>\r\n                         <Image style={styles.loc} source={require(\"../../assets/images/loc.png\")} />\r\n                     </View>\r\n-                    <Text style={styles.title}>Enable your location</Text>\r\n-                    <Text style={styles.subtitle}>\r\n+                    <Text style={[styles.title, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Enable your location</Text>\r\n+                    <Text style={[styles.subtitle, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>\r\n                         Choose your location to start finding requests around you.\r\n                     </Text>\r\n                     <TouchableOpacity style={styles.button} onPress={requestLocationPermission}>\r\n                         <Text style={styles.btntext}>Use my location</Text>\r\n"
                },
                {
                    "date": 1743948227279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                     <View>\r\n                         <Image style={styles.loc} source={require(\"../../assets/images/loc.png\")} />\r\n                     </View>\r\n                     <Text style={[styles.title, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Enable your location</Text>\r\n-                    <Text style={[styles.subtitle, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>\r\n+                    <Text style={styles.subtitle}>\r\n                         Choose your location to start finding requests around you.\r\n                     </Text>\r\n                     <TouchableOpacity style={styles.button} onPress={requestLocationPermission}>\r\n                         <Text style={styles.btntext}>Use my location</Text>\r\n@@ -107,8 +107,9 @@\n   loc: {\r\n     margin: 50,\r\n     height: 180,\r\n     width: 180,\r\n+    borderRadius: 50,\r\n   },\r\n   title: {\r\n     fontSize: 27,\r\n     fontWeight: \"800\",\r\n"
                },
                {
                    "date": 1743948244795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,9 @@\n     borderRadius: 10,\r\n     zIndex: 1,\r\n   },\r\n   loc: {\r\n+    backgroundColor: 'white'\r\n     margin: 50,\r\n     height: 180,\r\n     width: 180,\r\n     borderRadius: 50,\r\n"
                },
                {
                    "date": 1743948258486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,13 +104,13 @@\n     borderRadius: 10,\r\n     zIndex: 1,\r\n   },\r\n   loc: {\r\n-    backgroundColor: 'white'\r\n+    backgroundColor: 'white',\r\n     margin: 50,\r\n     height: 180,\r\n     width: 180,\r\n-    borderRadius: 50,\r\n+    borderRadius: 100,\r\n   },\r\n   title: {\r\n     fontSize: 27,\r\n     fontWeight: \"800\",\r\n"
                },
                {
                    "date": 1743948372575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,8 @@\n     backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n   },\r\n   content: {\r\n     width: width - 50,\r\n-    backgroundColor: \"white\",\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\",\r\n     borderRadius: 10,\r\n     zIndex: 1,\r\n"
                },
                {
                    "date": 1743948378640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n     borderRadius: 10,\r\n     zIndex: 1,\r\n   },\r\n   loc: {\r\n-    backgroundColor: 'white',\r\n+    backgroundColor: '#f2f2f2',\r\n     margin: 50,\r\n     height: 180,\r\n     width: 180,\r\n     borderRadius: 100,\r\n"
                },
                {
                    "date": 1743948406775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                 <View style={[styles.content, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n                     <View>\r\n                         <Image style={styles.loc} source={require(\"../../assets/images/loc.png\")} />\r\n                     </View>\r\n-                    <Text style={[styles.title, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Enable your location</Text>\r\n+                    <Text style={[styles.title, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Enable your location</Text>\r\n                     <Text style={styles.subtitle}>\r\n                         Choose your location to start finding requests around you.\r\n                     </Text>\r\n                     <TouchableOpacity style={styles.button} onPress={requestLocationPermission}>\r\n"
                },
                {
                    "date": 1744170502750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n \r\n const styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n-    marginTop: 40,\r\n+    marginTop: 30,\r\n   },\r\n   background: {\r\n     width: width,\r\n     height: height,\r\n"
                }
            ],
            "date": 1743946372276,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, Image, ImageBackground, StyleSheet, Dimensions, TouchableOpacity, Alert } from \"react-native\";\r\nimport * as Location from \"expo-location\";\r\nimport { useRouter } from \"expo-router\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport default function EL() {\r\n    const router = useRouter();\r\n    const [isLocationEnabled, setIsLocationEnabled] = useState(false);\r\n\r\n    // Function to check if location is already enabled\r\n    const checkLocationPermission = async () => {\r\n      const { status } = await Location.getForegroundPermissionsAsync();\r\n      const isEnabled = await Location.hasServicesEnabledAsync(); // Checks if GPS is enabled\r\n  \r\n      if (status === \"granted\" && isEnabled) {\r\n        setIsLocationEnabled(true);\r\n        \r\n        // Show alert and redirect after 2 seconds\r\n        Alert.alert(\"Location Already Enabled\", \"You will be redirected shortly...\");\r\n        setTimeout(() => {router.push(\"/location/welcome\");}, 2000);\r\n      }\r\n    };\r\n    \r\n\r\n    // Function to request location permissions\r\n    const requestLocationPermission = async () => {\r\n        const { status } = await Location.requestForegroundPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n            Alert.alert(\r\n                \"Location Access Denied\",\r\n                \"Please enable location services in your settings.\",\r\n                [{ text: \"OK\" }]\r\n            );\r\n            return;\r\n        }\r\n\r\n        // Get user's location\r\n        const location = await Location.getCurrentPositionAsync({});\r\n        console.log(\"User's location:\", location);\r\n\r\n        // Show success alert and wait 2 seconds before navigating\r\n        Alert.alert(\"Location Enabled\", \"Your location has been accessed successfully.\");\r\n        setTimeout(() => {\r\n            router.push(\"/location/welcome\");\r\n        }, 2000);\r\n    };\r\n\r\n    // Check location status on mount\r\n    useEffect(() => {\r\n        checkLocationPermission();\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={require(\"../../assets/images/loc2.png\")} style={styles.background}>\r\n                {/* Dark overlay */}\r\n                <View style={styles.overlay} />\r\n                {/* Centered Container */}\r\n                <View style={styles.content}>\r\n                    <View>\r\n                        <Image style={styles.loc} source={require(\"../../assets/images/loc.png\")} />\r\n                    </View>\r\n                    <Text style={styles.title}>Enable your location</Text>\r\n                    <Text style={styles.subtitle}>\r\n                        Choose your location to start finding requests around you.\r\n                    </Text>\r\n                    <TouchableOpacity style={styles.button} onPress={requestLocationPermission}>\r\n                        <Text style={styles.btntext}>Use my location</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{ marginBottom: 40 }}>\r\n                        <Text style={styles.btntext2} onPress={() => router.push(\"/location/manual\")}>Skip for now</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 40,\r\n  },\r\n  background: {\r\n    width: width,\r\n    height: height,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  overlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  content: {\r\n    width: width - 50,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    zIndex: 1,\r\n  },\r\n  loc: {\r\n    margin: 50,\r\n    height: 180,\r\n    width: 180,\r\n  },\r\n  title: {\r\n    fontSize: 27,\r\n    fontWeight: \"800\",\r\n    color: \"#414141\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Poppins-SemiBold\",\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"400\",\r\n    color: \"#A0A0A0\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n    marginHorizontal: 30,\r\n    fontFamily: \"Poppins-Regular\",\r\n  },\r\n  button: {\r\n    width: \"90%\",\r\n    margin: 30,\r\n  },\r\n  btntext: {\r\n    textAlign: \"center\",\r\n    color: \"#FFFFFF\",\r\n    backgroundColor: \"#5089A3\",\r\n    borderRadius: 10,\r\n    fontSize: 20,\r\n    padding: 20,\r\n    fontWeight: \"600\",\r\n    fontFamily: \"Poppins-SemiBold\",\r\n  },\r\n  btntext2: {\r\n    textAlign: \"center\",\r\n    color: \"#B8B8B8\",\r\n    borderRadius: 10,\r\n    fontSize: 20,\r\n    padding: 20,\r\n    fontWeight: \"600\",\r\n    fontFamily: \"Poppins-SemiBold\",\r\n  },\r\n});\r\n"
        }
    ]
}