{
    "sourceFile": "app/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 48,
            "patches": [
                {
                    "date": 1742703640301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742704060082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n-import { Text, View } from \"react-native\";\n+import { Text, View, StatusBar } from \"react-native\";\n \n export default function Index() {\n   return (\n-    <View></View>\n+    <View>\n+      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n+      <Text>Hello World</Text>\n+    </View>\n   );\n-}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704137793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n export default function Index() {\n   return (\n     <View>\n-      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n+      {/* <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" /> */}\n       <Text>Hello World</Text>\n     </View>\n   );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704153342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n export default function Index() {\n   return (\n     <View>\n-      {/* <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" /> */}\n+      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n       <Text>Hello World</Text>\n     </View>\n   );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704212236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,9 @@\n-import { Text, View, StatusBar } from \"react-native\";\n+import React from \"react\";\n+import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\n+import { StyleSheet, SafeAreaView} from \"react-native\";\n+const { width } = Dimensions.get('window');\n+const { height } = Dimensions.get('window');\n \n export default function Index() {\n   return (\n     <View>\n"
                },
                {
                    "date": 1742704247725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n \n export default function Index() {\n   return (\n     <View>\n-      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n+      <View>\n+        <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n+      </View>\n       <Text>Hello World</Text>\n     </View>\n   );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704292066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n export default function Index() {\n   return (\n     <View>\n-      <View>\n+      <View style={{paddingTop: 10}}>\n         <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n       </View>\n       <Text>Hello World</Text>\n     </View>\n"
                },
                {
                    "date": 1742704316599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n \n export default function Index() {\n   return (\n     <View>\n-      <View style={{paddingTop: 10}}>\n-        <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n+      <View style={{paddingTop: 20}}>\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <Text>Hello World</Text>\n     </View>\n   );\n"
                },
                {
                    "date": 1742704326561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function Index() {\n   return (\n     <View>\n       <View style={{paddingTop: 20}}>\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n+        <StatusBar barStyle=\"light-content\" translucent={true} />\n       </View>\n       <Text>Hello World</Text>\n     </View>\n   );\n"
                },
                {
                    "date": 1742704339011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n \n export default function Index() {\n   return (\n     <View>\n-      <View style={{paddingTop: 20}}>\n-        <StatusBar barStyle=\"light-content\" translucent={true} />\n+      <View style={{paddingTop: 30}}>\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <Text>Hello World</Text>\n     </View>\n   );\n"
                },
                {
                    "date": 1742704396001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,14 @@\n \n export default function Index() {\n   return (\n     <View>\n-      <View style={{paddingTop: 30}}>\n+      <View style={{paddingTop: 40}}>\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n-      <Text>Hello World</Text>\n+      <View style={styles.mainUI}>\n+        <Text>Hello World</Text>\n+      </View>\n+      \n     </View>\n   );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704401763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,7 @@\n       </View>\n       <View style={styles.mainUI}>\n         <Text>Hello World</Text>\n       </View>\n-      \n     </View>\n   );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704669407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,12 @@\n         <Text>Hello World</Text>\n       </View>\n     </View>\n   );\n-}\n\\ No newline at end of file\n+};\n+\n+const styles = StyleSheet.create({\n+  mainUI:{\n+    backgroundColor: '#f2f2f2',\n+\n+  },\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704704177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,9 @@\n \n const styles = StyleSheet.create({\n   mainUI:{\n     backgroundColor: '#f2f2f2',\n+    height: height,\n+    width: width,\n \n   },\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742704716817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,6 @@\n   mainUI:{\n     backgroundColor: '#f2f2f2',\n     height: height,\n     width: width,\n-\n   },\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742705018168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,36 @@\n-import React from \"react\";\n+import React, { useEffect } from \"react\";\n import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\n import { StyleSheet, SafeAreaView} from \"react-native\";\n+import * as SplashScreen from \"expo-splash-screen\";\n const { width } = Dimensions.get('window');\n const { height } = Dimensions.get('window');\n \n+SplashScreen.preventAutoHideAsync(); // Keep splash screen visible\n+\n export default function Index() {\n+  useEffect(() => {\n+    async function loadApp() {\n+      try {\n+        // Simulate a loading process (e.g., fetching data)\n+        await new Promise(resolve => setTimeout(resolve, 2000));\n+      } catch (e) {\n+        console.warn(e);\n+      } finally {\n+        await SplashScreen.hideAsync(); // Hide the splash screen when done\n+      }\n+    }\n+    loadApp();\n+  }, []);\n+\n+\n   return (\n-    <View>\n-      <View style={{paddingTop: 40}}>\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n-      </View>\n-      <View style={styles.mainUI}>\n-        <Text>Hello World</Text>\n-      </View>\n+    <View style={styles.mainUI}>\n+      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\n+      <Text>Main App Screen</Text>\n     </View>\n   );\n-};\n-\n+}\n const styles = StyleSheet.create({\n   mainUI:{\n     backgroundColor: '#f2f2f2',\n     height: height,\n"
                },
                {
                    "date": 1742705054039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,15 @@\n   }, []);\n \n \n   return (\n-    <View style={styles.mainUI}>\n-      <StatusBar barStyle=\"light-content\" translucent backgroundColor=\"black\" />\n-      <Text>Main App Screen</Text>\n+    <View>\n+      <View style={{paddingTop: 40}}>\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n+      </View>\n+      <View style={styles.mainUI}>\n+        <Text>Hello World</Text>\n+      </View>\n     </View>\n   );\n }\n const styles = StyleSheet.create({\n"
                },
                {
                    "date": 1743945704708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +1,108 @@\n-import React, { useEffect } from \"react\";\n+import React, { useEffect, useState } from \"react\";\n import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\n-import { StyleSheet, SafeAreaView} from \"react-native\";\n+import { StyleSheet, SafeAreaView, useColorScheme} from \"react-native\";\n+import Svg, { Circle } from \"react-native-svg\";\n import * as SplashScreen from \"expo-splash-screen\";\n+import { useRouter } from \"expo-router\";\n+import Animated, {useSharedValue, useAnimatedProps, withTiming, Easing,} from \"react-native-reanimated\";\n+import { Ionicons } from \"@expo/vector-icons\";\n const { width } = Dimensions.get('window');\n const { height } = Dimensions.get('window');\n+const size = 80; \n+const strokeWidth = 6;\n+const radius = (size - strokeWidth) / 2;\n+const circumference = 2 * Math.PI * radius;\n+const AnimatedCircle = Animated.createAnimatedComponent(Circle);\n \n-SplashScreen.preventAutoHideAsync(); // Keep splash screen visible\n+SplashScreen.preventAutoHideAsync(); \n \n export default function Index() {\n   useEffect(() => {\n     async function loadApp() {\n       try {\n-        // Simulate a loading process (e.g., fetching data)\n         await new Promise(resolve => setTimeout(resolve, 2000));\n       } catch (e) {\n         console.warn(e);\n       } finally {\n-        await SplashScreen.hideAsync(); // Hide the splash screen when done\n+        await SplashScreen.hideAsync(); \n       }\n     }\n     loadApp();\n   }, []);\n \n+  const router = useRouter();\n \n+  const progress = useSharedValue(0);\n+  useEffect(() => {\n+    progress.value = withTiming(0.33, {\n+      duration: 1000,\n+      easing: Easing.linear,\n+    });\n+  }, []);\n+\n+  const animatedProps = useAnimatedProps(() => ({\n+    strokeDashoffset: circumference * (1 - progress.value),\n+  }));\n+  export default function Index() {\n+    const colorScheme = useColorScheme(); // 👈 Get current mode (light or dark)\n+    const isDarkMode = colorScheme === 'dark';\n+\n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n+        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n       </View>\n-      <View style={styles.mainUI}>\n-        <Text>Hello World</Text>\n+      <View style={styles.mainUI, { backgroundColor: isDarkMode ? '#000' : '#f2f2f2' }}>\n+        <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n+          <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n+        </TouchableOpacity>\n+        <View style={styles.picont}>\n+          <Image style={styles.pic} source={require('../assets/images/pic1.png')} />\n+        </View>\n+        <Text style={[styles.made, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Made for Lucenahin</Text>\n+        <Text style={[styles.hassle, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Tricycle hassle free ride</Text>\n+        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\n+          <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\n+            {/* Background Circle */}\n+            <Circle\n+              cx={size / 2}\n+              cy={size / 2}\n+              r={radius}\n+              stroke=\"#5EA7C9\"\n+              strokeWidth={strokeWidth}\n+              fill=\"none\"\n+            />\n+            {/* Animated Progress Circle */}\n+            <AnimatedCircle\n+              cx={size / 2}\n+              cy={size / 2}\n+              r={radius}\n+              stroke=\"#00537A\"\n+              strokeWidth={strokeWidth}\n+              fill=\"none\"\n+              strokeDasharray={circumference}\n+              animatedProps={animatedProps}\n+              strokeLinecap=\"round\"\n+            />\n+          </Svg>\n+\n+          {/* Center Button */}\n+          <TouchableOpacity\n+            style={{\n+              position: \"absolute\",\n+              width: size * 0.8,\n+              height: size * 0.8,\n+              backgroundColor: \"#00537A\",\n+              borderRadius: 40,\n+              alignItems: \"center\",\n+              justifyContent: \"center\",\n+            }}\n+            onPress={() => router.push(\"/on_boarding/sechome\")}\n+          >\n+            <Ionicons name=\"arrow-forward\" size={32} color=\"white\" />\n+          </TouchableOpacity>\n+        </View>\n       </View>\n     </View>\n   );\n }\n@@ -39,5 +111,39 @@\n     backgroundColor: '#f2f2f2',\n     height: height,\n     width: width,\n   },\n+  skip: {\n+    padding: 10,\n+    fontSize: 18,\n+    fontFamily: \"Poppins-Regular\",\n+    color: \"#414141\",\n+    letterSpacing: 1,\n+    textAlign: 'right',\n+  },\n+  picont: {\n+    width: width,\n+    paddingTop: 50,\n+    backgroundColor: 'transparent',\n+  },\n+  pic: {\n+    width: width,\n+    height: width,\n+    backgroundColor: 'transparent',\n+  },\n+  made: {\n+    marginTop: -60,\n+    fontSize: 24,\n+    fontFamily: \"Poppins-Bold\",\n+    fontWeight: \"bold\",\n+    color: \"#414141\",\n+    textTransform: \"uppercase\",\n+    textAlign: \"center\",\n+  },\n+  hassle: {\n+    fontSize: 14,\n+    fontFamily: \"Poppins-Regular\",\n+    color: \"#A0A0A0\",\n+    textAlign: \"center\",\n+    marginTop: 5,\n+  },\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743945730947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,10 @@\n \n   const animatedProps = useAnimatedProps(() => ({\n     strokeDashoffset: circumference * (1 - progress.value),\n   }));\n-  export default function Index() {\n-    const colorScheme = useColorScheme(); // 👈 Get current mode (light or dark)\n-    const isDarkMode = colorScheme === 'dark';\n+  const colorScheme = useColorScheme(); // 👈 Get current mode (light or dark)\n+  const isDarkMode = colorScheme === 'dark';\n \n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n"
                },
                {
                    "date": 1743945785675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     <View>\n       <View style={{paddingTop: 40}}>\n         <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n       </View>\n-      <View style={styles.mainUI, { backgroundColor: isDarkMode ? '#000' : '#f2f2f2' }}>\n+      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? '#000' : '#f2f2f2' }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n         <View style={styles.picont}>\n"
                },
                {
                    "date": 1743945833703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n export default function Index() {\n   useEffect(() => {\n     async function loadApp() {\n       try {\n-        await new Promise(resolve => setTimeout(resolve, 2000));\n+        await new Promise(resolve => setTimeout(resolve, 2121212));\n       } catch (e) {\n         console.warn(e);\n       } finally {\n         await SplashScreen.hideAsync(); \n@@ -34,9 +34,9 @@\n \n   const progress = useSharedValue(0);\n   useEffect(() => {\n     progress.value = withTiming(0.33, {\n-      duration: 1000,\n+      duration: 1121212,\n       easing: Easing.linear,\n     });\n   }, []);\n \n@@ -50,9 +50,9 @@\n     <View>\n       <View style={{paddingTop: 40}}>\n         <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n       </View>\n-      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? '#000' : '#f2f2f2' }]}>\n+      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? '#121212' : '#f2f2f2' }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n         <View style={styles.picont}>\n"
                },
                {
                    "date": 1743945878929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     <View>\n       <View style={{paddingTop: 40}}>\n         <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n       </View>\n-      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? '#121212' : '#f2f2f2' }]}>\n+      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n         <View style={styles.picont}>\n"
                },
                {
                    "date": 1743946129663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n-        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n+      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743946158270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n-      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\n+        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743946165726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n-        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n+        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true}/>\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743946171559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n-        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true}/>\n+        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743946184311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n-        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"transparent\"/>\n+        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"dark\"/>\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743946191401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 40}}>\n-        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"dark\"/>\n+        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"black\"/>\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743946220137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n   const isDarkMode = colorScheme === 'dark';\n \n   return (\n     <View>\n-      <View style={{paddingTop: 40}}>\n+      <View style={{paddingTop: 30}}>\n         <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"black\"/>\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n"
                },
                {
                    "date": 1743946347436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 30}}>\n-        <StatusBar barStyle={isDarkMode ? \"light-content\" : \"dark-content\"} translucent={true} backgroundColor=\"black\"/>\n+      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743946355552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \n   return (\n     <View>\n       <View style={{paddingTop: 30}}>\n-      <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"black\" />\n+      <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743947564523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n export default function Index() {\n   useEffect(() => {\n     async function loadApp() {\n       try {\n-        await new Promise(resolve => setTimeout(resolve, 2121212));\n+        await new Promise(resolve => setTimeout(resolve, 2000));\n       } catch (e) {\n         console.warn(e);\n       } finally {\n         await SplashScreen.hideAsync(); \n@@ -42,15 +42,15 @@\n \n   const animatedProps = useAnimatedProps(() => ({\n     strokeDashoffset: circumference * (1 - progress.value),\n   }));\n-  const colorScheme = useColorScheme(); // 👈 Get current mode (light or dark)\n+  const colorScheme = useColorScheme();\n   const isDarkMode = colorScheme === 'dark';\n \n   return (\n     <View>\n       <View style={{paddingTop: 30}}>\n-      <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1743947589540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n export default function Index() {\n   useEffect(() => {\n     async function loadApp() {\n       try {\n-        await new Promise(resolve => setTimeout(resolve, 2000));\n+        const isDev = __DEV__;\n+        await new Promise(resolve => setTimeout(resolve, isDev ? 500 : 2000));\n       } catch (e) {\n         console.warn(e);\n       } finally {\n         await SplashScreen.hideAsync(); \n"
                },
                {
                    "date": 1743947683828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \n   const progress = useSharedValue(0);\n   useEffect(() => {\n     progress.value = withTiming(0.33, {\n-      duration: 1121212,\n+      duration: 1000,\n       easing: Easing.linear,\n     });\n   }, []);\n \n"
                },
                {
                    "date": 1743947836194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,8 +110,9 @@\n   mainUI:{\n     backgroundColor: '#f2f2f2',\n     height: height,\n     width: width,\n+    paddingBottom: 10,\n   },\n   skip: {\n     padding: 10,\n     fontSize: 18,\n"
                },
                {
                    "date": 1743947858281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n }\n const styles = StyleSheet.create({\n   mainUI:{\n     backgroundColor: '#f2f2f2',\n-    height: height,\n+    height: height + 10,\n     width: width,\n     paddingBottom: 10,\n   },\n   skip: {\n"
                },
                {
                    "date": 1743948427548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,15 +53,15 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n-          <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\n+          <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n         <View style={styles.picont}>\n           <Image style={styles.pic} source={require('../assets/images/pic1.png')} />\n         </View>\n-        <Text style={[styles.made, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Made for Lucenahin</Text>\n-        <Text style={[styles.hassle, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Tricycle hassle free ride</Text>\n+        <Text style={[styles.made, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Made for Lucenahin</Text>\n+        <Text style={[styles.hassle, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Tricycle hassle free ride</Text>\n         <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\n           <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\n             {/* Background Circle */}\n             <Circle\n@@ -110,9 +110,8 @@\n   mainUI:{\n     backgroundColor: '#f2f2f2',\n     height: height + 10,\n     width: width,\n-    paddingBottom: 10,\n   },\n   skip: {\n     padding: 10,\n     fontSize: 18,\n"
                },
                {
                    "date": 1743949919196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     <View>\n       <View style={{paddingTop: 30}}>\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n-      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\n+      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n         <View style={styles.picont}>\n"
                },
                {
                    "date": 1745842275283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,171 @@\n+import React, { useEffect, useState } from \"react\";\n+import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\n+import { StyleSheet, SafeAreaView, useColorScheme} from \"react-native\";\n+import Svg, { Circle } from \"react-native-svg\";\n+import * as SplashScreen from \"expo-splash-screen\";\n+import { useRouter } from \"expo-router\";\n+import Animated, {useSharedValue, useAnimatedProps, withTiming, Easing,} from \"react-native-reanimated\";\n+import { Ionicons } from \"@expo/vector-icons\";\n+import * as Location from \"expo-location\";\n+const { width } = Dimensions.get('window');\n+const { height } = Dimensions.get('window');\n+const size = 80; \n+const strokeWidth = 6;\n+const radius = (size - strokeWidth) / 2;\n+const circumference = 2 * Math.PI * radius;\n+const AnimatedCircle = Animated.createAnimatedComponent(Circle);\n+\n+SplashScreen.preventAutoHideAsync(); \n+\n+export default function Index() {\n+  useEffect(() => {\n+    async function loadApp() {\n+      try {\n+        const isDev = __DEV__;\n+        await new Promise(resolve => setTimeout(resolve, isDev ? 500 : 2000));\n+      } catch (e) {\n+        console.warn(e);\n+      } finally {\n+        await SplashScreen.hideAsync(); \n+      }\n+    }\n+    loadApp();\n+  }, []);\n+\n+  const router = useRouter();\n+\n+  const progress = useSharedValue(0);\n+  useEffect(() => {\n+    progress.value = withTiming(0.33, {\n+      duration: 1000,\n+      easing: Easing.linear,\n+    });\n+  }, []);\n+\n+  const animatedProps = useAnimatedProps(() => ({\n+    strokeDashoffset: circumference * (1 - progress.value),\n+  }));\n+  const colorScheme = useColorScheme();\n+  const isDarkMode = colorScheme === 'dark';\n+  const handleLocationFlow = async () => {\n+      try {\n+        const { status } = await Location.getForegroundPermissionsAsync();\n+        const isEnabled = await Location.hasServicesEnabledAsync();\n+    \n+        if (status === \"granted\" && isEnabled) {\n+          // Location is already enabled, go directly to welcome\n+          router.push(\"/location/welcome\");\n+        } else {\n+          // Location not enabled, show the enable location page\n+          router.push(\"/location/EL\");\n+        }\n+      } catch (error) {\n+        console.warn(\"Location check failed:\", error);\n+        router.push(\"/location/EL\"); // fallback\n+      }\n+    };\n+    \n+\n+  return (\n+    <View>\n+      <View style={{paddingTop: 30}}>\n+        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n+      </View>\n+      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n+        <TouchableOpacity onPress={handleLocationFlow}>\n+          <Text style={[styles.admin, { color: isDarkMode ? \"#414141\" : \"#f2f2f2\" }]}>Skip</Text>\n+        </TouchableOpacity>\n+        <TouchableOpacity onPress={handleLocationFlow}>\n+          <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n+        </TouchableOpacity>\n+        <View style={styles.picont}>\n+          <Image style={styles.pic} source={require('../assets/images/pic1.png')} />\n+        </View>\n+        <Text style={[styles.made, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Made for Lucenahin</Text>\n+        <Text style={[styles.hassle, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Tricycle hassle free ride</Text>\n+        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\n+          <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\n+            {/* Background Circle */}\n+            <Circle\n+              cx={size / 2}\n+              cy={size / 2}\n+              r={radius}\n+              stroke=\"#5EA7C9\"\n+              strokeWidth={strokeWidth}\n+              fill=\"none\"\n+            />\n+            {/* Animated Progress Circle */}\n+            <AnimatedCircle\n+              cx={size / 2}\n+              cy={size / 2}\n+              r={radius}\n+              stroke=\"#00537A\"\n+              strokeWidth={strokeWidth}\n+              fill=\"none\"\n+              strokeDasharray={circumference}\n+              animatedProps={animatedProps}\n+              strokeLinecap=\"round\"\n+            />\n+          </Svg>\n+\n+          {/* Center Button */}\n+          <TouchableOpacity\n+            style={{\n+              position: \"absolute\",\n+              width: size * 0.8,\n+              height: size * 0.8,\n+              backgroundColor: \"#00537A\",\n+              borderRadius: 40,\n+              alignItems: \"center\",\n+              justifyContent: \"center\",\n+            }}\n+            onPress={() => router.push(\"/on_boarding/sechome\")}\n+          >\n+            <Ionicons name=\"arrow-forward\" size={32} color=\"white\" />\n+          </TouchableOpacity>\n+        </View>\n+      </View>\n+    </View>\n+  );\n+}\n+const styles = StyleSheet.create({\n+  mainUI:{\n+    backgroundColor: '#f2f2f2',\n+    height: height + 10,\n+    width: width,\n+  },\n+  skip: {\n+    padding: 10,\n+    paddingTop: 20,\n+    fontSize: 18,\n+    fontFamily: \"Poppins-Regular\",\n+    color: \"#414141\",\n+    letterSpacing: 1,\n+    textAlign: 'right',\n+  },\n+  picont: {\n+    width: width,\n+    paddingTop: 50,\n+    backgroundColor: 'transparent',\n+  },\n+  pic: {\n+    width: width,\n+    height: width,\n+    backgroundColor: 'transparent',\n+  },\n+  made: {\n+    fontSize: 24,\n+    fontFamily: \"Poppins-Bold\",\n+    fontWeight: \"bold\",\n+    color: \"#414141\", \n+    textTransform: \"uppercase\",\n+    textAlign: \"center\",\n+  },\n+  hassle: {\n+    fontSize: 14,\n+    fontFamily: \"Poppins-Regular\",\n+    color: \"#A0A0A0\",\n+    textAlign: \"center\",\n+    marginTop: 5,\n+  },\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745842284996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={handleLocationFlow}>\n-          <Text style={[styles.admin, { color: isDarkMode ? \"#414141\" : \"#f2f2f2\" }]}>Skip</Text>\n+          <Text style={[styles.admin, { color: isDarkMode ? \"#414141\" : \"#f2f2f2\" }]}>admin</Text>\n         </TouchableOpacity>\n         <TouchableOpacity onPress={handleLocationFlow}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n@@ -167,154 +167,5 @@\n     color: \"#A0A0A0\",\n     textAlign: \"center\",\n     marginTop: 5,\n   },\n-})\n-import React, { useEffect, useState } from \"react\";\n-import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\n-import { StyleSheet, SafeAreaView, useColorScheme} from \"react-native\";\n-import Svg, { Circle } from \"react-native-svg\";\n-import * as SplashScreen from \"expo-splash-screen\";\n-import { useRouter } from \"expo-router\";\n-import Animated, {useSharedValue, useAnimatedProps, withTiming, Easing,} from \"react-native-reanimated\";\n-import { Ionicons } from \"@expo/vector-icons\";\n-const { width } = Dimensions.get('window');\n-const { height } = Dimensions.get('window');\n-const size = 80; \n-const strokeWidth = 6;\n-const radius = (size - strokeWidth) / 2;\n-const circumference = 2 * Math.PI * radius;\n-const AnimatedCircle = Animated.createAnimatedComponent(Circle);\n-\n-SplashScreen.preventAutoHideAsync(); \n-\n-export default function Index() {\n-  useEffect(() => {\n-    async function loadApp() {\n-      try {\n-        const isDev = __DEV__;\n-        await new Promise(resolve => setTimeout(resolve, isDev ? 500 : 2000));\n-      } catch (e) {\n-        console.warn(e);\n-      } finally {\n-        await SplashScreen.hideAsync(); \n-      }\n-    }\n-    loadApp();\n-  }, []);\n-\n-  const router = useRouter();\n-\n-  const progress = useSharedValue(0);\n-  useEffect(() => {\n-    progress.value = withTiming(0.33, {\n-      duration: 1000,\n-      easing: Easing.linear,\n-    });\n-  }, []);\n-\n-  const animatedProps = useAnimatedProps(() => ({\n-    strokeDashoffset: circumference * (1 - progress.value),\n-  }));\n-  const colorScheme = useColorScheme();\n-  const isDarkMode = colorScheme === 'dark';\n-\n-  return (\n-    <View>\n-      <View style={{paddingTop: 30}}>\n-        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n-      </View>\n-      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n-        <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\n-          <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n-        </TouchableOpacity>\n-        <View style={styles.picont}>\n-          <Image style={styles.pic} source={require('../assets/images/pic1.png')} />\n-        </View>\n-        <Text style={[styles.made, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Made for Lucenahin</Text>\n-        <Text style={[styles.hassle, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Tricycle hassle free ride</Text>\n-        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\n-          <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\n-            {/* Background Circle */}\n-            <Circle\n-              cx={size / 2}\n-              cy={size / 2}\n-              r={radius}\n-              stroke=\"#5EA7C9\"\n-              strokeWidth={strokeWidth}\n-              fill=\"none\"\n-            />\n-            {/* Animated Progress Circle */}\n-            <AnimatedCircle\n-              cx={size / 2}\n-              cy={size / 2}\n-              r={radius}\n-              stroke=\"#00537A\"\n-              strokeWidth={strokeWidth}\n-              fill=\"none\"\n-              strokeDasharray={circumference}\n-              animatedProps={animatedProps}\n-              strokeLinecap=\"round\"\n-            />\n-          </Svg>\n-\n-          {/* Center Button */}\n-          <TouchableOpacity\n-            style={{\n-              position: \"absolute\",\n-              width: size * 0.8,\n-              height: size * 0.8,\n-              backgroundColor: \"#00537A\",\n-              borderRadius: 40,\n-              alignItems: \"center\",\n-              justifyContent: \"center\",\n-            }}\n-            onPress={() => router.push(\"/on_boarding/sechome\")}\n-          >\n-            <Ionicons name=\"arrow-forward\" size={32} color=\"white\" />\n-          </TouchableOpacity>\n-        </View>\n-      </View>\n-    </View>\n-  );\n-}\n-const styles = StyleSheet.create({\n-  mainUI:{\n-    backgroundColor: '#f2f2f2',\n-    height: height + 10,\n-    width: width,\n-  },\n-  skip: {\n-    padding: 10,\n-    fontSize: 18,\n-    fontFamily: \"Poppins-Regular\",\n-    color: \"#414141\",\n-    letterSpacing: 1,\n-    textAlign: 'right',\n-  },\n-  picont: {\n-    width: width,\n-    paddingTop: 50,\n-    backgroundColor: 'transparent',\n-  },\n-  pic: {\n-    width: width,\n-    height: width,\n-    backgroundColor: 'transparent',\n-  },\n-  made: {\n-    marginTop: -60,\n-    fontSize: 24,\n-    fontFamily: \"Poppins-Bold\",\n-    fontWeight: \"bold\",\n-    color: \"#414141\",\n-    textTransform: \"uppercase\",\n-    textAlign: \"center\",\n-  },\n-  hassle: {\n-    fontSize: 14,\n-    fontFamily: \"Poppins-Regular\",\n-    color: \"#A0A0A0\",\n-    textAlign: \"center\",\n-    marginTop: 5,\n-  },\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745842295767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={handleLocationFlow}>\n-          <Text style={[styles.admin, { color: isDarkMode ? \"#414141\" : \"#f2f2f2\" }]}>admin</Text>\n+          <Text style={[styles.admin, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n         </TouchableOpacity>\n         <TouchableOpacity onPress={handleLocationFlow}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n"
                },
                {
                    "date": 1745842309126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={handleLocationFlow}>\n-          <Text style={[styles.admin, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n+          <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n         </TouchableOpacity>\n         <TouchableOpacity onPress={handleLocationFlow}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n"
                },
                {
                    "date": 1745842315276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <TouchableOpacity onPress={handleLocationFlow}>\n-          <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n+          <Text style={[styles.admin, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n         </TouchableOpacity>\n         <TouchableOpacity onPress={handleLocationFlow}>\n           <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n         </TouchableOpacity>\n"
                },
                {
                    "date": 1745842326046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,8 +133,17 @@\n     backgroundColor: '#f2f2f2',\n     height: height + 10,\n     width: width,\n   },\n+  admin: {\n+    padding: 10,\n+    paddingTop: 20,\n+    fontSize: 18,\n+    fontFamily: \"Poppins-Regular\",\n+    color: \"#414141\",\n+    letterSpacing: 1,\n+    textAlign: 'right',\n+  },\n   skip: {\n     padding: 10,\n     paddingTop: 20,\n     fontSize: 18,\n"
                },
                {
                    "date": 1745842380275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,14 +71,17 @@\n       <View style={{paddingTop: 30}}>\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n-        <TouchableOpacity onPress={handleLocationFlow}>\n-          <Text style={[styles.admin, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n-        </TouchableOpacity>\n-        <TouchableOpacity onPress={handleLocationFlow}>\n-          <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n-        </TouchableOpacity>\n+        <View style={{flexDirection:'row'}}>\n+          <TouchableOpacity onPress={handleLocationFlow}>\n+            <Text style={[styles.admin, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n+          </TouchableOpacity>\n+          <TouchableOpacity onPress={handleLocationFlow}>\n+            <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n+          </TouchableOpacity>\n+        </View>\n+        \n         <View style={styles.picont}>\n           <Image style={styles.pic} source={require('../assets/images/pic1.png')} />\n         </View>\n         <Text style={[styles.made, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Made for Lucenahin</Text>\n"
                },
                {
                    "date": 1745842394574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n       <View style={{paddingTop: 30}}>\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n-        <View style={{flexDirection:'row'}}>\n+        <View style={{flexDirection:'row', justifyContent:'space-between'}}>\n           <TouchableOpacity onPress={handleLocationFlow}>\n             <Text style={[styles.admin, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n           </TouchableOpacity>\n           <TouchableOpacity onPress={handleLocationFlow}>\n"
                },
                {
                    "date": 1745842414559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <View style={{flexDirection:'row', justifyContent:'space-between'}}>\n           <TouchableOpacity onPress={handleLocationFlow}>\n-            <Text style={[styles.admin, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>admin</Text>\n+            <Text style={[styles.admin, { color: isDarkMode ? \"#414141\" : \"#f2f2f2\" }]}>admin</Text>\n           </TouchableOpacity>\n           <TouchableOpacity onPress={handleLocationFlow}>\n             <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n           </TouchableOpacity>\n"
                },
                {
                    "date": 1745842475049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <View style={{flexDirection:'row', justifyContent:'space-between'}}>\n-          <TouchableOpacity onPress={handleLocationFlow}>\n+          <TouchableOpacity onPress={() => router.push(\"/login_and_reg/alogin\")}>\n             <Text style={[styles.admin, { color: isDarkMode ? \"#414141\" : \"#f2f2f2\" }]}>admin</Text>\n           </TouchableOpacity>\n           <TouchableOpacity onPress={handleLocationFlow}>\n             <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n"
                },
                {
                    "date": 1745842497865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n       </View>\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\n         <View style={{flexDirection:'row', justifyContent:'space-between'}}>\n           <TouchableOpacity onPress={() => router.push(\"/login_and_reg/alogin\")}>\n-            <Text style={[styles.admin, { color: isDarkMode ? \"#414141\" : \"#f2f2f2\" }]}>admin</Text>\n+            <Text style={[styles.admin, { color: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>admin</Text>\n           </TouchableOpacity>\n           <TouchableOpacity onPress={handleLocationFlow}>\n             <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\n           </TouchableOpacity>\n"
                }
            ],
            "date": 1742703640301,
            "name": "Commit-0",
            "content": "import { Text, View } from \"react-native\";\n\nexport default function Index() {\n  return (\n    <View></View>\n  );\n}\n"
        }
    ]
}